<project name="tomcat-docs" default="build-main" basedir=".">


  <!-- ===================== Initialize Property Values =================== -->

  <!-- See "build.properties.sample" in the top level directory for all     -->
  <!-- property values you must customize for successful building!!!        -->
  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="../../build.properties"/>
  <property file="${user.home}/build.properties"/>

  <property name="build.compiler"  value="modern"/>
  <property name="build.dir"   value="../build"/>
  <property name="dist.dir"    value="../dist"/>
  <property name="dist.name"     value="docs"/>


  <!-- =================== BUILD: Create Directories ====================== -->
  <target name="build-prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/${dist.name}"/>
  </target>


  <!-- ================ BUILD: Copy Static Files ========================== -->
  <target name="build-static" depends="build-prepare">

    <!-- Top Level Static Files -->
    <copy    todir="${build.dir}/${dist.name}">
      <fileset dir=".">
        <include name="BUILDING.txt"/>
        <include name="README.txt"/>
        <include name="RUNNING.txt"/>
        <include name="style.css"/>
      </fileset>
    </copy>
    <copy    todir="${build.dir}/${dist.name}">
      <fileset dir="." includes="**/*.html"/>
    </copy>

    <!-- Images Subdirectory -->
    <mkdir     dir="${build.dir}/${dist.name}/images"/>
    <copy    todir="${build.dir}/${dist.name}/images">
      <fileset dir="images"/>
    </copy>

    <mkdir     dir="${build.dir}/${dist.name}/printer"/>
    <!-- Top Level Static Files -->
    <copy    todir="${build.dir}/${dist.name}/printer">
      <fileset dir=".">
        <include name="BUILDING.txt"/>
        <include name="README.txt"/>
        <include name="RUNNING.txt"/>
      </fileset>
    </copy>
    <style basedir="."
           destdir="${build.dir}/${dist.name}/printer"
         extension=".html"
             style="style.xsl"
          excludes="build.xml project.xml"
          includes="*.xml">
      <param name="relative-path" expression="./.."/>
      <param name="project-menu" expression="nomenu"/>
    </style>

    <!-- News -->
    <style basedir="news"
           destdir="${build.dir}/${dist.name}/news"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>
    <mkdir     dir="${build.dir}/${dist.name}/news/printer"/>
    <style basedir="news"
           destdir="${build.dir}/${dist.name}/news/printer"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression="../.."/>
      <param name="project-menu" expression="nomenu"/>
    </style>

    <!-- Common -->
    <style basedir="common"
           destdir="${build.dir}/${dist.name}/common"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>
    <mkdir     dir="${build.dir}/${dist.name}/common/printer"/>
    <style basedir="common"
           destdir="${build.dir}/${dist.name}/common/printer"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression="../.."/>
      <param name="project-menu" expression="nomenu"/>
    </style>

    <!-- Howto -->
    <style basedir="howto"
           destdir="${build.dir}/${dist.name}/howto"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>
    <mkdir     dir="${build.dir}/${dist.name}/howto/printer"/>
    <style basedir="howto"
           destdir="${build.dir}/${dist.name}/howto/printer"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression="../.."/>
      <param name="project-menu" expression="nomenu"/>
    </style>

    <!-- Config -->
    <style basedir="config"
           destdir="${build.dir}/${dist.name}/config"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>
    <mkdir     dir="${build.dir}/${dist.name}/config/printer"/>
    <style basedir="config"
           destdir="${build.dir}/${dist.name}/config/printer"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression="../.."/>
      <param name="project-menu" expression="nomenu"/>
    </style>
 
     <!-- Install -->
    <style basedir="install"
           destdir="${build.dir}/${dist.name}/install"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>
    <mkdir     dir="${build.dir}/${dist.name}/install/printer"/>
    <style basedir="install"
           destdir="${build.dir}/${dist.name}/install/printer"
         extension=".html"
             style="style.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression="../.."/>
      <param name="project-menu" expression="nomenu"/>
    </style>

  </target>


  <!-- ================= BUILD: XML-HTML Generation ======================= -->
  <target name="build-main" depends="build-static">

    <!-- Top Level Directory -->
    <style basedir="."
           destdir="${build.dir}/${dist.name}"
         extension=".html"
             style="style.xsl"
          excludes="build.xml project.xml"
          includes="*.xml">
      <param name="relative-path" expression="."/>
    </style>

  </target>


  <!-- ==================== BUILD: Rebuild Everything ===================== -->
  <target name="all" depends="build-clean,build-main"
   description="Clean and build documentation"/>


  <!-- ======================= BUILD: Clean Directory ===================== -->
  <target name="build-clean">
    <delete dir="${build.dir}/${dist.name}"/>
  </target>


  <!-- ======================= DIST: Create Directories =================== -->
  <target name="dist-prepare">
    <mkdir dir="${dist.dir}"/>
  </target>


  <!-- ======================= DIST: Create Distribution Files ============ -->
  <target name="dist" depends="build-main,dist-prepare"
   description="Create documentation binary distribution">
      <jar   jarfile="${dist.dir}/${dist.name}.war"
             basedir="${build.dir}/${dist.name}" includes="**"/>
  </target>


  <!-- ======================= DIST: Clean Directory ====================== -->
  <target name="dist-clean">
    <delete dir="${dist.dir}/${dist.name}"/>
  </target>


  <!-- ====================== Convenient Synonyms ========================= -->
  <target name="clean" depends="build-clean,dist-clean"
   description="Clean build and dist directories"/>


</project>
