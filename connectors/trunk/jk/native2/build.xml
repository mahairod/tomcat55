<?xml version="1.0" ?>

<project name="jk_native2" default="main" basedir=".">

  <description>Build the native component of jk.</description>
  
  <property file="${user.home}/.ant.properties" />
  <property file="${user.home}/build.properties" />
  <property file="build.properties.${os.arch}.${os.name}" />
  <property file="build.properties" />
  <property file="../build.properties" />

  <!-- ========== Local paths, overriden in build.properties ========== -->

  <property name="netscape.home" location="${iplanet.home}/plugins" />
  <property name="apache2.home" location="/opt/apache2" />
  <!-- That's the default RedHat package -->
  <property name="apache13.home" location="/usr" />
  
  <property name="apache2.include" location="${apache2.home}/include" />
  <!-- No!!! otherwise apache13 will think we have APR for it...
  <property name="apr.include" location="${apache2.home}/include" />
   -->
  <property name="apache13.include" location="${apache13.home}/include" />

  <!-- Uncomment if you want to use APR in apache1.3 
  <property name="APACHE13_APR" value="true" />
    -->
 
  <!-- Override it in build.properties if using windows and a 
       different location. I think that's the defaul location for msdev -->
  <property name="mssdk.home" 
            location="c:/Program Files/Microsoft Visual Studio/VC98"/>

  <property name="mw.home" location="d:/tools/mw/6.0" />
  <property name="novellndk.home" location="d:/tools/novell/ndk/nwsdk" />


  <!-- ========== Build options ========== -->

  <!-- Use the jni worker and libs whenever possible -->    
  <property name="use.jni" value="true" />
  <!-- Use apr whenever possible -->    
  <property name="use.apr" value="true" />
  
  <property name="so.debug" value="true" />
  <property name="so.optimize" value="false" />
  <property name="so.profile" value="false" />

  <!-- ========== local properties ========== -->
 
  <!-- Base dir for jk sources -->
  <property name="jk.src" location=".." />
  <property name="jk.build" location="../build" />

  <property name="native.dir" location="${jk.src}/native2" />

  <property name="build.dir" location="${jk.build}/jk2" />

  <path id="jkant" >
    <pathelement location="${jk.build}/lib/jkant.jar"/>
  </path>

  <!-- ==================== Targets ==================== -->

  <target name="main" depends="init,apache20,apache13,jni">
  </target>

  <target name="all" depends="jkant,init,apache20,apache13,jni">
  </target>

  <target name="guess.env" >
    <echo message="build.properties ${os.arch}.${os.name}" />
    <taskdef resource="META-INF/ant.tasks" 
	     classpathref="jkant" />

    <available property="HAS_APR" file="${apr.include}/apr.h" />
    <available property="apache13.detect" 
               file="${apache13.home}/bin/htpasswd" />
    <available property="apache2.detect" 
               file="${apache2.home}" />
    <available property="iis.detect" 
               file="${iis.home}" />
    <available property="iplanet.detect" 
               file="${iplanet.home}" />

    <condition property="linux">
       <equals arg1="${os.name}" arg2="Linux"/>
    </condition>
    <condition property="win32">
      <os family="windows"/>
    </condition>
    <condition property="hpux">
      <equals arg1="${os.name}" arg2="???"/>
    </condition>
    <condition property="solaris">
      <equals arg1="${os.name}" arg2="???"/>
    </condition>

    <!-- I believe they are using cross-compilation, so checking the os.name
         doesn't help. We'll check if the NDK is installed instead -->
    <condition property="netware">
      <available file="novellndk.home" />
    </condition>

    <echo message="Apache2 ${apache2.home} ${apache2.detect}" />
    <echo message="Apache13 ${apache13.home} ${apache13.detect}" />
    <echo message="IIS ${iis.home} ${iis.detect}" />
    <echo message="Iplanet ${iplanet.home} ${iplanet.detect}" />
    <echo message="" />
    <echo message="Linux:${linux} Win32:${win32} Netware:${netware}" />
  </target>

  <target name="init.win32" if="win32" >
    <property name="build.compiler.base" location="${mssdk.home}" />
    <property name="build.compiler.cc" location="${mssdk.home}/bin/cl" />
    <property name="build.compiler.ld" location="${mssdk.home}/bin/link" />
  </target>

  <target name="init.netware" if="netware" >
    <property name="build.compiler.base" location="${mw.home}" />
    <property name="build.compiler.cc" location="${build.compiler.base}/bin/mwccnlm" />
    <property name="build.compiler.ld" location="${build.compiler.base}/bin/mwldnlm" />
    <property name="novelllibc.dir" location="${novellndk.home}/libc" />
  </target>

  <target name="init" depends="guess.env,init.win32,init.netware" >
    <mkdir dir="${build.dir}" />
  </target>

  <target name="jkant" >
    <ant dir="${jk.src}" target="jkant"/>
  </target>

  <target name="apache20" depends="init" if="apache2.detect">
    <property name="apr.include" location="${apache2.home}/include" />
    <mkdir dir="${build.dir}/apache2" />
    <so sofile="mod_jk2" 
	buildDir="${build.dir}/apache2"
	optimize="${so.optimize}"
	debug="${so.debug}"
	taskDebug="0"
	profile="${so.profile}"	>
      <def name="_REENTRANT" />
      <def name="CHUNK_SIZE" value="4096" 
	   info="Read/Write buffer size" />
      <def name="USE_APACHE_MD5" 
	   info="Use the MD5 implementation that is part of apache2" />
      <def name="HAS_APR"
	   info="Allow APR specific extensions" />
      <def name="HAVE_JNI" 
	   info="Jni worker" />
      <def name="HPUX11" if="hpux" />
      <def name="WIN32" if="win32" />
      <def name="_WINDOWS" if="win32" />
      <def name="_MBCS" if="win32" />
      <def name="_USRDLL" if="win32" />
      <def name="MOD_JK2_EXPORTS" if="win32" />
      <src dir=".">
	<include name="server/apache2/*.c" />
	<include name="common/*.c" />
	<include name="jni/*.c" />
      </src>
      <includes>
	<include name="${native.dir}/common" />
	<include name="${apache2.include}" />
	<include name="${apr.include}" />
	<include name="${apr-util.include}" />
	<include name="${native.dir}/include" />
	<include name="${java.home}/../include" />
        <include name="${java.home}/../include/linux" if="linux" />
        <include name="${java.home}/../include/hp-ux" if="hpux" />        
        <include name="${java.home}/../include/win32" if="win32" />        
        <include name="&quot;${mssdk.home}/include&quot;" if="win32"/>
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
	<fileset dir="${native.dir}/include" includes="*.h" />
      </depends>
      <import fileName="libhttpd.lib" if="win32" />
      <import fileName="libapr.lib" if="win32" />
      <import fileName="libaprutil.lib" if="win32" />
      <!-- import fileName="wsock32.lib" if="win32" />
      <import fileName="kernel32.lib" if="win32" />
      <import fileName="user32.lib" if="win32" />
      <import fileName="gdi32.lib" if="win32" />
      <import fileName="winspool.lib" if="win32" />
      <import fileName="comdlg32.lib" if="win32" /-->
      <linkOpt value="/libpath:&quot;${build.compiler.base}/lib&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${apr.lib}&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${apr-util.lib}&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${apache2.lib}&quot;" if="win32" />
    </so>
  </target>
  
  <target name="jni" depends="init">
    <mkdir dir="${build.dir}/jni" />
    <!-- can be overriden -->
    <property name="apr.home" location="${apache2.home}" />
    <property name="apr.include" location="${apr.home}/include" />
    <property name="apr.lib" location="${apr.home}/lib" />
    <so sofile="libjkjni" 
	buildDir="${build.dir}/jni" 
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}" >
      <src dir="${native.dir}">
	<include name="jni/*.c" />
	<include name="common/*.c" />
        <exclude name="common/jk_nwmain.c" unless="netware" />
      </src>
      <includes>
	<include name="${native.dir}/common" />
	<include name="${native.dir}/jni" />
	<include name="${native.dir}/include" />
	<include name="${java.home}/../include" />
	<include name="${build.compiler.base}/include" />
	<include name="${apr.include}" />
        
        <!-- Platform specific includes -->
	<include name="${novellndk.home}/include/nlm" if="netware" />
	<include name="${novellndk.home}/include" if="netware" />
        <include name="${java.home}/../include/netware" if="netware" />
        
        <include name="${java.home}/../include/win32" if="win32" />
        <include name="${java.home}/../include/linux" if="linux" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
	<fileset dir="${native.dir}/include" includes="*.h" />
      </depends>
      
      <!-- Platform-specific tags -->
      <linkOpt value="-lcrypt" if="linux" />
      <linkOpt value="-L${apr.lib}" if="linux" />
      <linkOpt value="-lapr" if="linux" />

      <altSoFile value="jni_conn" if="netware" />
      
      <def name="N_PLAT_NLM" if="netware"
	   info="Building for NetWare platform" />
      <def name="NETWARE" if="netware"
	   info="Building for NetWare platform" />
      <def name="XP_NETWARE" if="netware"
	   info="Building for NetWare platform" />
      <def name="HAS_APR"
	   info="JNI is no based on APR" />
      <def name="HAVE_JNI" />
           
      <import fileName="${novellndk.home}/imports/clib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/lib0.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/nlmlib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/threads.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/socklib.imp" if="netware" />
      <export fileName="${native.dir}/jni/jk_jnicb.exp" if="netware" />
      <linkOpt value="-desc &quot;JNI Natives for Tomcat&quot;" if="netware" />
      <linkOpt value="-screenname &quot;System Console&quot;" if="netware" />
      <linkOpt value="-nlmversion 1,20,2" if="netware" />
      <linkOpt value="-threadname &quot;JK_JNI Thread&quot;" if="netware" />
      <linkOpt value="-stacksize 64000" if="netware" />
      
      <def name="HPUX11" if="hpux" />
      <def name="WIN32" if="win32" />
      <def name="NDEBUG" if="win32.release" />
      <def name="_DEBUG" if="win32.debug" />
      <def name="_WINDOWS" if="win32" />
      <def name="_MBCS" if="win32" />
      <def name="_USRDLL" if="win32" />
      <def name="JNI_CONNECT_EXPORTS" if="win32" />
      <linkOpt value="/libpath:&quot;${build.compiler.base}/lib&quot;" if="win32" />
    </so>
  </target>


  <target name="apache13" depends="init" if="apache13.detect">
    <mkdir dir="${jk.build}/jk2/apache13" />
    <so sofile="mod_jk2" 
	buildDir="${jk.build}/jk2/apache13"
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}">

      <src dir=".">
	<include name="server/apache13/*.c" />
	<include name="common/*.c" />
        <exclude name="jk_nwmain.c" unless="netware" />
        <exclude name="common/jk_pool_apr.c" unless="APACHE13_APR" />
        <exclude name="common/jk_channel_apr_socket.c" unless="APACHE13_APR" />
      </src>
      <includes>
	<include name="${native.dir}/include" />
	<include name="${native.dir}/common" />
	<include name="${build.compiler.base}/include" />
	<include name="${apache13.include}" />
        <!-- Redhat package -->
	<include name="${apache13.home}/include/apache" />
	<include name="${native.dir}/include" />
	<include name="${java.home}/../include" />

        <!-- Platform specific includes -->
	<include name="${apache13.home}/os/netware" if="netware" />
	<include name="${novellndk.home}/include/nlm" if="netware" />
	<include name="${novellndk.home}/include" if="netware" />
	<include name="${novellndk.home}/include/winsock" if="netware" />
        <include name="${java.home}/../include/netware" if="netware" />
                 
	<include name="${apache13.home}/os/win32" if="win32" />
        <include name="${java.home}/../include/win32" if="win32" />
        <include name="${native.dir}/common" if="win32" />
        <include name="${java.home}/../include/hp-ux" if="hpux" />        
        <include name="${java.home}/../include/linux" if="linux" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
      </depends>

      <def name="EAPI" info="Building with EAPI support " />

      <!-- Platform-specific tags -->
      <def name="N_PLAT_NLM" if="netware"
	   info="Building for NetWare platform" />
      <def name="NETWARE" if="netware"
	   info="Building for NetWare platform" />
      <def name="XP_NETWARE" if="netware"
	   info="Building for NetWare platform" />
      <def name="USE_SPRINTF" if="netware"
	   info="Use the sprintf function to build strings" />
           
      <def name="HAVE_MMAP" unless="win32" />
      <def name="WIN32" if="win32" />
      <def name="_WINDOWS" if="win32" />
      <def name="_MBCS" if="win32" />
      <def name="_USRDLL" if="win32" />
      <def name="MOD_JK_EXPORTS" if="win32" />
      
      <nlmmodule value="apache" if="netware" />
      <import fileName="${novellndk.home}/imports/clib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/lib0.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/nlmlib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/threads.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/socklib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/ws2nlm.imp" if="netware" />
      <import fileName="${apache13.home}/os/netware/ApacheCore.imp" if="netware" />
      <export symbol="jk_module" if="netware" />
      <linkOpt value="-desc &quot;Apache 1.3 plugin for Tomcat&quot;" if="netware" />
      <linkOpt value="-screenname &quot;System Console&quot;" if="netware" />
      <linkOpt value="-nlmversion 1,20,2" if="netware" />
      <linkOpt value="-threadname &quot;mod_jk Thread&quot;" if="netware" />
      <linkOpt value="-stacksize 64000" if="netware" />
      
      <import fileName="ApacheCore.lib" if="win32" />
      <import fileName="wsock32.lib" if="win32" />
      <import fileName="kernel32.lib" if="win32" />
      <import fileName="user32.lib" if="win32" />
      <import fileName="gdi32.lib" if="win32" />
      <import fileName="winspool.lib" if="win32" />
      <import fileName="comdlg32.lib" if="win32" />
      <linkOpt value="/libpath:&quot;${build.compiler.base}/lib&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${apache13.home}/CoreR&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${apache13.home}/Release&quot;" if="win32" />
    </so>
  </target>

  <target name="iis" depends="init" if="iis.detect">
    <mkdir dir="${build.dir}/isapi" />
    <so sofile="isapi_redirector2" 
        buildDir="${build.dir}/isapi"
        optimize="${so.optimize}"
        debug="${so.debug}"
        profile="${so.profile}">
        
      <src dir=".">
        <include name="server/isapi/*.c" />
        <include name="common/*.c" />
        <exclude name="common/jk_channel_apr_socket.c"/>
        <exclude name="common/jk_pool_apr.c"/>
        <exclude name="jk_nwmain.c" unless="netware" />
	<include name="jni/*.c" />
        <exclude name="jk_apr.c" unless="netware" />
      </src>
      <includes>
        <include name="${java.home}/../include" />
	<include name="${native.dir}/include" />
        <include name="${java.home}/../include/win32" />
        <include name="${native.dir}/common" />
        <include name="${native.dir}/server/isapi" />
        <include name="${build.compiler.base}/include" />
        <!--include name="&quot;${build.compiler.base}/include&quot;" /-->
        <include name="&quot;${mssdk.home}/include&quot;"/>
      </includes>
      <depends>
        <fileset dir="${native.dir}/common" includes="*.h" />
      </depends>
        
      <!-- Platform-specific tags -->
      <def name="WIN32" />
      <def name="_WINDOWS"  />
      <def name="NDEBUG" if="win32.release" />
      <def name="_DEBUG" if="win32.debug" />
      <def name="_MBCS" />
      <def name="_USRDLL" />
      <def name="ISAPI_EXPORTS" />
      <import fileName="advapi32.lib" />
      <import fileName="wsock32.lib" />
      <export symbol="HttpFilterProc"/>
      <export symbol="GetFilterVersion"/>
      <export symbol="GetExtensionVersion"/>
      <export symbol="HttpExtensionProc"/>
      <export symbol="TerminateFilter"/>
      <export symbol="TerminateExtension"/>
      <!--linkOpt value="/libpath:&quot;${build.compiler.base}/lib&quot;" if="win32" /-->
      <linkOpt value="/libpath:&quot;${mssdk.home}/lib&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${mssdk.home}/../Common/MSDev98/bin&quot;" if="win32" />
    </so>
  </target>

  <target name="netscape" depends="init" if="iplanet.detect">
    <available property="unix" file="/etc/passwd" />
  
    <mkdir dir="netscape/obj" />
    <so sofile="nsapi_redirector" 
	buildDir="netscape/obj"
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}">

      <src dir=".">
	<include name="netscape/jk_nsapi_plugin.c" />
	<include name="common/*.c" />
        <exclude name="jk_nwmain.c" unless="netware" />
        <include name="common/apr/*.c" unless="HAVE_APR" />
	<include name="jni/*.c" />
      </src>
      <includes>
	<include name="${native.dir}/common" />
	<include name="${build.compiler.base}/include" />
	<include name="${native.dir}/include" />
	<include name="${netscape.home}/include" />
	<include name="${java.home}/../include" />

        <!-- Platform specific includes -->
        
	<include name="${novellndk.home}/include/nlm" if="netware" />
	<include name="${novellndk.home}/include" if="netware" />
        <include name="${java.home}/../include/netware" if="netware" />
                 
	<include name="${apache13.home}/os/win32" if="win32" />
        <include name="${java.home}/../include/win32" if="win32" />
        <include name="${java.home}/../include/linux" if="linux" />
        <include name="${native.dir}/common" if="win32" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
      </depends>

      <!-- Platform-specific tags -->
      <altSoFile value="nsapi_rd" if="netware" />
      
      <def name="N_PLAT_NLM" if="netware"
	   info="Building for NetWare platform" />
      <def name="NETWARE" if="netware"
	   info="Building for NetWare platform" />
      <def name="XP_NETWARE" if="netware"
	   info="Building for NetWare platform" />
      <def name="USE_SPRINTF" if="netware"
	   info="Use the sprintf function to build strings" />
           
      <def name="WIN32" if="win32" />
      <def name="NDEBUG" if="win32.release" />
      <def name="_DEBUG" if="win32.debug" />
      <def name="_WINDOWS" if="win32" />
      <def name="_MBCS" if="win32" />
      <def name="_USRDLL" if="win32" />
      <def name="XP_WIN32" if="win32" />
      <def name="NSAPI_EXPORTS" if="win32" />
      
      <def name="XP_UNIX" if="unix"
	   info="Unix platform - needed for nsapi.h" />
      
      <nlmmodule value="nshttpd" if="netware" />
      <import fileName="${novellndk.home}/imports/clib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/lib0.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/nlmlib.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/threads.imp" if="netware" />
      <import fileName="${novellndk.home}/imports/socklib.imp" if="netware" />
      <import fileName="${netscape.home}/imports/nsapi.imp" if="netware" />
      <export symbol="jk_init" if="netware" />
      <export symbol="jk_service" if="netware" />
      <linkOpt value="-desc &quot;Netscape Plugin for Tomcat&quot;" if="netware" />
      <linkOpt value="-screenname &quot;System Console&quot;" if="netware" />
      <linkOpt value="-nlmversion 1,20,2" if="netware" />
      <linkOpt value="-threadname &quot;NSTomcat Thread&quot;" if="netware" />
      <linkOpt value="-stacksize 64000" if="netware" />
      
      <import fileName="ns-httpd36.lib" if="win32" />
      <import fileName="wsock32.lib" if="win32" />
      <import fileName="kernel32.lib" if="win32" />
      <import fileName="user32.lib" if="win32" />
      <import fileName="gdi32.lib" if="win32" />
      <import fileName="winspool.lib" if="win32" />
      <import fileName="comdlg32.lib" if="win32" />
      <linkOpt value="/libpath:&quot;${build.compiler.base}/lib&quot;" if="win32" />
      <linkOpt value="/libpath:&quot;${netscape.home}/lib&quot;" if="win32" />
    </so>
  </target>

  <target name="clean" >
    <delete >
      <fileset dir="${build.dir}">
	<include name="**/*.o"/>
	<include name="**/*.so"/>
	<include name="**/*.lo"/>
	<include name="**/*.la"/>
	<include name="**/*.a"/>
	<include name="**/.libs"/>
	<include name="**/*.lib"/>
	<include name="**/*.nlm"/>
	<include name="**/*.map"/>
	<include name="**/*.sym"/>
	<include name="**/*.NCV"/>
	<include name="**/*.obj"/>
	<include name="**/*.dll"/>
      </fileset>
    </delete>
  </target>

</project>
