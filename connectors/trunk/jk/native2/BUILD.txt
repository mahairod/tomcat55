Quick informations on building mod_jk2 :

Starting with 2.0.4, APR is mandatory for jk2 so you should be
sure to have it installed on your system, probably because you
already have an Apache 2.0 installed or have apr and apr-utils
sources tarball ready, since jk2 will first build APR/APR-UTILS
for its own purpose (Apache 1.3 case).


If you want to have JNI support, add --with-jni and be sure to
have JAVA_HOME env var point to your Java Environment.

* Linux distributions using Apache 2.0

  You should have apxs, so be sure to have the Apache2 devel rpm, 
  httpd-devel or apache2-devel depending distributions.

./configure --with-apxs2=/your/path/to/apxs --with-jni
make
cp ../build/jk2/apache2/mod_jk2.so /your/path/to/apache2modules 


* Linux distributions using Apache 1.3

  You should have apxs, so be sure to have the Apache devel rpm, 
  httpd-devel or apache-devel depending distributions.

./configure --with-apxs=/your/path/to/apxs 	--with-apr=/your/path/to/aprsources \
            --with-apr-util=/your/patch/to/apr-util --with-jni
make
cp ../build/jk2/apache13/mod_jk2.so /your/path/to/apache13modules 




* IIS 

There is a known issue with the latest APR 1.0 and MSVC6.
If you want to use MSVC6, please use APR 0.9.x for now.
MSVC7 doesn't have this issue, and could be used with APR 1.0.

Isapi redirector requires the following libraries to build:
apr, apr-util, apr-iconv and pcre.
The easiest way to obtain all those libraries is to download
the httpd-2.0.49-win32-src.zip from http://www.apache.org/dist/httpd or
from any of the mirror sites.
You will only need the srclib part (apr, apr-util, apr-iconv and pcre)
Unzip the entire srclib folder to j-t-c native2 folder.
Now open the isapi.dsw from MSVC6 and build.

Building using VS.NET:
Make sure that the required libraries are inside native2/srclib.
Open the idapi.dsw and select 'Yes to all' when prompted to convert the project.
During conversion the custom build adds extra quotations for
jk_logger_win32_message.mc. Right click on that file and select Properties.
For Custom Build Step remove all the quotations around ${InputDir}
and ${InputPath}.



* Netware

Buid the JK2 connector for NetWare platform.

The current NWNGUmakefile uses the same build system as Apache2 self for NetWare target.
Simply extract the downloaded archive, and follow the guideline which describes compilation of Apache2 self. 

After you have compiled Apache2 (this is mandatory for now since the prebuild process must have finished) 
you can simply call the makefile with 'make -f NWGNUmakefile', this builds the connector for Apache2 in a 
release or debug subdirectory, dependent if you specify to build a debug version or not.

It is recommended to use Metrowerks CodeWarrior compiler for now; although the connector builds with GCC 
for NetWare, it is not tested yet if it works - there are known issues with a bitfied and alignment which 
have to be solved.


