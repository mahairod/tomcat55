dnl =========================================================================
dnl
dnl                 The Apache Software License,  Version 1.1
dnl
dnl          Copyright (c) 1999-2001 The Apache Software Foundation.
dnl                           All rights reserved.
dnl
dnl =========================================================================
dnl
dnl Redistribution and use in source and binary forms,  with or without modi-
dnl fication, are permitted provided that the following conditions are met:
dnl
dnl 1. Redistributions of source code  must retain the above copyright notice
dnl    notice, this list of conditions and the following disclaimer.
dnl
dnl 2. Redistributions  in binary  form  must  reproduce the  above copyright
dnl    notice,  this list of conditions  and the following  disclaimer in the
dnl    documentation and/or other materials provided with the distribution.
dnl
dnl 3. The end-user documentation  included with the redistribution,  if any,
dnl    must include the following acknowlegement:
dnl
dnl       "This product includes  software developed  by the Apache  Software
dnl        Foundation <http://www.apache.org/>."
dnl
dnl    Alternately, this acknowlegement may appear in the software itself, if
dnl    and wherever such third-party acknowlegements normally appear.
dnl
dnl 4. The names "The Jakarta Project",  "Apache WebApp Module",  and "Apache
dnl    Software Foundation"  must not be used to endorse or promote  products
dnl    derived  from this  software  without  prior  written  permission. For
dnl    written permission, please contact <apache@apache.org>.
dnl
dnl 5. Products derived from this software may not be called "Apache" nor may
dnl    "Apache" appear in their names without prior written permission of the
dnl    Apache Software Foundation.
dnl
dnl THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES
dnl INCLUDING, BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY
dnl AND FITNESS FOR  A PARTICULAR PURPOSE  ARE DISCLAIMED.  IN NO EVENT SHALL
dnl THE APACHE  SOFTWARE  FOUNDATION OR  ITS CONTRIBUTORS  BE LIABLE  FOR ANY
dnl DIRECT,  INDIRECT,   INCIDENTAL,  SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL
dnl DAMAGES (INCLUDING,  BUT NOT LIMITED TO,  PROCUREMENT OF SUBSTITUTE GOODS
dnl OR SERVICES;  LOSS OF USE,  DATA,  OR PROFITS;  OR BUSINESS INTERRUPTION)
dnl HOWEVER CAUSED AND  ON ANY  THEORY  OF  LIABILITY,  WHETHER IN  CONTRACT,
dnl STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
dnl ANY  WAY  OUT OF  THE  USE OF  THIS  SOFTWARE,  EVEN  IF  ADVISED  OF THE
dnl POSSIBILITY OF SUCH DAMAGE.
dnl
dnl =========================================================================
dnl
dnl This software  consists of voluntary  contributions made  by many indivi-
dnl duals on behalf of the  Apache Software Foundation.  For more information
dnl on the Apache Software Foundation, please see <http://www.apache.org/>.
dnl
dnl =========================================================================

dnl --------------------------------------------------------------------------
dnl Author Pier Fumagalli <mailto:pier.fumagalli@eng.sun.com>
dnl Author Jon S. Stevens <mailto:jon@latchkey.com>
dnl Version $Id$
dnl --------------------------------------------------------------------------

dnl --------------------------------------------------------------------------
dnl Initialize
dnl --------------------------------------------------------------------------
sinclude(./support/aplocal.m4)
sinclude(./support/apjava.m4)
AC_INIT(Makefile.in)
LOCAL_INIT()

dnl --------------------------------------------------------------------------
dnl Setup initial variable value
dnl --------------------------------------------------------------------------
SRCDIR=""
MODULE=""
AC_SUBST(SRCDIR)
AC_SUBST(MODULE)

APR_SRCDIR=""
APR_LIBDIR=""
APR_INCDIR=""
APR_VARFIL=""
AC_SUBST(APR_SRCDIR)
AC_SUBST(APR_LIBDIR)
AC_SUBST(APR_INCDIR)
AC_SUBST(APR_VARFIL)

dnl --------------------------------------------------------------------------
dnl Check where sources are
dnl --------------------------------------------------------------------------
LOCAL_RESOLVEDIR(SRCDIR,[${srcdir}],[sources directory])

dnl -------------------------------------------------------------------------
dnl Check C environment
dnl
dnl   We need to check local compilation in case the user got an APR
dnl   distribution from a binary tarball (such as in Apache 2.0) and the
dnl   compiler is not available.
dnl -------------------------------------------------------------------------
LOCAL_HEADER([C-Language compilation tools])
LOCAL_CHECK_PROG(AR,ar)
LOCAL_CHECK_PROG(RANLIB,ranlib)
AC_PROG_CC()
AC_PROG_CC_C_O()
AC_PROG_CPP()
AC_SUBST(AR)
AC_SUBST(RANLIB)

dnl --------------------------------------------------------------------------
dnl Process the --with-apr=... command line argument
dnl
dnl   This is always processed, and sets the APR_SRCDIR variable. After this
dnl   is executed, for each module the APR_SRCDIR variable should be over
dnl   written if the web server already knows the location of APR's include
dnl   header and library directories. (As in Apache 2.0)
dnl --------------------------------------------------------------------------
AC_ARG_WITH(apr,
  [  --with-apr[=DIR]        path of an APR (Apache Portable Runtime) source
                          distribution or CVS snapshot. (DIR defaults to
                          \"./apr\"). Not required and ignored when the
                          --with-apxs2 option is specified.],
  APR_SRCDIR="${withval}",
  APR_SRCDIR="${SRCDIR}/apr"
)

dnl --------------------------------------------------------------------------
dnl Target module to build
dnl --------------------------------------------------------------------------
LOCAL_HEADER([APR location and target module])

dnl --------------------------------------------------------------------------
dnl Process the --with-apxs[=FILE] command line argument
dnl
dnl   Use Apache's APXS utility to compile the Apache module (1.3/2.0 is
dnl   detected and APR variables are set accordingly).
dnl --------------------------------------------------------------------------
AC_ARG_WITH(apxs,
  [  --with-apxs[=FILE]      build a shared Apache module. If FILE was not
                          specified, then APXS will be searched within the
                          current PATH. The Apache server version (1.3 or 2.0)
                          will be automatically detected.],
  [
    if ${TEST} -n "${MODULE}"
    then
      AC_MSG_ERROR([target module already defined as ${MODULE}])
    fi

    APXS="${withval}"

    if ${TEST} -z "${APXS}"
    then
      APXS="yes"
    fi

    if ${TEST} "${APXS}" = "yes"
    then
      AC_PATH_PROG(APXS,apxs,${PATH})
    fi

    apache=`${GREP} STANDARD20 ${APXS}`
    if  ${TEST} -n "${apache}"
    then
      MODULE="apache-2.0"
dnl ### FIXME ###
dnl ### APXS For Apache 2.0 doesn't report the right values, we have to ###
dnl ### guess from the prefix and hope everything goes all right ###
      apache_prefix="`apxs -q PREFIX`"
      APR_VARFIL="${apache_prefix}/lib/APRVARS"
      APR_LIBDIR="${apache_prefix}/lib"
      APR_INCDIR="${apache_prefix}/include"
      APR_SRCDIR=""
    else
      MODULE="apache-1.3"
      APR_VARFIL=""
      APR_LIBDIR=""
      APR_INCDIR=""
      if ${TEST} -z "${APR_SRCDIR}"
      then
        AC_MSG_ERROR([You must specify --with-apr\[=DIR\] with this module])
      fi
    fi
  ]
)

dnl --------------------------------------------------------------------------
dnl Was a module specified?
dnl --------------------------------------------------------------------------
AC_MSG_CHECKING([target module])

if ${TEST} -z "${MODULE}"
then
  AC_MSG_RESULT([error])
  AC_MSG_ERROR([No target module specified])
fi
AC_MSG_RESULT([${MODULE}])

dnl --------------------------------------------------------------------------
dnl Configure the APR source distribution
dnl 
dnl   This step gets executed ONLY if APR_SRCDIR's length is nonzero. In
dnl   case of Apache 2.0 and other APR based servers APR_SRCDIR must be set
dnl   to the empty string "", and APR_INCDIR, APR_LIBDIR and APR_VARFIL must
dnl   be defined with the appropriate values on where respectively apr.h,
dnl   libapr.so/.a and APRVARS reside.
dnl --------------------------------------------------------------------------
if ${TEST} -n "${APR_SRCDIR}"
then

  dnl -----------------------------------------------
  dnl Check if we were supplied a valid APR directory
  dnl -----------------------------------------------

  if ${TEST} ! -d "${APR_SRCDIR}" ; then
    AC_MSG_ERROR([Cannot find APR sources directory \"${APR_SRCDIR}\"])
  fi
  
  if ${TEST} ! -x "${APR_SRCDIR}/buildconf" ; then
    AC_MSG_ERROR([Cannot find APR buildconf program in \"${APR_SRCDIR}\"])
  fi
  
  LOCAL_RESOLVEDIR(APR_SRCDIR,[${APR_SRCDIR}],[full APR directory path])
  
  dnl ---------------------------------------------
  dnl Build the configure script for APR and run it
  dnl ---------------------------------------------
  
  curdir=`pwd`
  cd ${APR_SRCDIR}
  
  LOCAL_HEADER([Building APR configure script])
  LOCAL_FILTEREXEC(ret,
    [./buildconf],
    [APR buildconf])
  if ${TEST} "${ret}" -ne "0"
  then
    AC_MSG_ERROR([APR buildconf terminated with error code ${ret}])
  fi
  
  LOCAL_HEADER([Configuring APR])
  LOCAL_FILTEREXEC(ret,
    [./configure --enable-static --disable-shared --disable-threads],
    ["APR configure"])
  if ${TEST} "${ret}" -ne "0"
  then
    AC_MSG_ERROR([APR configure script terminated with error code ${ret}])
  fi
  cd ${curdir}

  APR_INCDIR="${APR_SRCDIR}/include"
  APR_LIBDIR="${APR_SRCDIR}/lib
  APR_VARFIL="${APR_SRCDIR}/APRVARS
fi




AC_OUTPUT(Makefile)
LOCAL_HEADER([All done. Now you can issue \"make\". Good luck.])
