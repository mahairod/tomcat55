<project name="TestRun" default="main">
        
    <property name="host" value="localhost" />
    <property name="port" value="8080" />
              
    <taskdef name="watchdog" classname="org.apache.watchdog.task.GTest" />
    <property name="wgdir" value="lib/jsp-golden" />
                    
    <target name="main" depends="jsp-test" />
                       
<!-- ==================== Watchdog JSP tests ==================== -->
    <target name="jsp-test"> 

        <!-- START directives_page_content -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/content/positiveContenttype.jsp HTTP/1.0"
            testName="positiveContentTypeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            expectHeaders="Content-Type:text/plain;charset=ISO-8859-1"
            assertion="When the contentType attribute of the page  directive is specified, it will set the character encoding and MIME type in the response to the client. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Using the page directive, set the  contentType attribute to 'text/plain;charset\=ISO-8859-1'. Verify on the client side that the  Content-Type header was properly set in the  response."
            firstTask="true"
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/content/negativeDuplicateContentFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateContentFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate contentType attribute/values within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with contentType attributes specified."
        />

        <!-- STOP directives_page_content -->

        <!-- START directives_page_extend -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/extend/positiveExtends.jsp HTTP/1.0"
            testName="positiveExtendsTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/extend/positiveExtends.html"
            assertion="The extends attribute of the page directive identifies a fully qualfied class name into which the JSP page transformed. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Provide the extends attribute with a fully qualified class.  The resulting JSP implementation class will use instanceof to validate that this page instance is an instance of the class that it extends."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/extend/negativeDuplicateExtendsFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateExtendsFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate extends attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with two extends attributes. Validate that a fatal translation error occurs."
        />

        <!-- STOP directives_page_extend -->

        <!-- START directives_page_errorpage -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/errorpage/positiveDefaultIsErrorPage.jsp HTTP/1.0"
            testName="positiveDefaultIsErrorPageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="The default value of the 'isErrorPage' attribute is false.  JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Verify that the 'isErrorPage' attribute is false by  generating an exception in the called page and then have the error page attempt to access the implicit exception object."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/errorpage/positiveErrorPage.jsp HTTP/1.0"
            testName="positiveErrorPageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/errorpage/positiveErrorPage.html"
            assertion="When the isErrorPage attribute is set to true, the implicit exception object will be available and its value is a reference to the offending throwable from the source JSP page in error.  JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="In the initial JSP page, generate a java.lang.Arithmetic Exception by dividing an int value by 0.  Validate the Exception type by using instanceof against the exception object."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/errorpage/negativeFatalTranslationError.jsp HTTP/1.0"
            testName="negativeFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="A fatal translation error shall result if a JSP error page has the isErrorPage attribute set to false and an attempt is made to access the implicit exception object. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Generate an exception from the requested page with the errorPage attribute set.  The Error page has isErrorPage set to false and will attempt to access the exception object."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/errorpage/negativeDuplicateErrorPageFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateErrorPageFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate errorPage attributes/values within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two errorPage attributes. Validate that a fatal translation error occurs."
        />

        <!-- STOP directives_page_errorpage -->

        <!-- START directives_page_imports -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/imports/positiveImport.jsp HTTP/1.0"
            testName="positiveImportTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/imports/positiveImport.html"
            assertion="The import attribute of the page directive  denotes classes that the translated JSP page will import and thus making these classes available to the scripting environment. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Use the import attribute to import 'java.util.Properties'.  Validated that a Properties object can be created and used."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/imports/implicitImportLang.jsp HTTP/1.0"
            testName="implicitImportLangTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/imports/implicitImportLang.html"
            assertion="Translated JSP pages must automatically import classes of the java.lang package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the java.lang  package are implicitly imported by creating and using a java.lang.Integer object."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/imports/implicitImportJsp.jsp HTTP/1.0"
            testName="implicitImportJspTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/imports/implicitImportJsp.html"
            assertion="Translated JSP pages must automatically import classes of the javax.servlet.jsp package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the javax.servlet.jsp package are implicitly imported by calling  JspFactory.getDefaultFactory() method."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/imports/implicitImportServlet.jsp HTTP/1.0"
            testName="implicitImportServletTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/imports/implicitImportServlet.html"
            assertion="Translated JSP pages must automatically import classes of the javax.servlet package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the javax.servlet package are implicitly imported by creating  and using an instance of RequestDispatcher."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/imports/implicitImportHttp.jsp HTTP/1.0"
            testName="implicitImportHttpTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/imports/implicitImportHttp.html"
            assertion="Translated JSP pages must automatically import classes of the javax.servlet.http package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the javax.servlet.http package are implicitly imported by creating  and using an instance of HttpUtils."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/imports/positiveMultipleImport.jsp HTTP/1.0"
            testName="positiveMultipleImportTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="A fatal translation error shall result if there is more than one occurrence of a page directive attribute with the exception of the import attribute. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with two import attributes."
        />

        <!-- END directives_page_imports -->

        <!-- START directives_page_info -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/info/positiveInfo.jsp HTTP/1.0"
            testName="positiveInfoTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/info/positiveInfo.html"
            assertion="The arbitrary string incorporated into the translated page by using the info attribute of the page directive, is available via Servlet.getServletInfo(); JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Set the info attribute of the page directive. Call getServletInfo()."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/info/negativeDuplicateInfoFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateInfoFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate info attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two info attributes. Validate that a fatal translation error occurs."
        />

        <!-- END directives_page_imports -->

        <!-- START directives_page_language -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/language/positiveLang.jsp HTTP/1.0"
            testName="positiveLangTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/page/language/positiveLang.html"
            assertion="The only defined and required scripting language value for the language attribute is 'java' JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that the language attribute can be set to 'java' without an error."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/language/negativeDuplicateLanguageFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateLanguageFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate language attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with two language attributes. Validate that a fatal translation error occurs."
        />

        <!-- END directives_page_language -->

        <!-- START directives_page_session -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/session/positiveSession.jsp HTTP/1.0"
            testName="positiveSessionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the session attribute of the page directive  is set to 'true', then the implicit script  language variable named 'session' of type javax.servlet.http.HttpSession references the current/new session for the page JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Set the session attribute to 'true' and validate that the implicit session variable can be accessed and used."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/session/positiveSessionDefault.jsp HTTP/1.0"
            testName="positiveSessionDefaultTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="The implicit session session variable will be available to the page by default as the default value for the session attribute is 'true' JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Do not set the session attribute in the page. Validate that the implicit session variable can be accessed and used."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/session/negativeSessionFatalTranslationError.jsp HTTP/1.0"
            testName="negativeSessionFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="When the session attribute is set to 'false', the JSP page does not participate in a session; the implicit session variable is unavailable, and any reference to it within the body of the JSP page is illegal and shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that setting the session attribute to false will result in a fatal translation error if the  implicit session variable is referenced."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/session/negativeDuplicateSessionFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateSessionFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate session attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two session attributes. Validate that a fatal translation error occurs."
        />

        <!-- END directive_page_session -->

        <!-- START directive_page_buffer -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/buffer/positiveBuffAutoflush.jsp HTTP/1.0"
            testName="positiveBuffAutoflushTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="When the page buffer is full, content will automatically be flushed. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Leaving the defaults for autoFlush and buffer, validate that the buffer is automatically flushed once the  buffer is full."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/buffer/positiveBuffCreate.jsp HTTP/1.0"
            testName="positiveBuffCreateTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the buffer attribute is set, it is legal to set autoFlush to 'false'. Doing so requires a manual flush from the page writer. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that the page can configure a buffer and set the autoFlush attribute to false.   Write data to the output stream and manually  flush the content"
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/buffer/negativeDuplicateBufferFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateBufferFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate buffer attributes within a given translation unit results in a fatal translation error. JavaServer Pages v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two buffer attributes."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/page/buffer/negativeBufferOverflowException.jsp HTTP/1.0"
            testName="negativeBufferOverflowExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="${wgdir}/core_syntax/directives/page/buffer/negativeBufferOverflowException.html"
            assertion="If the 'autoFlush' attribute is false, an Exception will be raised if an overflow occurs. JavaServer Pages v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with autoFlush set to false.   Overflow the buffer and verify the Exception is caught."
        />

        <!-- END directives_page_buffer -->

        <!-- START directives_page_include -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/include/positiveIncludeCtxRelativeDirective.jsp HTTP/1.0"
            testName="positiveIncludeCtxRelativeDirectiveTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/include/positiveIncludeCtxRelativeDirective.html"
            assertion="The include directive inserts the text of the resource specified by the file attribute.  Included content can be referenced using a context-relative path. JavaServer Pages Specification v1.2, Sec 2.10.3"
            testStrategy="Using an include directive, include content referenced by a context-relative path."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/include/positiveIncludePageRelativeDirective.jsp HTTP/1.0"
            testName="positiveIncludePageRelativeDirectiveTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/include/positiveIncludePageRelativeDirective.html"
            assertion="The include directive inserts the text of the resource specified by the file attribute.  Included content can be referenced using a page-relative path. JavaServer Pages Specification v1.2, Sec 2.10.3"
            testStrategy="Using an include directive, include content referenced by a page-relative path."
        />

        <!-- END directives_page_include -->

        <!-- START directives_page_taglib -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/directives/taglib/positiveTagLib.jsp HTTP/1.0"
            testName="positiveTagLibTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/directives/taglib/positiveTagLib.html"
            assertion="The taglib directive declares that the page  uses a tag library, uniquely identifies  the tag library using a URI and associates a  tag prefix that will distinguish usage of the  actions in the library.  JavaServer Pages Specification v1.2, Sec. 2.10.2"
            testStrategy="Validate that the taglib directive is recognized by the container by declaring a new tag and  calling an action against that tag."
        />

        <!-- END directives_page_taglib -->

        <!-- START scripting_declarlation -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/scripting/declaration/positiveDeclaration.jsp HTTP/1.0"
            testName="positiveDeclarationTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/scripting/declaration/positiveDeclaration.html"
            assertion="Declarations should be a complete declarative statement,  or sequence thereof, according to the syntax of the  scripting language specified. JavaServer Pages Specification v1.2, Sec. 2.11.1"
            testStrategy="Validate the scripting declarations are properly recognized, by declaring and assigning a value to an int variable, and displaying the value of the variable."
        />

        <!-- END scripting_declaration -->

        <!-- START scripting_expressions -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/scripting/expressions/positiveExpr.jsp HTTP/1.0"
            testName="positiveExprTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/scripting/expressions/positiveExpr.html"
            assertion="An expression element in a JSP page is a scripting  language expression that is evaluated and the result is coerced to a String.  The result is subsequently emitted into the current out JspWriter object. JavaServer Pages Specification v1.2, Sec. 2.11.3"
            testStrategy="Validate that the container can correctly support a basic expression by validating the output returned."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/scripting/expressions/positiveExprComment.jsp HTTP/1.0"
            testName="positiveExprCommentTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/scripting/expressions/positiveExprComment.html"
            assertion="Expressions can be embedded in HTML comments to produce comments returned in the output stream containing dynamic content. JavaServer Pages Specification v1.2, Sec. 2.5.1"
            testStrategy="Validate that an HTML stye comment with an embedded expression returns the value of the expression within the comment."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/scripting/expressions/positiveExprWhiteSpace.jsp HTTP/1.0"
            testName="positiveExprWhiteSpaceTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/scripting/expressions/positiveExprWhiteSpace.html"
            assertion="Whitespace is optional after the &lt;%\= and before the %> delimiters of the expression element. JavaServer Pages Specification v1.2, Sec. 2.11"
            testStrategy="Validate that the container correctly handles different whitespace values with an expression element."
        />

        <!-- END scripting_expressions -->

        <!-- START scripting_scriptlet -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/scripting/scriptlet/positiveScriptlet.jsp HTTP/1.0"
            testName="positiveScriptletTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/scripting/scriptlet/positiveScriptlet.html"
            assertion="All scriptlet fragments in a given translation  unit are combined in the order they appear in  the JSP page, they must yield a valid statement,  or sequence of statements, in the specified  scripting language. JavaServer Pages Specification v1.2, Sec. 2.11.2"
            testStrategy="Correct syntax is used in the scriptlet"
        />

        <!-- END scripting_scriptlet -->

        <!-- START core_syntax_implicitobjects -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkSession.jsp HTTP/1.0"
            testName="checkSessionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkSession.html"
            assertion="The session scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.http.HttpSession.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  session scripting variable is of type  javax.servlet.http.HttpSession and that a method can be called against it."
        />

        <watchdog request="GET /jsp-tests/CheckConfig HTTP/1.0"
            testName="checkConfigTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkConfig.html"
            assertion="The config scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.ServletConfig.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  config scripting variable is of type  javax.servlet.ServletConfig and that a method can be called against it."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkException.jsp HTTP/1.0"
            testName="checkExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkException.html"
            assertion="The exception scripting variable is implictly made made available to the scripting environment (if the JSP page is an error page) and is associated with  an object of type java.lang.Throwable.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  exception scripting variable is of an instance of the exception type thrown (a subclass of java.lang.Throwable)."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkOut.jsp HTTP/1.0"
            testName="checkOutTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkOut.html"
            assertion="The out scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.jsp.JspWriter.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  out scripting variable is of type  javax.servlet.jsp.JspWriter."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkPage.jsp HTTP/1.0"
            testName="checkPageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkPage.html"
            assertion="The page scripting variable is implictly made made available to the scripting environment and and is associated with an object of type java.lang.Object.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  page scripting variable is of type  java.lang.Object."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkPageContext.jsp HTTP/1.0"
            testName="checkPageContextTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkPageContext.html"
            assertion="The pageContext scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.jsp.PageContext.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  pageContext scripting variable is of type  javax.servlet.jsp.PageContext and that a method can be called against it."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkRequest.jsp?Years=2 HTTP/1.0"
            testName="checkRequestTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkRequest.html"
            assertion="The request scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.http.HttpServletRequest or javax.servlet.ServletRequest (protocol dependant).  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  request scripting variable is of type  javax.servlet.Request (parent class of HttpServletRequest) and that a method can be called against it."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkResponse.jsp HTTP/1.0"
            testName="checkResponseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkResponse.html"
            assertion="The response scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.http.HttpServletResponse or javax.servlet.ServletResponse (protocol dependant).  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  response scripting variable is of type  javax.servlet.Response (parent class of HttpServletResponse) and that a method can be called against it."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/implicitobjects/checkApplication.jsp HTTP/1.0"
            testName="checkApplicationTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/implicitobjects/checkApplication.html"
            assertion="The application scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.ServletContext.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  application scripting variable is of type  javax.servlet.ServletContext that a method can be called against it."
        />

        <!-- END core_syntax_implicitobjects -->

        <!-- START actions_setProperty -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetBooleanObj.jsp HTTP/1.0"
            testName="positiveSetBooleanObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetBooleanObj.html"
            assertion="Boolean properties of a Bean can be set with a String  Constant.  Conversion from String to Boolean will be automatically provided by java.lang.Boolean.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Boolean property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetBooleanPrim.jsp HTTP/1.0"
            testName="positiveSetBooleanPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetBooleanPrim.html"
            assertion="Primitive boolean properties of a Bean can be set with a String  Constant.  Conversion from String to boolean will be automatically provided by java.lang.Boolean.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a boolean property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetByteObj.jsp HTTP/1.0"
            testName="positiveSetByteObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetByteObj.html"
            assertion="Byte properties of a Bean can be set with a String  Constant.  Conversion from String to Byte will be automatically provided by java.lang.Byte.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Byte property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetBytePrim.jsp HTTP/1.0"
            testName="positiveSetBytePrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetBytePrim.html"
            assertion="Primitive byte properties of a Bean can be set with a String  Constant.  Conversion from String to byte will be automatically provided by java.lang.Byte.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a byte property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetCharObj.jsp HTTP/1.0"
            testName="positiveSetCharObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetCharObj.html"
            assertion="Character properties of a Bean can be set with a String  Constant.  Conversion from String to Character will be automatically provided by String.charAt(0). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Character property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetCharPrim.jsp HTTP/1.0"
            testName="positiveSetCharPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetCharPrim.html"
            assertion="Primitive char properties of a Bean can be set with a String  Constant.  Conversion from String to char will be automatically provided by String.charAt(0). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a char property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetDoubleObj.jsp HTTP/1.0"
            testName="positiveSetDoubleObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetDoubleObj.html"
            assertion="Double properties of a Bean can be set with a String  Constant.  Conversion from String to Double will be automatically provided by java.lang.Double.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Double property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetDoublePrim.jsp HTTP/1.0"
            testName="positiveSetDoublePrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetDoublePrim.html"
            assertion="Primitive double properties of a Bean can be set with a String  Constant.  Conversion from String to double will be automatically provided by java.lang.Double.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a double property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetFloatObj.jsp HTTP/1.0"
            testName="positiveSetFloatObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetFloatObj.html"
            assertion="Float properties of a Bean can be set with a String  Constant.  Conversion from String to Float will be automatically provided by java.lang.Float.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Float property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetFloatPrim.jsp HTTP/1.0"
            testName="positiveSetFloatPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetFloatPrim.html"
            assertion="Primitive float properties of a Bean can be set with a String  Constant.  Conversion from String to float will be automatically provided by java.lang.Float.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a float property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetIndexedProp.jsp HTTP/1.0"
            testName="positiveSetIndexedPropTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetIndexedProp.html"
            assertion="Indexed properties in a Bean can be set using jsp\:setProperty. When assigning values to indexed properties, the value must be an array.  No Type converstions are applied during assigment. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Create a bean using useBean tag, use setProperty and set properties using the following array types\:  byte char short int float long double boolean Byte Character Short Integer Float Long Double Boolean Access each of the properties via scripting, iterate through the array, and display the values."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetIntObj.jsp HTTP/1.0"
            testName="positiveSetIntObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetIntObj.html"
            assertion="Integer properties of a Bean can be set with a String  Constant.  Conversion from String to Integer will be automatically provided by java.lang.Integer.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set an Integer property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetIntPrim.jsp HTTP/1.0"
            testName="positiveSetIntPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetIntPrim.html"
            assertion="Primitive int properties of a Bean can be set with a String  Constant.  Conversion from String to int will be automatically provided by java.lang.Integer.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set an int property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetLongObj.jsp HTTP/1.0"
            testName="positiveSetLongObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetLongObj.html"
            assertion="Long properties of a Bean can be set with a String  Constant.  Conversion from String to Long will be automatically provided by java.lang.Long.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set an Long property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetLongPrim.jsp HTTP/1.0"
            testName="positiveSetLongPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetLongPrim.html"
            assertion="Primitive long properties of a Bean can be set with a String  Constant.  Conversion from String to long will be automatically provided by java.lang.long.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a long property of the bean using a String constant."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetPropAll.jsp?name=Frodo&amp;num=116165&amp;str=Validated HTTP/1.0"
            testName="positiveSetPropAllTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetPropAll.html"
            assertion="If the property attribute of jsp\:setProperty is set to '*', the tag will iterate over the current Servlet request parameters, matching parameter names and value type(s) to property names and setter method types(s), setting each matched property to the value of the matching parameter. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set the property attribute to '*'.  The following properties should be set by the tag\: name, num, str."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetPropNoParam.jsp?str=SAPPOTA  HTTP/1.0"
            testName="positiveSetPropNoParamTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetPropNoParam.html"
            assertion="When the param attribute is omitted, the request parameter name is assumed to be the same as the Bean property name. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. jsp\:setProperty only specifies the name and property properties.  The container should set the value of the Bean's property to the value of the request parameter that has the same name as specified by the property attribute."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetPropParam.jsp?Name=MANGO HTTP/1.0"
            testName="positiveSetPropParamTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetPropParam.html"
            assertion="A single bean property can be set using a request  parameter from the Request object.  JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. jsp\:setProperty only specifies the param property. The container should set the value of the Bean's property to the value of the request parameter that has the same name as specified by the param attribute."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetPropReqTimeSingleQuotes.jsp HTTP/1.0"
            testName="positiveSetPropReqTimeSingleQuotesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetPropReqTimeSingleQuotes.html"
            assertion="The value attribute can accept request-time  attribute expressions (single-quoted) as a value. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. Set the value of a bean property using a  request-time attribute expression delimited by single quotes."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetPropReqTimeDoubleQuotes.jsp HTTP/1.0"
            testName="positiveSetPropReqTimeDoubleQuotesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetPropReqTimeDoubleQuotes.html"
            assertion="The value attribute can accept request-time  attribute expressions (double-quoted) as a value. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. Set the value of a bean property using a  request-time attribute expression delimited by double quotes."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveSetPropValue.jsp HTTP/1.0"
            testName="positiveSetPropValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveSetPropValue.html"
            assertion="Properties in bean can be set using a String Constant. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. Set the value of a bean property using the value attribute."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/setProperty/positiveBeanPropertyEditor.jsp HTTP/1.0"
            testName="positiveBeanPropertyEditorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/setProperty/positiveBeanPropertyEditor.html"
            assertion="The container will use a bean's  property editor when setting properties, if  introspection indicates one exists. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Create a bean using useBean tag, use setProperty and  and verfiy results using getProperty."
        />

        <!-- END actions_setProperty -->

        <!-- START actions_getProperty -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/getProperty/positiveGetProps.jsp HTTP/1.0"
            testName="positiveGetPropsTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/getProperty/positiveGetProps.html"
            assertion="jsp\:getProperty action places the value of a Bean instance property, converted to a String, into the implicit out  object, which is displayed as output. Java Server Pages Specification v1.2, Sec 4.3"
            testStrategy="Create a bean using jsp\:useBean tag, use jsp\:getProperty to  access and validate the property."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/getProperty/negativeGetPropObjectNotFoundException.jsp HTTP/1.0"
            testName="negativeGetPropObjectNotFoundExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/getProperty/negativeGetPropObjectNotFoundException.html"
            assertion="If accessing a property, and the object is not found, a request-time exception is raised. Java Server Pages Specification v1.2, Sec 4.3"
            testStrategy="Access a property of a non-existant bean and catch an exception."
        />

        <!-- END actions_getProperty -->

        <!-- START actions_useBean -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveBeanNameType.jsp HTTP/1.0"
            testName="positiveBeanNameTypeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/useBean/positiveBeanNameType.html"
            assertion="A bean can be declared using the beanName and type attributes, where type is the same class specified by the beanName attribute. JavaServer Pages Specification v1.2, Sec. 4.1"
            testStrategy="Use jsp\:useBean to create a bean where the beanName and type attributes have the same values.  Verify that the bean can be used by invoking a method on the bean inside a scriplet."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveBeanNameTypeCast.jsp HTTP/1.0"
            testName="positiveBeanNameTypeCastTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/useBean/positiveBeanNameTypeCast.html"
            assertion="A bean can be declared using the beanName and type attributes, where type is a superclass of the class specified by the beanName attribute. JavaServer Pages Specification v1.2, Sec. 4.1"
            testStrategy="Use jsp\:useBean to create a bean where the beanName specifies one particular type, and type specifies a superclass of the value specified by beanName.  Verify that the bean can be used by invoking a method on the bean inside a scriplet."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveBeanNameSerialized.jsp HTTP/1.0"
            testName="positiveBeanNameSerializedTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/useBean/positiveBeanNameSerialized.html"
            assertion="The container must be able to instantiate  a serialized bean specified in the beanName  attribute of jsp\:useBean.  JavaServer Pages Specification v1.2, JSP 4.1"
            testStrategy="Create a bean using useBean action where beanName refers to a serialized bean  and call a method on the bean to verify  that the serialized instance returns an expected value."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveBodyNew.jsp HTTP/1.0"
            testName="positiveBodyNewTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/useBean/positiveBodyNew.html"
            assertion="Bean properties can be set within the body of the jsp\:useBean action. JavaServer Pages Specification v1.2, Sec 4.1"
            testStrategy="Using jsp\:useBean, create a new instance. Within the body of the jsp\:useBean action, use jsp\:setProperty to initialize a Bean property.  After closing the jsp\:useBean action, use jsp\:getProperty to validate  that the property was indeed set."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positivePageScopedObject.jsp HTTP/1.0"
            testName="positivePageScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'page' scope, will be available for the current page only.  The reference to the bean must be discarded upon completion of the current request by the page body. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'page'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is not available in the current PageContext."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveRequestScopedObject.jsp HTTP/1.0"
            testName="positiveRequestScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'request' scope, will be available in the current page's ServletRequest object. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'request'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is available in the current HttpServletRequest."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveSessionScopedObject.jsp HTTP/1.0"
            testName="positiveSessionScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'session' scope, will be available in the current page's HttpSession object. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'session'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is available in the current HttpSession."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveApplicationScopedObject.jsp HTTP/1.0"
            testName="positiveApplicationScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'application' scope, will be available in the current page's ServletContext object. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'application'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is available in the current ServletContext."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveNoBody.jsp HTTP/1.0"
            testName="positiveNoBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/useBean/positiveNoBody.html"
            assertion="The jsp\:useBean action does not require a body.  JavaServer Pages Specification v1.2, Sec. 4.1"
            testStrategy="Explicit test to ensure that the jsp\:useBean action can be used without a body."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/positiveClassTypeCast.jsp HTTP/1.0"
            testName="positiveClassTypeCastTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="${wgdir}/core_syntax/actions/useBean/positiveClassTypeCast.html"
            assertion="Using 'class' and 'type' together in useBean tag, 'Class' is assignable to 'type'.  JavaServler Pages Specification v1.2, Sec 4.1"
            testStrategy="Create a new bean instance with a particulare class set for the class attribute, and a  parent class for the type attribute.  Validate That the instance is cast without an Exception."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/negativeDuplicateIDFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateIDFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate useBean id's found in the same translation unit shall result in a fatal translation error. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="Create two beans with the same id attribute. Validate that a Fatal Translation error occurs."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/negativeSessionScopeFatalTranslationError.jsp HTTP/1.0"
            testName="negativeSessionScopeFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="It is a fatal translation error to attempt to use session scope when the JSP page has declared via the page directive, that it does not participate in a session. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="Use the page directive to set the session attribute to false and then declare a bean with session scope. Validate that a Fatal Translation error occurs."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/negativeClassCastExceptionFwd.jsp HTTP/1.0"
            testName="negativeClassCastExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="${wgdir}/core_syntax/actions/useBean/negativeClassCastException.html"
            assertion="A java.lang.ClassCastException shall occur at request time when the assignment of the object referenced to the scripting variable fails. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="In one JSP page, declare a bean of a particular type with session scope.  Once declared, this page will forward to a second JSP page which will try to  reference the previously declared bean in the session  scope, but will define the type attribute with  an incompatible type."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/useBean/negativeNotFoundTypeInstantiationException.jsp HTTP/1.0"
            testName="negativeNotFoundTypeInstantiationExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="${wgdir}/core_syntax/actions/useBean/negativeNotFoundTypeInstantiationException.html"
            assertion="If the object specified by useBean is not found in the specified scope and neither class nor beanName are given, a java.lang.InstantiationException  shall occur. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="Define a new bean within the JSP page without class or beanName defined.  Catch the Exception and print a message."
        />

        <!-- END actions_useBean -->

        <!-- START actions_useBean -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/forward/positiveForwardCtxRelative.jsp HTTP/1.0"
            testName="positiveForwardCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/forward/positiveForwardCtxRelative.html"
            assertion="A request can be forwarded to a JSP page, within the  same context, using a page relative-path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request  to a JSP page within the same context using  a page relative-path."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/forward/positiveForwardCtxRelativeHtml.jsp HTTP/1.0"
            testName="positiveForwardCtxRelativeHtmlTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/forward/positiveForwardCtxRelativeHtml.html"
            assertion="A request can be forwarded to a static resource, within the same context, using a page-relative path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request to  a static resource within the same context using  a page-relative path."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/forward/positiveForwardPageRelative.jsp HTTP/1.0"
            testName="positiveForwardPageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/forward/positiveForwardPageRelative.html"
            assertion="A request can be forwarded to a JSP page, within the  same context, using a page relative-path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request  to a JSP page within the same context using  a page-relative path."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/forward/positiveForwardPageRelativeHtml.jsp HTTP/1.0"
            testName="positiveForwardPageRelativeHtmlTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/forward/positiveForwardPageRelativeHtml.html"
            assertion="A request can be forwarded to a static resource, within the same context, using a page-relative path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request  to a static resource within the same context using  a page-relative path."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/forward/positiveRequestAttrCtxRelative.jsp HTTP/1.0"
            testName="positiveForwardRequestAttrCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/forward/positiveRequestAttrCtxRelative.html"
            assertion="The page attribute of jsp\:forward can accept a request-time attribute with a context-relative path value. JavaServer Pages v1.2, Sec. 4.5"
            testStrategy="Validate that jsp\:forward can properly accept a  request-time attribute containing a context-relative path value."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/forward/positiveRequestAttrPageRelative.jsp HTTP/1.0"
            testName="positiveForwardRequestAttrPageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/forward/positiveRequestAttrPageRelative.html"
            assertion="The page attribute of jsp\:forward can accept a request-time attribute with a page-relative path value. JavaServer Pages v1.2, Sec. 4.5"
            testStrategy="Validate that jsp\:forward can properly accept a  request-time attribute containing a page-relative path value."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/include/positiveIncludeCtxRelative.jsp HTTP/1.0"
            testName="positiveIncludeCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/include/positiveIncludeCtxRelative.html"
            assertion="jsp\:include provides for the inclusion  of dynamic resources, within the same context, using a context-relative path. JavaServer Pages Specification v1.2, Sec. 4.4"
            testStrategy="Include content, using a context-relative path, from JSP page into the current JSP page."
        />

        <!-- END actions_forward -->

        <!-- START actions_include -->

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/include/positiveIncludeCtxRelativeHtml.jsp HTTP/1.0"
            testName="positiveIncludeCtxRelativeHtmlTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/include/positiveIncludeCtxRelativeHtml.html"
            assertion="jsp\:include provides for the inclusion  of static resources, within the same context, using a context-relative path. JavaServer Pages Specification v1.2, Sec. 4.4"
            testStrategy="Include content, using a context-relative path, from a static HTML page into the current JSP page."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/include/positiveIncludePageRelative.jsp HTTP/1.0"
            testName="positiveIncludePageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/include/positiveIncludePageRelative.html"
            assertion="jsp\:include provides for the inclusion  of dynamic resources, within the same context, using a page-relative path. JavaServer Pages Specification v1.2, Sec. 4.4"
            testStrategy="Include content, using a page-relative path, from a JSP page into the current JSP page."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/include/positiveRequestAttrCtxRelative.jsp HTTP/1.0"
            testName="positiveIncludeRequestAttrCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/include/positiveRequestAttrCtxRelative.html"
            assertion="The page attribute of jsp\:include accepts request-time attributes containing context-relative path values."
            testStrategy="Validate the page attribute of jsp\:include can correctly accept request-time attribute values which contain context-relative paths."
        />

        <watchdog request="GET /jsp-tests/jsp/core_syntax/actions/include/positiveRequestAttrPageRelative.jsp HTTP/1.0"
            testName="positiveIncludeRequestAttrPageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/core_syntax/actions/include/positiveRequestAttrPageRelative.html"
            assertion="The page attribute of jsp\:include accepts request-time attributes containing page-relative path values."
            testStrategy="Validate the page attribute of jsp\:include can correctly accept request-time attribute values which contain page-relative paths."
        />

        <!-- END actions_include -->

        <!-- START engine_pagecontext -->

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveForward.jsp HTTP/1.0"
            testName="positiveForwardTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveForward.html"
            assertion="Calling PageContext.forward(java.lang.String relUrlPath) with a relativeUrlPath that doesn't begin with a leading '/' will forward the current ServletRequest and ServletResponse to another active component in the application relative to the URL of the request that was mapped to the calling JSP. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.forward(String) with a page-relative path and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveGetAttributeAvbl.jsp HTTP/1.0"
            testName="positiveGetAttributeAvblTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveGetAttributeAvbl.html"
            assertion="PageContext.getAttribute(java.lang.String name) will return the object associated with the name in the page scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttribute() to retrieve an object located in the page scope.  Validate that methods can be successfully called against the returned object."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveGetAttributeNotAvbl.jsp HTTP/1.0"
            testName="positiveGetAttributeNotAvblTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveGetAttributeNotAvbl.html"
            assertion="PageContext.getAttribute(java.lang.String name) will return null of there is no objected assocated with the passed name in the page scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttribute(String) passing in a name in which there is no associated object in the page scope.  Validate that the value returned is null."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveGetAttributeNamesInScope.jsp HTTP/1.0"
            testName="positiveGetAttributeNamesInScopeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveGetAttributeNamesInScope.html"
            assertion="PageContext.getAttributeNamesInScope(int scope) will return an enumeration of all attributes in the given scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttributeInScope(int) passing in PageContext.PAGE_SCOPE.  Validate that the expected object is found within the returned enumeration."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveGetAttributeScope.jsp HTTP/1.0"
            testName="positiveGetAttributeScopeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveGetAttributeScope.html"
            assertion="PageContext.getAttributeScope(java.lang.String name) returns scope where the attribute is defined. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttributeScope(String) against an attribute in page scope.  Validate that the proper scope value is returned."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/checkGetSession.jsp HTTP/1.0"
            testName="checkGetSessionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/checkGetSession.html"
            assertion="PageContext.getSession() returns the current HttpSession object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getSession() and verify that the HttpSession instance has the same reference as that referenced by the session scripting variable."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/checkGetResponse.jsp HTTP/1.0"
            testName="checkGetResponseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/checkGetResponse.html"
            assertion="PageContext.getResponse() returns the current ServletResponse object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getResponse() and verify that the ServletResponse instance has the same reference as that referenced by the response scripting variable."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/checkGetRequest.jsp HTTP/1.0"
            testName="checkGetRequestTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/checkGetRequest.html"
            assertion="PageContext.getRequest() returns the current ServletRequest object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getRequest() and verify that the ServletRequest instance has the same reference as that referenced by the request scripting variable."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/checkGetServletContext.jsp HTTP/1.0"
            testName="checkGetServletContextTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/checkGetServletContext.html"
            assertion="PageContext.getServletContext() returns the current ServletContext object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getServletContext() and verify that the ServletContext instance has the same reference as that referenced by the application scripting variable."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/checkGetServletConfig.jsp HTTP/1.0"
            testName="checkGetServletConfigTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/checkGetServletConfig.html"
            assertion="PageContext.getServletConfig() returns the current ServletConfig object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getServletConfig() and verify that the ServletConfig instance has the same reference as that referenced by the config scripting variable."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/checkGetOut.jsp HTTP/1.0"
            testName="checkGetOutTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/checkGetOut.html"
            assertion="PageContext.getOut() returns the current JspWriter object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getOut() and verify that the JspWriter instance has the same reference as that referenced by the out scripting variable."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveInclude.jsp HTTP/1.0"
            testName="positiveIncludeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveInclude.html"
            assertion="Calling PageContext.include(java.lang.String relUrlPath) with a relativeUrlPath that doesn't begin with a leading '/' will cause the specified content, relative to the URL of the request that was mapped to the calling JSP, to be processed as part of the current ServletRequest and ServletResponse.  JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.include(String) with a page-relative path and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveRemoveAttribute.jsp HTTP/1.0"
            testName="positiveRemoveAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveRemoveAttribute.html"
            assertion="PageContext.removeAttribute(java.lang.String name) will remove the  object reference associated with the passed name, from all scopes. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.removeAttribute(String) and verify that the  attribute is indeed removed."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveSetAttribute.jsp HTTP/1.0"
            testName="positiveSetAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveSetAttribute.html"
            assertion="PageContext.setAttribute(java.lang.String name, java.lang.Object attribute) will register the name and object specified within the page scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.setAttribute(String,Object) and validate that attribute can be obtained via a call to PageContext.getAttribute(String)."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/PageContext/positiveSetAttributeInScope.jsp HTTP/1.0"
            testName="positiveSetAttributeInScopeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/PageContext/positiveSetAttributeInScope.html"
            assertion="PageContext.setAttributeInScope(java.lang.String name, java.lang.Object attribute, int) will register the name and object within the specified scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.setAttribute(String,Object,int) and validate that the attribute is in the scope specified via a call to PageContext.getAttributeScope(String)."
        />

        <!-- END engine_pagecontext -->

        <!-- START engine_httpjsppage -->

        <watchdog request="GET /jsp-tests/jsp/engine/HttpJspPage/positiveJSPInitJSP.jsp HTTP/1.0"
            testName="positiveJSPInitJSPTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/HttpJspPage/positiveJSPInitJSP.html"
            assertion="Container implementations must ensure that getServletConfig() will return the desired value in cases where page authors override jspInit().  JavaServer Pages Specification v1.2, Sec. 9.1.1"
            testStrategy="Override the jspInit() method in a declaration. Validate that a call to getServletConfig returns a non-null value."
        />

        <!-- END engine_httpjsppage -->

        <!-- START engine_jspwriter_print -->

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintBoolean.jsp HTTP/1.0"
            testName="positivePrintBooleanTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintBoolean.html"
            assertion="JspWriter.print(boolean b) will print the String produced by java.lang.String.valueOf(boolean).  The byte's displayed will be according to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(boolean b) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintChar.jsp HTTP/1.0"
            testName="positivePrintCharTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintChar.html"
            assertion="JspWriter.print(char c) prints passed value according to the platform's default character encoding. Server Pages Specification v1.2, Sec 9.2.2"
            testStrategy="Call print(char c) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintCharArray.jsp HTTP/1.0"
            testName="positivePrintCharArrayTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintCharArray.html"
            assertion="JspWriter.print(char[] s) will print an array of characters according to the platform's default  character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(char[] c) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintDouble.jsp HTTP/1.0"
            testName="positivePrintDoubleTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintDouble.html"
            assertion="JspWriter.print(double d) prints a String representation of a double-precision floating-point number, generated by  java.lang.String.valueOf(double), with the bytes translated to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(double d) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintFloat.jsp HTTP/1.0"
            testName="positivePrintFloatTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintFloat.html"
            assertion="JspWriter.print(float f) prints a String representation of a floating point number, generated by java.lang.String.valueOf(float), with the bytes translated to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(float f) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintInt.jsp HTTP/1.0"
            testName="positivePrintIntTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintInt.html"
            assertion="JspWriter.print(int i) prints a String representation of an integer, generated by java.lang.String.valueOf(int),  with the bytes translated to the platform's default  character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(int i) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintLong.jsp HTTP/1.0"
            testName="positivePrintLongTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintLong.html"
            assertion="JspWriter.print(long l) prints a String representation of a long integer, generated by java.lang.String.valueOf(long),  with the bytes translated to the platform's default  character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(long l) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintObj.jsp HTTP/1.0"
            testName="positivePrintObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintObj.html"
            assertion="JspWriter.print(java.lang.Object obj) prints a String  representation of an object, generated by  java.lang.String.valueOf(Object), with the bytes translated  to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(java.lang.Object obj) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintStr.jsp HTTP/1.0"
            testName="positivePrintStrTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintStr.html"
            assertion="JspWriter.print(java.lang.String str) prints a String  representation of an object, with the bytes translated  to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(java.lang.String str) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintln.jsp HTTP/1.0"
            testName="positivePrintlnTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintln.html"
            assertion="JspWriter.println() will terminate the current line by writing the ling separator string. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println() and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnBoolean.jsp HTTP/1.0"
            testName="positivePrintlnBooleanTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnBoolean.html"
            assertion="JspWriter.println(boolean b) prints a boolean value and then terminates the line.  This method behaves as though it invokes print(boolean b) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(boolean b) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnChar.jsp HTTP/1.0"
            testName="positivePrintlnCharTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnChar.html"
            assertion="JspWriter.println(char c) prints a char value and then terminates the line.  This method behaves as though it invokes print(char c) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(char c) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnCharArray.jsp HTTP/1.0"
            testName="positivePrintlnCharArrayTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnCharArray.html"
            assertion="JspWriter.println(char[] s) prints an array of characters and then terminates the line.  This method behaves as though it invokes print(char[] s) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(char c) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnDouble.jsp HTTP/1.0"
            testName="positivePrintlnDoubleTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnDouble.html"
            assertion="JspWriter.println(double d) prints a double-precision floating-point value and then terminates the line.   This method behaves as though it invokes print(double d)  and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(double d) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnFloat.jsp HTTP/1.0"
            testName="positivePrintlnFloatTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnFloat.html"
            assertion="JspWriter.println(float f) prints a floating-point value  and then terminates the line.  This method behaves as though  it invokes print(float f) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(float f) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnInt.jsp HTTP/1.0"
            testName="positivePrintlnIntTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnInt.html"
            assertion="JspWriter.println(int i) prints an integer value  and then terminates the line.  This method behaves as though  it invokes print(int i) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(int i) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnLong.jsp HTTP/1.0"
            testName="positivePrintlnLongTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnLong.html"
            assertion="JspWriter.println(long l) prints a long integer value  and then terminates the line.  This method behaves as though  it invokes print(long l) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(long l) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnObj.jsp HTTP/1.0"
            testName="positivePrintlnObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnObj.html"
            assertion="JspWriter.println(java.lang.Object obj) prints an Object  value and then terminates the line.  This  method behaves as though it invokes print(java.lang.Object obj)  and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(java.lang.Object obj) and validate the result."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/print/positivePrintlnStr.jsp HTTP/1.0"
            testName="positivePrintlnStrTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/print/positivePrintlnStr.html"
            assertion="JspWriter.println(java.lang.String str) prints a long  integer value and then terminates the line.  This  method behaves as though it invokes print(java.lang.String str)  and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(java.lang.String str) and validate the result."
        />

        <!-- END engine_jspwriter_print -->

        <!-- START engine_jspwriter_misc -->

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveClear.jsp HTTP/1.0"
            testName="positiveClearTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveClear.html"
            assertion="JspWriter.clear() will cause the contents of the output  buffer to be cleared. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Using a page with the default buffer size of 8kb, write data to the buffer and call clear.  The cleared data should not be present in the response."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveFlush.jsp HTTP/1.0"
            testName="positiveFlushTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveFlush.html"
            assertion="JspWriter.flush() will cause the stream to write any saved content to the intended destiation. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Obtain the current buffer size being used, then write and flush some sample text. Validate that the stream was indeed flushed by checking the number of bytes remaining in  the buffer."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveGetBufferSize.jsp HTTP/1.0"
            testName="positiveGetBufferSizeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveGetBufferSize.html"
            assertion="JspWriter.getBufferSize() returns the size of the buffer in bytes used by the particular JspWriter instance. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Set the buffer of the page to 5kb.  Call getBufferSize() and validate that the value returned is as expected."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveGetBufferSizeUnBuffered.jsp HTTP/1.0"
            testName="positiveGetBufferSizeUnBufferedTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveGetBufferSizeUnBuffered.html"
            assertion="When buffering is disabled within a particular  JSP page, a call to JspWriter.getBufferSize()  will return 0 (zero). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Set the buffer to 'none' and call getBufferSize(). Validate that the value returned is 0 (zero)."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveGetRemaining.jsp HTTP/1.0"
            testName="positiveGetRemainingTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveGetRemaining.html"
            assertion="JspWriter.getRemaining() will return the number of  unused bytes in the buffer. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Write 6 bytes of data to the buffer and call getRemaining().  The value returned should be 6 bytes less than the value returned by  getBufferSize()."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveGetRemainingBufferUnset.jsp HTTP/1.0"
            testName="positiveGetRemainingBufferUnsetTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveGetRemainingBufferUnset.html"
            assertion="JspWriter.getRemaining() will return 0 (zero) if the JSP page doesn't use a buffer. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Set the buffer of the JSP page to 'none', and validate that a call to getRemaining() returns 0 (zero)."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveIsAutoFlush.jsp HTTP/1.0"
            testName="positiveIsAutoFlushTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveIsAutoFlush.html"
            assertion="JspWriter.isAutoFlush() will inidicate whether the JspWriter will flush its buffer automatically. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="JSP pages automatically flush their buffer by default.  Call isAutoFlush() and validated that 'true' is returned."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/positiveNewLine.jsp HTTP/1.0"
            testName="positiveNewLineTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/engine/JspWriter/misc/positiveNewLine.html"
            assertion="JspWriter.newLine() will write a line separator as defined by the system property 'line.separator'. JavaServer Pages Specification v1.2 , Sec. 9.2.2"
            testStrategy="Validate the a call to newLine() produces the expected results."
        />

        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/negativeClose.jsp HTTP/1.0"
            testName="negativeCloseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="Any calls that would write or flush the stream after JspWriter.close() has been called will yeild an IOException.  JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call the first test page which will call out.println() after out.close().  An IOException should be caught.  This exception will be added to the ServletContext.  Call the seconf test page and get, and then remove, the Exception object from the context.  Validate that the Exception object is an instance of IOException">
            <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/closeValidator.jsp HTTP/1.0"
                host="${host}" port="${port}" debug="0" exactMatch="false"
                expectHeaders="status:Test Status=PASSED" nested="true"/>
        </watchdog>

        <!-- END engine_jspwriter_misc -->

        <!-- START tagext_tagdata -->

        <watchdog request="GET /jsp-tests/jsp/tagext/TagData/positiveTagGetAttribute.jsp HTTP/1.0"
            testName="positiveTagGetAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagData/positiveTagGetAttribute.html"
            assertion="Test a TagData object by passing a hashtable and printing  the contents of the hashtable using the getAttribute()  method of TagData., specified in the Java Server Pages  Specification v1.2, Sec 10.5.7"
            testStrategy="Testing TagData release() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagData/positiveTagSetAttribute.jsp HTTP/1.0"
            testName="positiveTagSetAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagData/positiveTagSetAttribute.html"
            assertion="Test a TagData object by passing a hashtable created using  setAttribute() method of the TagData and print the contents of the hashtable, specified in the Java Server Pages  Specification v1.2, Sec 10.5.7"
            testStrategy="Testing TagData setAttribute() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagData/positiveTagGetAttributeString.jsp HTTP/1.0"
            testName="positiveTagGetAttributeStringTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagData/positiveTagGetAttributeString.html"
            assertion="Test a TagData object by passing a hashtable created using  setAttribute() method of the TagData and print the  contents of the hashtable using the getAttributeString()  method, specified in the Java Server Pages Specification  v1.2, Sec 10.5.7"
            testStrategy="Testing TagData getAttributeString() method"
        />

        <!-- END tagext_tagdata -->

        <!-- START tagext_tagsupport -->

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveGetValues.jsp HTTP/1.0"
            testName="positiveGetValuesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveGetValues.html"
            assertion="Test for getValues() method which returns an enumeration  and print the contents, specified in the Java Server  Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport getValues() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveGetValue.jsp HTTP/1.0"
            testName="positiveGetValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveGetValue.html"
            assertion="Test for getValue() method, specified in the Java Server  Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport getValue() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveRemoveValue.jsp HTTP/1.0"
            testName="positiveRemoveValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveRemoveValue.html"
            assertion="Test for removeValue() method, specified in the Java  Server Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport removeValue() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveSetValue.jsp HTTP/1.0"
            testName="positiveSetValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveSetValue.html"
            assertion="Test for setValue() method, specified in the Java Server  Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport setValue() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveGetParent.jsp HTTP/1.0"
            testName="positiveGetParentTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveGetParent.html"
            assertion="Test for getParent() method which returns the parent class  name, specified in the Java Server Pages Specification  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport getParent() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/default_return_values.jsp HTTP/1.0"
            testName="default_return_valuesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/default_return_values.html"
            assertion="Tests if the default values are returned from the methods of TagSupport class  v1.2, Sec 10.1.4"
            testStrategy="testing TagSupport default return values by calling super.FunctionName"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveDoEndTag.jsp HTTP/1.0"
            testName="positiveTSDoEndTagTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveDoEndTag.html"
            assertion="Tests that doEndTag metjod is called when the end of the tag is found  v1.2, Sec 10.1.4"
            testStrategy="testing TagSupport doEndTag method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveSetGetId.jsp HTTP/1.0"
            testName="positiveSetGetIdTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveSetGetId.html"
            assertion="Test for setId and getId methods of TagSupport  v1.2, Sec 10.1.4"
            testStrategy="testing TagSupport getId and setId in the same test"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positivefindAncestorWithClass.jsp HTTP/1.0"
            testName="positivefindAncestorWithClassTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positivefindAncestorWithClass.html"
            assertion="Test for Nested classes. Tests the findAncestorWithClass method for TagSupport  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport.findAncestorWithClass method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveDoStartTag.jsp HTTP/1.0"
            testName="positiveDoStartTagTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveDoStartTag.html"
            assertion="Test for checking if doStartTag() is called correctly  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport doStartTag() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveSetPageContext.jsp HTTP/1.0"
            testName="positiveSetPageContextTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveSetPageContext.html"
            assertion="Test if setPageContext() can be used to set the page context.Using this page context obj set an attribute which is passed to the jsp page  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport setPageContext() method"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TagSupport/positiveDoAfterBody.jsp HTTP/1.0"
            testName="positiveTSDoAfterBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TagSupport/positiveDoAfterBody.html"
            assertion="Test the DoAfterBody method of the TagSupport class.     Create a Tag handler that outputs a message a given number of times from the DoAFterBody  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport setPageContext() method"
        />

        <!-- END tagext_tagsupport -->

        <!-- START tagext_bodytagsupport -->

        <watchdog request="GET /jsp-tests/jsp/tagext/BodyTagSupport/positiveDoInitBody.jsp HTTP/1.0"
            testName="positiveDoInitBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/BodyTagSupport/positiveDoInitBody.html"
            assertion="BodyTagSupport.doInitBody() will be called before the first body evaluation. JavaServer Pages Specification v1.2, Sec. 10.2.3"
            testStrategy="Validate that doInitBody() is called by the container."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/BodyTagSupport/positiveDoAfterBody.jsp HTTP/1.0"
            testName="positiveBTSDoAfterBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/BodyTagSupport/positiveDoAfterBody.html"
            assertion="BodyTagSupport.doAfterBody() will be called after the  body has been evaluated.  The body will not be  reevaluated and the page processing will continue. JavaServerPages Specification v1.2, Sec. 10.2.3"
            testStrategy="Validate that doAfterBody() is called by the container."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/BodyTagSupport/positiveDoEndTag.jsp HTTP/1.0"
            testName="positiveBTSDoEndTagTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/BodyTagSupport/positiveDoEndTag.html"
            assertion="BodyTagSupport.doEndTag() by default will return EVAL_PAGE when processing the end tag. JavaServer Pages Specification v1.2, Sec. 10.2.3"
            testStrategy="Validate that doEndTag() is called by the container."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/BodyTagSupport/positiveLifeCycle.jsp HTTP/1.0"
            testName="positiveLifeCycleTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/BodyTagSupport/positiveLifeCycle.html"
            assertion="The complete lifecycle for a tag extending BodyTagSupport will contain calls to doStartTag(), doInitBody(), doAfterBody(), doEndTag(), and release(). JavaServer Pages Specification v1.2, Sec 10.2.3"
            testStrategy="Validate that the appropriate methods are called in order when processing the tag.  NOTE\:  release() is not tested as as the point release() is called is container dependant."
        />

        <!-- END tagext_bodytagsupport -->

        <!-- START tagext_lifecycle -->

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_attr_setting_1.jsp HTTP/1.0"
            testName="tag_attr_setting_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_attr_setting_1.html"
            assertion="Test that attribute setting is as wanted, specified in the  Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_attr_setting_2.jsp HTTP/1.0"
            testName="tag_attr_setting_2Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_attr_setting_2.html"
            assertion="Test that attribute setting is as wanted and intermix some  different tags, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_attr_setting_3.jsp HTTP/1.0"
            testName="tag_attr_setting_3Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_attr_setting_3.html"
            assertion="Another test for attribute setting intermixed with some  different tags, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_BodyContent_1.jsp HTTP/1.0"
            testName="tag_check_BodyContent_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_BodyContent_1.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_BodyContent_2.jsp HTTP/1.0"
            testName="tag_check_BodyContent_2Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_BodyContent_2.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_BodyContent_3.jsp HTTP/1.0"
            testName="tag_check_BodyContent_3Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_BodyContent_3.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_BodyContent_4.jsp HTTP/1.0"
            testName="tag_check_BodyContent_4Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_BodyContent_4.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_BodyContent_5.jsp HTTP/1.0"
            testName="tag_check_BodyContent_5Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_BodyContent_5.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_comments_1.jsp HTTP/1.0"
            testName="tag_check_comments_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_comments_1.html"
            assertion="Check that comments are processed correctly, specified in  the Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_check_comments_2.jsp HTTP/1.0"
            testName="tag_check_comments_2Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_check_comments_2.html"
            assertion="Check that HTML-style comments are processed correctly, specified in  the Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_doEndTag_skip_page.jsp HTTP/1.0"
            testName="tag_doEndTag_skip_pageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_doEndTag_skip_page.html"
            assertion="Test for doEndTag SKIP_PAGE, specified in the Java Server  Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_doStart_eval_body_include.jsp HTTP/1.0"
            testName="tag_doStart_eval_body_includeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_doStart_eval_body_include.html"
            assertion="Test for doStartTag EVAL_BODY_INCLUDE, specified in the Java  Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_doStart_skip_body.jsp HTTP/1.0"
            testName="tag_doStart_skip_bodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_doStart_skip_body.html"
            assertion="Test for doStartTag SKIP_BODY, specified in the Java Server  Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/LifeCycle/tag_translationtime_verify_1.jsp HTTP/1.0"
            testName="tag_translationtime_verify_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/LifeCycle/tag_translationtime_verify_1.html"
            assertion="Test for translation-time verification, specified in the  Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />

        <!-- END tagext_lifecycle -->

        <!-- START tagext_misc -->

        <watchdog request="GET /jsp-tests/jsp/tagext/misc/persistentValues.jsp HTTP/1.0"
            testName="persistentValuesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/misc/persistentValues.html"
            assertion="Tests if the attribute values are retaines when tags are nested inside a tag  Java Server Pages Specification v1.2, Sec 10.1"
            testStrategy="testing persistence of tag attributes"
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/misc/request_time_attributes.jsp HTTP/1.0"
            testName="request_time_attributesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/misc/request_time_attributes.html"
            assertion="Tests the evaluation order of the expressions if attribute values are runtime expressions Java Server Pages Specification v1.2, Sec 2.13.1"
            testStrategy="Testing associativity of expression evaluation"
        />

        <!-- END tagext_misc -->

        <!-- START tagext_tldpathresolution -->

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/implicit/positiveImplicitJarMultiTld.jsp HTTP/1.0"
            testName="positiveImplicitJarMultiTldTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TldPathResolution/implicit/positiveImplicitJarMultiTld.html"
            assertion="Verify that the container, with no explicit taglib mappings within the web.xml, can recognize multiple tlds stored in a jar, and create the appropriate  mapping so that the client can use the tags. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.4 JSP 7.3.8"
            testStrategy="Define two distinct tags for this page, and use the tags so that output will be generated."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/explicit/positiveAbsTld.jsp HTTP/1.0"
            testName="positiveAbsTldTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="Verify that the requested tld, using an absoulte URI,  resolves to the appropriate tld. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to an absolute URI.  If successful, no fatal translation error should occur."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/explicit/positiveRelTld.jsp HTTP/1.0"
            testName="positiveRelTldTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TldPathResolution/explicit/positiveRelTld.html"
            assertion="Verify that the requested tld, using a relative URI,  resolves to the appropriate tld. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to a relative URI.  Verify that the tag can be successfully used."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/explicit/positiveAbsJar.jsp HTTP/1.0"
            testName="positiveAbsJarTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="Verify that the requested tld, using an absoulte URI,  resolves to jar which in turn resolves to a single TLD  (taglib.tld) within the jar. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to an absolute URI.  If successful, no fatal translation error should occur."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/explicit/positiveRelJar.jsp HTTP/1.0"
            testName="positiveRelJarTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TldPathResolution/explicit/positiveRelJar.html"
            assertion="Verify that the requested tld, using a relative URI,  resolves to a jar which in ture resolves to a single TLD (taglib.tld) within the jar. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to a relative URI.  Verify that the tag can be successfully used."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/explicit/positiveDirectTldReference.jsp HTTP/1.0"
            testName="positiveDirectTldReferenceTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="${wgdir}/tagext/TldPathResolution/explicit/positiveDirectTldReference.html"
            assertion="Verify that a tag can be used when the URI of the taglib directive refers to the TLD directly. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.6.3"
            testStrategy="Using a taglib directive, reference the desired TLD directly.  Verify that the tag can be successfully used."
        />

        <watchdog request="GET /jsp-tests/jsp/tagext/TldPathResolution/explicit/negativeAbsFatalTranslationError.jsp HTTP/1.0"
            testName="negativeAbsFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Verify that a fatal translation error is generated when using an absoulte URI,  fails to resolve to a tld. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to an incorrect absolute URI. A fatal translation error should occur."
        />

        <!-- END tagext_tldpathresolution -->

        <!-- START misc_precompilation -->

        <watchdog request="GET /jsp-tests/jsp/misc/precompilation/precompile.jsp?jsp_precompile HTTP/1.0"
            testName="precompileNoValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the jsp-tests request parameter has no value, the request will not be delivered to the target JSP page. JavaServer Pages Specification v1.2, Sec. 8.4.2"
            testStrategy="Validate that no response body is returned when jsp-tests has no value."
        />

        <watchdog request="GET /jsp-tests/jsp/misc/precompilation/precompile.jsp?jsp_precompile=false HTTP/1.0"
            testName="precompileFalseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the jsp-tests request parameter is set to false, the request will not be delivered to the target JSP page. JavaServer Pages Specification v1.2, Sec. 8.4.2"
            testStrategy="Validate that no response body is returned when jsp-tests is set to false."
        />

        <watchdog request="GET /jsp-tests/jsp/misc/precompilation/precompile.jsp?jsp_precompile=true HTTP/1.0"
            testName="precompileTrueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the jsp-tests request parameter is set to true, the request will not be delivered to the target JSP page. JavaServer Pages Specification v1.2, Sec. 8.4.2"
            testStrategy="Validate that no response body is returned when jsp-tests is set to true."
        />

        <watchdog request="GET /jsp-tests/jsp/misc/precompilation/precompile.jsp?jsp_precompile=any_invalid_value HTTP/1.0"
            testName="precompileNegativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Valid parameter values for jsp-tests are 'true', 'false', and no value.  Any other value will result in an HTTP Error; 500 (Server Error). JavaServer Pages specification v1.2, Sec. 8.4.2"
            testStrategy="Set the jsp-tests request paramter to a non valid value and validate that a 500 error occurs."
            lastTask="true"
        />

        <!-- END misc_precompilation -->

    </target>

    <!-- individual targets -->

        <target name="positiveContentTypeTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_content/jsp/core_syntax/directives/page/content/positiveContenttype.jsp HTTP/1.0"
            testName="positiveContentTypeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            expectHeaders="Content-Type:text/plain;charset=ISO-8859-1"
            assertion="When the contentType attribute of the page  directive is specified, it will set the character encoding and MIME type in the response to the client. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Using the page directive, set the  contentType attribute to 'text/plain;charset\=ISO-8859-1'. Verify on the client side that the  Content-Type header was properly set in the  response."
        />
    </target>

    <target name="negativeDuplicateContentFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_content/jsp/core_syntax/directives/page/content/negativeDuplicateContentFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateContentFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate contentType attribute/values within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with contentType attributes specified."
        />
    </target>

    <target name="positiveExtendsTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_extend/jsp/core_syntax/directives/page/extend/positiveExtends.jsp HTTP/1.0"
            testName="positiveExtendsTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/extend/goldenfiles/positiveExtends.html"
            assertion="The extends attribute of the page directive identifies a fully qualfied class name into which the JSP page transformed. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Provide the extends attribute with a fully qualified class.  The resulting JSP implementation class will use instanceof to validate that this page instance is an instance of the class that it extends."
        />
    </target>

    <target name="negativeDuplicateExtendsFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_extend/jsp/core_syntax/directives/page/extend/negativeDuplicateExtendsFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateExtendsFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate extends attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with two extends attributes. Validate that a fatal translation error occurs."
        />
    </target>

    <target name="positiveDefaultIsErrorPageTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_errorpage/jsp/core_syntax/directives/page/errorpage/positiveDefaultIsErrorPage.jsp HTTP/1.0"
            testName="positiveDefaultIsErrorPageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="The default value of the 'isErrorPage' attribute is false.  JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Verify that the 'isErrorPage' attribute is false by  generating an exception in the called page and then have the error page attempt to access the implicit exception object."
        />
    </target>

    <target name="positiveErrorPageTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_errorpage/jsp/core_syntax/directives/page/errorpage/positiveErrorPage.jsp HTTP/1.0"
            testName="positiveErrorPageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/errorpage/goldenfiles/positiveErrorPage.html"
            assertion="When the isErrorPage attribute is set to true, the implicit exception object will be available and its value is a reference to the offending throwable from the source JSP page in error.  JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="In the initial JSP page, generate a java.lang.Arithmetic Exception by dividing an int value by 0.  Validate the Exception type by using instanceof against the exception object."
        />
    </target>

    <target name="negativeFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_errorpage/jsp/core_syntax/directives/page/errorpage/negativeFatalTranslationError.jsp HTTP/1.0"
            testName="negativeFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="A fatal translation error shall result if a JSP error page has the isErrorPage attribute set to false and an attempt is made to access the implicit exception object. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Generate an exception from the requested page with the errorPage attribute set.  The Error page has isErrorPage set to false and will attempt to access the exception object."
        />
    </target>

    <target name="negativeDuplicateErrorPageFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_errorpage/jsp/core_syntax/directives/page/errorpage/negativeDuplicateErrorPageFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateErrorPageFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate errorPage attributes/values within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two errorPage attributes. Validate that a fatal translation error occurs."
        />
    </target>

    <target name="positiveImportTest">
        <gtest request="GET /jsp_coresyntx_dir_pg_imprt/jsp/core_syntax/directives/page/imports/positiveImport.jsp HTTP/1.0"
            testName="positiveImportTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/imports/goldenfiles/positiveImport.html"
            assertion="The import attribute of the page directive  denotes classes that the translated JSP page will import and thus making these classes available to the scripting environment. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Use the import attribute to import 'java.util.Properties'.  Validated that a Properties object can be created and used."
        />
    </target>

    <target name="implicitImportLangTest">
        <gtest request="GET /jsp_coresyntx_dir_pg_imprt/jsp/core_syntax/directives/page/imports/implicitImportLang.jsp HTTP/1.0"
            testName="implicitImportLangTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/imports/goldenfiles/implicitImportLang.html"
            assertion="Translated JSP pages must automatically import classes of the java.lang package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the java.lang  package are implicitly imported by creating and using a java.lang.Integer object."
        />
    </target>

    <target name="implicitImportJspTest">
        <gtest request="GET /jsp_coresyntx_dir_pg_imprt/jsp/core_syntax/directives/page/imports/implicitImportJsp.jsp HTTP/1.0"
            testName="implicitImportJspTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/imports/goldenfiles/implicitImportJsp.html"
            assertion="Translated JSP pages must automatically import classes of the javax.servlet.jsp package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the javax.servlet.jsp package are implicitly imported by calling  JspFactory.getDefaultFactory() method."
        />
    </target>

    <target name="implicitImportServletTest">
        <gtest request="GET /jsp_coresyntx_dir_pg_imprt/jsp/core_syntax/directives/page/imports/implicitImportServlet.jsp HTTP/1.0"
            testName="implicitImportServletTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/imports/goldenfiles/implicitImportServlet.html"
            assertion="Translated JSP pages must automatically import classes of the javax.servlet package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the javax.servlet package are implicitly imported by creating  and using an instance of RequestDispatcher."
        />
    </target>

    <target name="implicitImportHttpTest">
        <gtest request="GET /jsp_coresyntx_dir_pg_imprt/jsp/core_syntax/directives/page/imports/implicitImportHttp.jsp HTTP/1.0"
            testName="implicitImportHttpTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/imports/goldenfiles/implicitImportHttp.html"
            assertion="Translated JSP pages must automatically import classes of the javax.servlet.http package. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that classes from the javax.servlet.http package are implicitly imported by creating  and using an instance of HttpUtils."
        />
    </target>

    <target name="positiveMultipleImportTest">
        <gtest request="GET /jsp_coresyntx_dir_pg_imprt/jsp/core_syntax/directives/page/imports/positiveMultipleImport.jsp HTTP/1.0"
            testName="positiveMultipleImportTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="A fatal translation error shall result if there is more than one occurrence of a page directive attribute with the exception of the import attribute. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with two import attributes."
        />
    </target>

    <target name="positiveInfoTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_info/jsp/core_syntax/directives/page/info/positiveInfo.jsp HTTP/1.0"
            testName="positiveInfoTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/info/goldenfiles/positiveInfo.html"
            assertion="The arbitrary string incorporated into the translated page by using the info attribute of the page directive, is available via Servlet.getServletInfo(); JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Set the info attribute of the page directive. Call getServletInfo()."
        />
    </target>

    <target name="negativeDuplicateInfoFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_info/jsp/core_syntax/directives/page/info/negativeDuplicateInfoFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateInfoFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate info attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two info attributes. Validate that a fatal translation error occurs."
        />
    </target>

    <target name="positiveLangTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_language/jsp/core_syntax/directives/page/language/positiveLang.jsp HTTP/1.0"
            testName="positiveLangTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/language/goldenfiles/positiveLang.html"
            assertion="The only defined and required scripting language value for the language attribute is 'java' JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that the language attribute can be set to 'java' without an error."
        />
    </target>

    <target name="negativeDuplicateLanguageFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_language/jsp/core_syntax/directives/page/language/negativeDuplicateLanguageFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateLanguageFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate language attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Declare a page directive with two language attributes. Validate that a fatal translation error occurs."
        />
    </target>

    <target name="positiveSessionTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_session/jsp/core_syntax/directives/page/session/positiveSession.jsp HTTP/1.0"
            testName="positiveSessionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the session attribute of the page directive  is set to 'true', then the implicit script  language variable named 'session' of type javax.servlet.http.HttpSession references the current/new session for the page JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Set the session attribute to 'true' and validate that the implicit session variable can be accessed and used."
        />
    </target>

    <target name="positiveSessionDefaultTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_session/jsp/core_syntax/directives/page/session/positiveSessionDefault.jsp HTTP/1.0"
            testName="positiveSessionDefaultTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="The implicit session session variable will be available to the page by default as the default value for the session attribute is 'true' JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Do not set the session attribute in the page. Validate that the implicit session variable can be accessed and used."
        />
    </target>

    <target name="negativeSessionFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_session/jsp/core_syntax/directives/page/session/negativeSessionFatalTranslationError.jsp HTTP/1.0"
            testName="negativeSessionFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="When the session attribute is set to 'false', the JSP page does not participate in a session; the implicit session variable is unavailable, and any reference to it within the body of the JSP page is illegal and shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that setting the session attribute to false will result in a fatal translation error if the  implicit session variable is referenced."
        />
    </target>

    <target name="negativeDuplicateSessionFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_session/jsp/core_syntax/directives/page/session/negativeDuplicateSessionFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateSessionFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate session attributes within a given translation unit shall result in a fatal translation error. JavaServer Pages Specification v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two session attributes. Validate that a fatal translation error occurs."
        />
    </target>

    <target name="positiveBuffAutoflushTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_buffer/jsp/core_syntax/directives/page/buffer/positiveBuffAutoflush.jsp HTTP/1.0"
            testName="positiveBuffAutoflushTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="When the page buffer is full, content will automatically be flushed. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Leaving the defaults for autoFlush and buffer, validate that the buffer is automatically flushed once the  buffer is full."
        />
    </target>

    <target name="positiveBuffCreateTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_buffer/jsp/core_syntax/directives/page/buffer/positiveBuffCreate.jsp HTTP/1.0"
            testName="positiveBuffCreateTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the buffer attribute is set, it is legal to set autoFlush to 'false'. Doing so requires a manual flush from the page writer. JavaServer Pages Specification v1.2, Sec. 2.10.1"
            testStrategy="Validate that the page can configure a buffer and set the autoFlush attribute to false.   Write data to the output stream and manually  flush the content"
        />
    </target>

    <target name="negativeDuplicateBufferFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_buffer/jsp/core_syntax/directives/page/buffer/negativeDuplicateBufferFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateBufferFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate buffer attributes within a given translation unit results in a fatal translation error. JavaServer Pages v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with two buffer attributes."
        />
    </target>

    <target name="negativeBufferOverflowExceptionTest">
        <gtest request="GET /jsp_coresyntx_direct_pg_buffer/jsp/core_syntax/directives/page/buffer/negativeBufferOverflowException.jsp HTTP/1.0"
            testName="negativeBufferOverflowExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/page/buffer/goldenfiles/negativeBufferOverflowException.html"
            assertion="If the 'autoFlush' attribute is false, an Exception will be raised if an overflow occurs. JavaServer Pages v1.2, Sec 2.10.1"
            testStrategy="Declare a page directive with autoFlush set to false.   Overflow the buffer and verify the Exception is caught."
        />
    </target>

    <target name="positiveIncludeCtxRelativeDirectiveTest">
        <gtest request="GET /jsp_coresyntx_direct_include/jsp/core_syntax/directives/include/positiveIncludeCtxRelativeDirective.jsp HTTP/1.0"
            testName="positiveIncludeCtxRelativeDirectiveTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/include/goldenfiles/positiveIncludeCtxRelativeDirective.html"
            assertion="The include directive inserts the text of the resource specified by the file attribute.  Included content can be referenced using a context-relative path. JavaServer Pages Specification v1.2, Sec 2.10.3"
            testStrategy="Using an include directive, include content referenced by a context-relative path."
        />
    </target>

    <target name="positiveIncludePageRelativeDirectiveTest">
        <gtest request="GET /jsp_coresyntx_direct_include/jsp/core_syntax/directives/include/positiveIncludePageRelativeDirective.jsp HTTP/1.0"
            testName="positiveIncludePageRelativeDirectiveTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/include/goldenfiles/positiveIncludePageRelativeDirective.html"
            assertion="The include directive inserts the text of the resource specified by the file attribute.  Included content can be referenced using a page-relative path. JavaServer Pages Specification v1.2, Sec 2.10.3"
            testStrategy="Using an include directive, include content referenced by a page-relative path."
        />
    </target>

    <target name="positiveTagLibTest">
        <gtest request="GET /jsp_core_syntx_direct_taglib/jsp/core_syntax/directives/taglib/positiveTagLib.jsp HTTP/1.0"
            testName="positiveTagLibTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/directives/taglib/goldenfiles/positiveTagLib.html"
            assertion="The taglib directive declares that the page  uses a tag library, uniquely identifies  the tag library using a URI and associates a  tag prefix that will distinguish usage of the  actions in the library.  JavaServer Pages Specification v1.2, Sec. 2.10.2"
            testStrategy="Validate that the taglib directive is recognized by the container by declaring a new tag and  calling an action against that tag."
        />
    </target>

    <target name="positiveDeclarationTest">
        <gtest request="GET /jsp_coresyntx_script_declaration/jsp/core_syntax/scripting/declaration/positiveDeclaration.jsp HTTP/1.0"
            testName="positiveDeclarationTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/scripting/declaration/goldenfiles/positiveDeclaration.html"
            assertion="Declarations should be a complete declarative statement,  or sequence thereof, according to the syntax of the  scripting language specified. JavaServer Pages Specification v1.2, Sec. 2.11.1"
            testStrategy="Validate the scripting declarations are properly recognized, by declaring and assigning a value to an int variable, and displaying the value of the variable."
        />
    </target>

    <target name="positiveExprTest">
        <gtest request="GET /jsp_coresyntax_script_expressions/jsp/core_syntax/scripting/expressions/positiveExpr.jsp HTTP/1.0"
            testName="positiveExprTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/scripting/expressions/goldenfiles/positiveExpr.html"
            assertion="An expression element in a JSP page is a scripting  language expression that is evaluated and the result is coerced to a String.  The result is subsequently emitted into the current out JspWriter object. JavaServer Pages Specification v1.2, Sec. 2.11.3"
            testStrategy="Validate that the container can correctly support a basic expression by validating the output returned."
        />
    </target>

    <target name="positiveExprCommentTest">
        <gtest request="GET /jsp_coresyntax_script_expressions/jsp/core_syntax/scripting/expressions/positiveExprComment.jsp HTTP/1.0"
            testName="positiveExprCommentTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/scripting/expressions/goldenfiles/positiveExprComment.html"
            assertion="Expressions can be embedded in HTML comments to produce comments returned in the output stream containing dynamic content. JavaServer Pages Specification v1.2, Sec. 2.5.1"
            testStrategy="Validate that an HTML stye comment with an embedded expression returns the value of the expression within the comment."
        />
    </target>

    <target name="positiveExprWhiteSpaceTest">
        <gtest request="GET /jsp_coresyntax_script_expressions/jsp/core_syntax/scripting/expressions/positiveExprWhiteSpace.jsp HTTP/1.0"
            testName="positiveExprWhiteSpaceTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/scripting/expressions/goldenfiles/positiveExprWhiteSpace.html"
            assertion="Whitespace is optional after the &lt;%\= and before the %> delimiters of the expression element. JavaServer Pages Specification v1.2, Sec. 2.11"
            testStrategy="Validate that the container correctly handles different whitespace values with an expression element."
        />
    </target>

    <target name="positiveScriptletTest">
        <gtest request="GET /jsp_coresyntx_script_scriptlet/jsp/core_syntax/scripting/scriptlet/positiveScriptlet.jsp HTTP/1.0"
            testName="positiveScriptletTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/scripting/scriptlet/goldenfiles/positiveScriptlet.html"
            assertion="All scriptlet fragments in a given translation  unit are combined in the order they appear in  the JSP page, they must yield a valid statement,  or sequence of statements, in the specified  scripting language. JavaServer Pages Specification v1.2, Sec. 2.11.2"
            testStrategy="Correct syntax is used in the scriptlet"
        />
    </target>

    <target name="checkSessionTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkSession.jsp HTTP/1.0"
            testName="checkSessionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkSession.html"
            assertion="The session scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.http.HttpSession.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  session scripting variable is of type  javax.servlet.http.HttpSession and that a method can be called against it."
        />
    </target>

    <target name="checkConfigTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/CheckConfig HTTP/1.0"
            testName="checkConfigTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkConfig.html"
            assertion="The config scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.ServletConfig.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  config scripting variable is of type  javax.servlet.ServletConfig and that a method can be called against it."
        />
    </target>

    <target name="checkExceptionTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkException.jsp HTTP/1.0"
            testName="checkExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkException.html"
            assertion="The exception scripting variable is implictly made made available to the scripting environment (if the JSP page is an error page) and is associated with  an object of type java.lang.Throwable.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  exception scripting variable is of an instance of the exception type thrown (a subclass of java.lang.Throwable)."
        />
    </target>

    <target name="checkOutTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkOut.jsp HTTP/1.0"
            testName="checkOutTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkOut.html"
            assertion="The out scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.jsp.JspWriter.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  out scripting variable is of type  javax.servlet.jsp.JspWriter."
        />
    </target>

    <target name="checkPageTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkPage.jsp HTTP/1.0"
            testName="checkPageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkPage.html"
            assertion="The page scripting variable is implictly made made available to the scripting environment and and is associated with an object of type java.lang.Object.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  page scripting variable is of type  java.lang.Object."
        />
    </target>

    <target name="checkPageContextTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkPageContext.jsp HTTP/1.0"
            testName="checkPageContextTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkPageContext.html"
            assertion="The pageContext scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.jsp.PageContext.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  pageContext scripting variable is of type  javax.servlet.jsp.PageContext and that a method can be called against it."
        />
    </target>

    <target name="checkRequestTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkRequest.jsp?Years=2 HTTP/1.0"
            testName="checkRequestTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkRequest.html"
            assertion="The request scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.http.HttpServletRequest or javax.servlet.ServletRequest (protocol dependant).  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  request scripting variable is of type  javax.servlet.Request (parent class of HttpServletRequest) and that a method can be called against it."
        />
    </target>

    <target name="checkResponseTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkResponse.jsp HTTP/1.0"
            testName="checkResponseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkResponse.html"
            assertion="The response scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.http.HttpServletResponse or javax.servlet.ServletResponse (protocol dependant).  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  response scripting variable is of type  javax.servlet.Response (parent class of HttpServletResponse) and that a method can be called against it."
        />
    </target>

    <target name="checkApplicationTest">
        <gtest request="GET /jsp_coresyntx_implicitobjects/jsp/core_syntax/implicitobjects/checkApplication.jsp HTTP/1.0"
            testName="checkApplicationTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/implicitobjects/goldenfiles/checkApplication.html"
            assertion="The application scripting variable is implictly made made available to the scripting environment and and is associated with an object of type javax.servlet.ServletContext.  JavaServer Pages Specification v1.2, Sec. 2.8.3"
            testStrategy="Validate that the object associated with the  application scripting variable is of type  javax.servlet.ServletContext that a method can be called against it."
        />
    </target>

    <target name="positiveSetBooleanObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetBooleanObj.jsp HTTP/1.0"
            testName="positiveSetBooleanObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetBooleanObj.html"
            assertion="Boolean properties of a Bean can be set with a String  Constant.  Conversion from String to Boolean will be automatically provided by java.lang.Boolean.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Boolean property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetBooleanPrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetBooleanPrim.jsp HTTP/1.0"
            testName="positiveSetBooleanPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetBooleanPrim.html"
            assertion="Primitive boolean properties of a Bean can be set with a String  Constant.  Conversion from String to boolean will be automatically provided by java.lang.Boolean.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a boolean property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetByteObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetByteObj.jsp HTTP/1.0"
            testName="positiveSetByteObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetByteObj.html"
            assertion="Byte properties of a Bean can be set with a String  Constant.  Conversion from String to Byte will be automatically provided by java.lang.Byte.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Byte property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetBytePrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetBytePrim.jsp HTTP/1.0"
            testName="positiveSetBytePrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetBytePrim.html"
            assertion="Primitive byte properties of a Bean can be set with a String  Constant.  Conversion from String to byte will be automatically provided by java.lang.Byte.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a byte property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetCharObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetCharObj.jsp HTTP/1.0"
            testName="positiveSetCharObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetCharObj.html"
            assertion="Character properties of a Bean can be set with a String  Constant.  Conversion from String to Character will be automatically provided by String.charAt(0). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Character property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetCharPrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetCharPrim.jsp HTTP/1.0"
            testName="positiveSetCharPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetCharPrim.html"
            assertion="Primitive char properties of a Bean can be set with a String  Constant.  Conversion from String to char will be automatically provided by String.charAt(0). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a char property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetDoubleObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetDoubleObj.jsp HTTP/1.0"
            testName="positiveSetDoubleObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetDoubleObj.html"
            assertion="Double properties of a Bean can be set with a String  Constant.  Conversion from String to Double will be automatically provided by java.lang.Double.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Double property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetDoublePrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetDoublePrim.jsp HTTP/1.0"
            testName="positiveSetDoublePrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetDoublePrim.html"
            assertion="Primitive double properties of a Bean can be set with a String  Constant.  Conversion from String to double will be automatically provided by java.lang.Double.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a double property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetFloatObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetFloatObj.jsp HTTP/1.0"
            testName="positiveSetFloatObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetFloatObj.html"
            assertion="Float properties of a Bean can be set with a String  Constant.  Conversion from String to Float will be automatically provided by java.lang.Float.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a Float property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetFloatPrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetFloatPrim.jsp HTTP/1.0"
            testName="positiveSetFloatPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetFloatPrim.html"
            assertion="Primitive float properties of a Bean can be set with a String  Constant.  Conversion from String to float will be automatically provided by java.lang.Float.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a float property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetIndexedPropTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetIndexedProp.jsp HTTP/1.0"
            testName="positiveSetIndexedPropTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetIndexedProp.html"
            assertion="Indexed properties in a Bean can be set using jsp\:setProperty. When assigning values to indexed properties, the value must be an array.  No Type converstions are applied during assigment. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Create a bean using useBean tag, use setProperty and set properties using the following array types\: byte char short int float long double boolean Byte Character Short Integer Float Long Double Boolean Access each of the properties via scripting, iterate through the array, and display the values."
        />
    </target>

    <target name="positiveSetIntObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetIntObj.jsp HTTP/1.0"
            testName="positiveSetIntObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetIntObj.html"
            assertion="Integer properties of a Bean can be set with a String  Constant.  Conversion from String to Integer will be automatically provided by java.lang.Integer.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set an Integer property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetIntPrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetIntPrim.jsp HTTP/1.0"
            testName="positiveSetIntPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetIntPrim.html"
            assertion="Primitive int properties of a Bean can be set with a String  Constant.  Conversion from String to int will be automatically provided by java.lang.Integer.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set an int property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetLongObjTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetLongObj.jsp HTTP/1.0"
            testName="positiveSetLongObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetLongObj.html"
            assertion="Long properties of a Bean can be set with a String  Constant.  Conversion from String to Long will be automatically provided by java.lang.Long.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set an Long property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetLongPrimTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetLongPrim.jsp HTTP/1.0"
            testName="positiveSetLongPrimTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetLongPrim.html"
            assertion="Primitive long properties of a Bean can be set with a String  Constant.  Conversion from String to long will be automatically provided by java.lang.long.valueOf(String). JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set a long property of the bean using a String constant."
        />
    </target>

    <target name="positiveSetPropAllTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetPropAll.jsp?name=Frodo&amp;num=116165&amp;str=Validated HTTP/1.0"
            testName="positiveSetPropAllTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetPropAll.html"
            assertion="If the property attribute of jsp\:setProperty is set to '*', the tag will iterate over the current Servlet request parameters, matching parameter names and value type(s) to property names and setter method types(s), setting each matched property to the value of the matching parameter. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance and set the property attribute to '*'.  The following properties should be set by the tag\: name, num, str."
        />
    </target>

    <target name="positiveSetPropNoParamTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetPropNoParam.jsp?str=SAPPOTA  HTTP/1.0"
            testName="positiveSetPropNoParamTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetPropNoParam.html"
            assertion="When the param attribute is omitted, the request parameter name is assumed to be the same as the Bean property name. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. jsp\:setProperty only specifies the name and property properties.  The container should set the value of the Bean's property to the value of the request parameter that has the same name as specified by the property attribute."
        />
    </target>

    <target name="positiveSetPropParamTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetPropParam.jsp?Name=MANGO HTTP/1.0"
            testName="positiveSetPropParamTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetPropParam.html"
            assertion="A single bean property can be set using a request  parameter from the Request object.  JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. jsp\:setProperty only specifies the param property. The container should set the value of the Bean's property to the value of the request parameter that has the same name as specified by the param attribute."
        />
    </target>

    <target name="positiveSetPropReqTimeSingleQuotesTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetPropReqTimeSingleQuotes.jsp HTTP/1.0"
            testName="positiveSetPropReqTimeSingleQuotesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetPropReqTimeSingleQuotes.html"
            assertion="The value attribute can accept request-time  attribute expressions (single-quoted) as a value. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. Set the value of a bean property using a  request-time attribute expression delimited by single quotes."
        />
    </target>

    <target name="positiveSetPropReqTimeDoubleQuotesTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetPropReqTimeDoubleQuotes.jsp HTTP/1.0"
            testName="positiveSetPropReqTimeDoubleQuotesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetPropReqTimeDoubleQuotes.html"
            assertion="The value attribute can accept request-time  attribute expressions (double-quoted) as a value. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. Set the value of a bean property using a  request-time attribute expression delimited by double quotes."
        />
    </target>

    <target name="positiveSetPropValueTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveSetPropValue.jsp HTTP/1.0"
            testName="positiveSetPropValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveSetPropValue.html"
            assertion="Properties in bean can be set using a String Constant. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Using jsp\:useBean, create a new bean instance. Set the value of a bean property using the value attribute."
        />
    </target>

    <target name="positiveBeanPropertyEditorTest">
        <gtest request="GET /jsp_coresyntx_act_setProperty/jsp/core_syntax/actions/setProperty/positiveBeanPropertyEditor.jsp HTTP/1.0"
            testName="positiveBeanPropertyEditorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/setProperty/goldenfiles/positiveBeanPropertyEditor.html"
            assertion="The container will use a bean's  property editor when setting properties, if  introspection indicates one exists. JavaServer Pages Specification v1.2, Sec. 4.2"
            testStrategy="Create a bean using useBean tag, use setProperty and  and verfiy results using getProperty."
        />
    </target>

    <target name="positiveGetPropsTest">
        <gtest request="GET /jsp_coresyntx_act_getProperty/jsp/core_syntax/actions/getProperty/positiveGetProps.jsp HTTP/1.0"
            testName="positiveGetPropsTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/getProperty/goldenfiles/positiveGetProps.html"
            assertion="jsp\:getProperty action places the value of a Bean instance property, converted to a String, into the implicit out  object, which is displayed as output. Java Server Pages Specification v1.2, Sec 4.3"
            testStrategy="Create a bean using jsp\:useBean tag, use jsp\:getProperty to  access and validate the property."
        />
    </target>

    <target name="negativeGetPropObjectNotFoundExceptionTest">
        <gtest request="GET /jsp_coresyntx_act_getProperty/jsp/core_syntax/actions/getProperty/negativeGetPropObjectNotFoundException.jsp HTTP/1.0"
            testName="negativeGetPropObjectNotFoundExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/getProperty/goldenfiles/negativeGetPropObjectNotFoundException.html"
            assertion="If accessing a property, and the object is not found, a request-time exception is raised. Java Server Pages Specification v1.2, Sec 4.3"
            testStrategy="Access a property of a non-existant bean and catch an exception."
        />
    </target>

    <target name="positiveBeanNameTypeTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveBeanNameType.jsp HTTP/1.0"
            testName="positiveBeanNameTypeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/positiveBeanNameType.html"
            assertion="A bean can be declared using the beanName and type attributes, where type is the same class specified by the beanName attribute. JavaServer Pages Specification v1.2, Sec. 4.1"
            testStrategy="Use jsp\:useBean to create a bean where the beanName and type attributes have the same values.  Verify that the bean can be used by invoking a method on the bean inside a scriplet."
        />
    </target>

    <target name="positiveBeanNameTypeCastTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveBeanNameTypeCast.jsp HTTP/1.0"
            testName="positiveBeanNameTypeCastTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/positiveBeanNameTypeCast.html"
            assertion="A bean can be declared using the beanName and type attributes, where type is a superclass of the class specified by the beanName attribute. JavaServer Pages Specification v1.2, Sec. 4.1"
            testStrategy="Use jsp\:useBean to create a bean where the beanName specifies one particular type, and type specifies a superclass of the value specified by beanName.  Verify that the bean can be used by invoking a method on the bean inside a scriplet."
        />
    </target>

    <target name="positiveBeanNameSerializedTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveBeanNameSerialized.jsp HTTP/1.0"
            testName="positiveBeanNameSerializedTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/positiveBeanNameSerialized.html"
            assertion="The container must be able to instantiate  a serialized bean specified in the beanName  attribute of jsp\:useBean.  JavaServer Pages Specification v1.2, JSP 4.1"
            testStrategy="Create a bean using useBean action where beanName refers to a serialized bean  and call a method on the bean to verify  that the serialized instance returns an expected value."
        />
    </target>

    <target name="positiveBodyNewTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveBodyNew.jsp HTTP/1.0"
            testName="positiveBodyNewTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/positiveBodyNew.html"
            assertion="Bean properties can be set within the body of the jsp\:useBean action. JavaServer Pages Specification v1.2, Sec 4.1"
            testStrategy="Using jsp\:useBean, create a new instance. Within the body of the jsp\:useBean action, use jsp\:setProperty to initialize a Bean property.  After closing the jsp\:useBean action, use jsp\:getProperty to validate  that the property was indeed set."
        />
    </target>

    <target name="positivePageScopedObjectTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positivePageScopedObject.jsp HTTP/1.0"
            testName="positivePageScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'page' scope, will be available for the current page only.  The reference to the bean must be discarded upon completion of the current request by the page body. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'page'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is not available in the current PageContext."
        />
    </target>

    <target name="positiveRequestScopedObjectTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveRequestScopedObject.jsp HTTP/1.0"
            testName="positiveRequestScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'request' scope, will be available in the current page's ServletRequest object. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'request'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is available in the current HttpServletRequest."
        />
    </target>

    <target name="positiveSessionScopedObjectTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveSessionScopedObject.jsp HTTP/1.0"
            testName="positiveSessionScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'session' scope, will be available in the current page's HttpSession object. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'session'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is available in the current HttpSession."
        />
    </target>

    <target name="positiveApplicationScopedObjectTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveApplicationScopedObject.jsp HTTP/1.0"
            testName="positiveApplicationScopedObjectTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200" expectHeaders="status:Test Status=PASSED"
            assertion="Bean objects created with 'application' scope, will be available in the current page's ServletContext object. JavaServer Pages Specfication v1.2, Sec. 4.1"
            testStrategy="In one JSP page, create a new bean object using jsp\:useBean with the scope set to 'application'.  After the object has been created, forward the request to a second JSP page to validate that an object associated with the same ID used in the first JSP page is available in the current ServletContext."
        />
    </target>

    <target name="positiveNoBodyTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveNoBody.jsp HTTP/1.0"
            testName="positiveNoBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/positiveNoBody.html"
            assertion="The jsp\:useBean action does not require a body.  JavaServer Pages Specification v1.2, Sec. 4.1"
            testStrategy="Explicit test to ensure that the jsp\:useBean action can be used without a body."
        />
    </target>

    <target name="positiveClassTypeCastTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/positiveClassTypeCast.jsp HTTP/1.0"
            testName="positiveClassTypeCastTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/positiveClassTypeCast.html"
            assertion="Using 'class' and 'type' together in useBean tag, 'Class' is assignable to 'type'.  JavaServler Pages Specification v1.2, Sec 4.1"
            testStrategy="Create a new bean instance with a particulare class set for the class attribute, and a  parent class for the type attribute.  Validate That the instance is cast without an Exception."
        />
    </target>

    <target name="negativeDuplicateIDFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/negativeDuplicateIDFatalTranslationError.jsp HTTP/1.0"
            testName="negativeDuplicateIDFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Duplicate useBean id's found in the same translation unit shall result in a fatal translation error. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="Create two beans with the same id attribute. Validate that a Fatal Translation error occurs."
        />
    </target>

    <target name="negativeSessionScopeFatalTranslationErrorTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/negativeSessionScopeFatalTranslationError.jsp HTTP/1.0"
            testName="negativeSessionScopeFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="It is a fatal translation error to attempt to use session scope when the JSP page has declared via the page directive, that it does not participate in a session. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="Use the page directive to set the session attribute to false and then declare a bean with session scope. Validate that a Fatal Translation error occurs."
        />
    </target>

    <target name="negativeClassCastExceptionTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/negativeClassCastExceptionFwd.jsp HTTP/1.0"
            testName="negativeClassCastExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/negativeClassCastException.html"
            assertion="A java.lang.ClassCastException shall occur at request time when the assignment of the object referenced to the scripting variable fails. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="In one JSP page, declare a bean of a particular type with session scope.  Once declared, this page will forward to a second JSP page which will try to  reference the previously declared bean in the session  scope, but will define the type attribute with  an incompatible type."
        />
    </target>

    <target name="negativeNotFoundTypeInstantiationExceptionTest">
        <gtest request="GET /jsp_coresyntx_act_useBean/jsp/core_syntax/actions/useBean/negativeNotFoundTypeInstantiationException.jsp HTTP/1.0"
            testName="negativeNotFoundTypeInstantiationExceptionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/useBean/goldenfiles/negativeNotFoundTypeInstantiationException.html"
            assertion="If the object specified by useBean is not found in the specified scope and neither class nor beanName are given, a java.lang.InstantiationException  shall occur. JavaServer Pages Specification 1.2 Sec. 4.1"
            testStrategy="Define a new bean within the JSP page without class or beanName defined.  Catch the Exception and print a message."
        />
    </target>

    <target name="positiveForwardCtxRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_forward/jsp/core_syntax/actions/forward/positiveForwardCtxRelative.jsp HTTP/1.0"
            testName="positiveForwardCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/forward/goldenfiles/positiveForwardCtxRelative.html"
            assertion="A request can be forwarded to a JSP page, within the  same context, using a page relative-path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request  to a JSP page within the same context using  a page relative-path."
        />
    </target>

    <target name="positiveForwardCtxRelativeHtmlTest">
        <gtest request="GET /jsp_coresyntx_act_forward/jsp/core_syntax/actions/forward/positiveForwardCtxRelativeHtml.jsp HTTP/1.0"
            testName="positiveForwardCtxRelativeHtmlTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/forward/goldenfiles/positiveForwardCtxRelativeHtml.html"
            assertion="A request can be forwarded to a static resource, within the same context, using a page-relative path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request to  a static resource within the same context using  a page-relative path."
        />
    </target>

    <target name="positiveForwardPageRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_forward/jsp/core_syntax/actions/forward/positiveForwardPageRelative.jsp HTTP/1.0"
            testName="positiveForwardPageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/forward/goldenfiles/positiveForwardPageRelative.html"
            assertion="A request can be forwarded to a JSP page, within the  same context, using a page relative-path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request  to a JSP page within the same context using  a page-relative path."
        />
    </target>

    <target name="positiveForwardPageRelativeHtmlTest">
        <gtest request="GET /jsp_coresyntx_act_forward/jsp/core_syntax/actions/forward/positiveForwardPageRelativeHtml.jsp HTTP/1.0"
            testName="positiveForwardPageRelativeHtmlTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/forward/goldenfiles/positiveForwardPageRelativeHtml.html"
            assertion="A request can be forwarded to a static resource, within the same context, using a page-relative path.  JavaServer Pages Specification 1.2 Sec. 4.5"
            testStrategy="Validate that jsp\:forward can forward a request  to a static resource within the same context using  a page-relative path."
        />
    </target>

    <target name="positiveForwardRequestAttrCtxRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_forward/jsp/core_syntax/actions/forward/positiveRequestAttrCtxRelative.jsp HTTP/1.0"
            testName="positiveForwardRequestAttrCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/forward/goldenfiles/positiveRequestAttrCtxRelative.html"
            assertion="The page attribute of jsp\:forward can accept a request-time attribute with a context-relative path value. JavaServer Pages v1.2, Sec. 4.5"
            testStrategy="Validate that jsp\:forward can properly accept a  request-time attribute containing a context-relative path value."
        />
    </target>

    <target name="positiveForwardRequestAttrPageRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_forward/jsp/core_syntax/actions/forward/positiveRequestAttrPageRelative.jsp HTTP/1.0"
            testName="positiveForwardRequestAttrPageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/forward/goldenfiles/positiveRequestAttrPageRelative.html"
            assertion="The page attribute of jsp\:forward can accept a request-time attribute with a page-relative path value. JavaServer Pages v1.2, Sec. 4.5"
            testStrategy="Validate that jsp\:forward can properly accept a  request-time attribute containing a page-relative path value."
        />
    </target>

    <target name="positiveIncludeCtxRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_include/jsp/core_syntax/actions/include/positiveIncludeCtxRelative.jsp HTTP/1.0"
            testName="positiveIncludeCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/include/goldenfiles/positiveIncludeCtxRelative.html"
            assertion="jsp\:include provides for the inclusion  of dynamic resources, within the same context, using a context-relative path. JavaServer Pages Specification v1.2, Sec. 4.4"
            testStrategy="Include content, using a context-relative path, from JSP page into the current JSP page."
        />
    </target>

    <target name="positiveIncludeCtxRelativeHtmlTest">
        <gtest request="GET /jsp_coresyntx_act_include/jsp/core_syntax/actions/include/positiveIncludeCtxRelativeHtml.jsp HTTP/1.0"
            testName="positiveIncludeCtxRelativeHtmlTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/include/goldenfiles/positiveIncludeCtxRelativeHtml.html"
            assertion="jsp\:include provides for the inclusion  of static resources, within the same context, using a context-relative path. JavaServer Pages Specification v1.2, Sec. 4.4"
            testStrategy="Include content, using a context-relative path, from a static HTML page into the current JSP page."
        />
    </target>

    <target name="positiveIncludePageRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_include/jsp/core_syntax/actions/include/positiveIncludePageRelative.jsp HTTP/1.0"
            testName="positiveIncludePageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/include/goldenfiles/positiveIncludePageRelative.html"
            assertion="jsp\:include provides for the inclusion  of dynamic resources, within the same context, using a page-relative path. JavaServer Pages Specification v1.2, Sec. 4.4"
            testStrategy="Include content, using a page-relative path, from a JSP page into the current JSP page."
        />
    </target>

    <target name="positiveIncludeRequestAttrCtxRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_include/jsp/core_syntax/actions/include/positiveRequestAttrCtxRelative.jsp HTTP/1.0"
            testName="positiveIncludeRequestAttrCtxRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/include/goldenfiles/positiveRequestAttrCtxRelative.html"
            assertion="The page attribute of jsp\:include accepts request-time attributes containing context-relative path values."
            testStrategy="Validate the page attribute of jsp\:include can correctly accept request-time attribute values which contain context-relative paths."
        />
    </target>

    <target name="positiveIncludeRequestAttrPageRelativeTest">
        <gtest request="GET /jsp_coresyntx_act_include/jsp/core_syntax/actions/include/positiveRequestAttrPageRelative.jsp HTTP/1.0"
            testName="positiveIncludeRequestAttrPageRelativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/core_syntax/actions/include/goldenfiles/positiveRequestAttrPageRelative.html"
            assertion="The page attribute of jsp\:include accepts request-time attributes containing page-relative path values."
            testStrategy="Validate the page attribute of jsp\:include can correctly accept request-time attribute values which contain page-relative paths."
        />
    </target>

    <target name="positiveForwardTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveForward.jsp HTTP/1.0"
            testName="positiveForwardTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveForward.html"
            assertion="Calling PageContext.forward(java.lang.String relUrlPath) with a relativeUrlPath that doesn't begin with a leading '/' will forward the current ServletRequest and ServletResponse to another active component in the application relative to the URL of the request that was mapped to the calling JSP. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.forward(String) with a page-relative path and validate the result."
        />
    </target>

    <target name="positiveGetAttributeAvblTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveGetAttributeAvbl.jsp HTTP/1.0"
            testName="positiveGetAttributeAvblTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveGetAttributeAvbl.html"
            assertion="PageContext.getAttribute(java.lang.String name) will return the object associated with the name in the page scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttribute() to retrieve an object located in the page scope.  Validate that methods can be successfully called against the returned object."
        />
    </target>

    <target name="positiveGetAttributeNotAvblTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveGetAttributeNotAvbl.jsp HTTP/1.0"
            testName="positiveGetAttributeNotAvblTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveGetAttributeNotAvbl.html"
            assertion="PageContext.getAttribute(java.lang.String name) will return null of there is no objected assocated with the passed name in the page scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttribute(String) passing in a name in which there is no associated object in the page scope.  Validate that the value returned is null."
        />
    </target>

    <target name="positiveGetAttributeNamesInScopeTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveGetAttributeNamesInScope.jsp HTTP/1.0"
            testName="positiveGetAttributeNamesInScopeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveGetAttributeNamesInScope.html"
            assertion="PageContext.getAttributeNamesInScope(int scope) will return an enumeration of all attributes in the given scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttributeInScope(int) passing in PageContext.PAGE_SCOPE.  Validate that the expected object is found within the returned enumeration."
        />
    </target>

    <target name="positiveGetAttributeScopeTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveGetAttributeScope.jsp HTTP/1.0"
            testName="positiveGetAttributeScopeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveGetAttributeScope.html"
            assertion="PageContext.getAttributeScope(java.lang.String name) returns scope where the attribute is defined. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getAttributeScope(String) against an attribute in page scope.  Validate that the proper scope value is returned."
        />
    </target>

    <target name="checkGetSessionTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/checkGetSession.jsp HTTP/1.0"
            testName="checkGetSessionTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/checkGetSession.html"
            assertion="PageContext.getSession() returns the current HttpSession object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getSession() and verify that the HttpSession instance has the same reference as that referenced by the session scripting variable."
        />
    </target>

    <target name="checkGetResponseTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/checkGetResponse.jsp HTTP/1.0"
            testName="checkGetResponseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/checkGetResponse.html"
            assertion="PageContext.getResponse() returns the current ServletResponse object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getResponse() and verify that the ServletResponse instance has the same reference as that referenced by the response scripting variable."
        />
    </target>

    <target name="checkGetRequestTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/checkGetRequest.jsp HTTP/1.0"
            testName="checkGetRequestTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/checkGetRequest.html"
            assertion="PageContext.getRequest() returns the current ServletRequest object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getRequest() and verify that the ServletRequest instance has the same reference as that referenced by the request scripting variable."
        />
    </target>

    <target name="checkGetServletContextTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/checkGetServletContext.jsp HTTP/1.0"
            testName="checkGetServletContextTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/checkGetServletContext.html"
            assertion="PageContext.getServletContext() returns the current ServletContext object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getServletContext() and verify that the ServletContext instance has the same reference as that referenced by the application scripting variable."
        />
    </target>

    <target name="checkGetServletConfigTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/checkGetServletConfig.jsp HTTP/1.0"
            testName="checkGetServletConfigTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/checkGetServletConfig.html"
            assertion="PageContext.getServletConfig() returns the current ServletConfig object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getServletConfig() and verify that the ServletConfig instance has the same reference as that referenced by the config scripting variable."
        />
    </target>

    <target name="checkGetOutTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/checkGetOut.jsp HTTP/1.0"
            testName="checkGetOutTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/checkGetOut.html"
            assertion="PageContext.getOut() returns the current JspWriter object. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.getOut() and verify that the JspWriter instance has the same reference as that referenced by the out scripting variable."
        />
    </target>

    <target name="positiveIncludeTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveInclude.jsp HTTP/1.0"
            testName="positiveIncludeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveInclude.html"
            assertion="Calling PageContext.include(java.lang.String relUrlPath) with a relativeUrlPath that doesn't begin with a leading '/' will cause the specified content, relative to the URL of the request that was mapped to the calling JSP, to be processed as part of the current ServletRequest and ServletResponse.  JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.include(String) with a page-relative path and validate the result."
        />
    </target>

    <target name="positiveRemoveAttributeTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveRemoveAttribute.jsp HTTP/1.0"
            testName="positiveRemoveAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveRemoveAttribute.html"
            assertion="PageContext.removeAttribute(java.lang.String name) will remove the  object reference associated with the passed name, from all scopes. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.removeAttribute(String) and verify that the  attribute is indeed removed."
        />
    </target>

    <target name="positiveSetAttributeTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveSetAttribute.jsp HTTP/1.0"
            testName="positiveSetAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveSetAttribute.html"
            assertion="PageContext.setAttribute(java.lang.String name, java.lang.Object attribute) will register the name and object specified within the page scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.setAttribute(String,Object) and validate that attribute can be obtained via a call to PageContext.getAttribute(String)."
        />
    </target>

    <target name="positiveSetAttributeInScopeTest">
        <gtest request="GET /jsp_eng_PageContext/jsp/engine/PageContext/positiveSetAttributeInScope.jsp HTTP/1.0"
            testName="positiveSetAttributeInScopeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/PageContext/goldenfiles/positiveSetAttributeInScope.html"
            assertion="PageContext.setAttributeInScope(java.lang.String name, java.lang.Object attribute, int) will register the name and object within the specified scope. JavaServer Pages Specification v1.2, Sec. 9.2.1"
            testStrategy="Call PageContext.setAttribute(String,Object,int) and validate that the attribute is in the scope specified via a call to PageContext.getAttributeScope(String)."
        />
    </target>

    <target name="positiveJSPInitJSPTest">
        <gtest request="GET /jsp_eng_HttpJspPage/jsp/engine/HttpJspPage/positiveJSPInitJSP.jsp HTTP/1.0"
            testName="positiveJSPInitJSPTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/HttpJspPage/goldenfiles/positiveJSPInitJSP.html"
            assertion="Container implementations must ensure that getServletConfig() will return the desired value in cases where page authors override jspInit().  JavaServer Pages Specification v1.2, Sec. 9.1.1"
            testStrategy="Override the jspInit() method in a declaration. Validate that a call to getServletConfig returns a non-null value."
        />
    </target>

    <target name="positivePrintBooleanTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintBoolean.jsp HTTP/1.0"
            testName="positivePrintBooleanTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintBoolean.html"
            assertion="JspWriter.print(boolean b) will print the String produced by java.lang.String.valueOf(boolean).  The byte's displayed will be according to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(boolean b) and validate the result."
        />
    </target>

    <target name="positivePrintCharTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintChar.jsp HTTP/1.0"
            testName="positivePrintCharTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintChar.html"
            assertion="JspWriter.print(char c) prints passed value according to the platform's default character encoding. Server Pages Specification v1.2, Sec 9.2.2"
            testStrategy="Call print(char c) and validate the result."
        />
    </target>

    <target name="positivePrintCharArrayTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintCharArray.jsp HTTP/1.0"
            testName="positivePrintCharArrayTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintCharArray.html"
            assertion="JspWriter.print(char[] s) will print an array of characters according to the platform's default  character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(char[] c) and validate the result."
        />
    </target>

    <target name="positivePrintDoubleTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintDouble.jsp HTTP/1.0"
            testName="positivePrintDoubleTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintDouble.html"
            assertion="JspWriter.print(double d) prints a String representation of a double-precision floating-point number, generated by  java.lang.String.valueOf(double), with the bytes translated to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(double d) and validate the result."
        />
    </target>

    <target name="positivePrintFloatTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintFloat.jsp HTTP/1.0"
            testName="positivePrintFloatTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintFloat.html"
            assertion="JspWriter.print(float f) prints a String representation of a floating point number, generated by java.lang.String.valueOf(float), with the bytes translated to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(float f) and validate the result."
        />
    </target>

    <target name="positivePrintIntTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintInt.jsp HTTP/1.0"
            testName="positivePrintIntTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintInt.html"
            assertion="JspWriter.print(int i) prints a String representation of an integer, generated by java.lang.String.valueOf(int),  with the bytes translated to the platform's default  character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(int i) and validate the result."
        />
    </target>

    <target name="positivePrintLongTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintLong.jsp HTTP/1.0"
            testName="positivePrintLongTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintLong.html"
            assertion="JspWriter.print(long l) prints a String representation of a long integer, generated by java.lang.String.valueOf(long),  with the bytes translated to the platform's default  character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(long l) and validate the result."
        />
    </target>

    <target name="positivePrintObjTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintObj.jsp HTTP/1.0"
            testName="positivePrintObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintObj.html"
            assertion="JspWriter.print(java.lang.Object obj) prints a String  representation of an object, generated by  java.lang.String.valueOf(Object), with the bytes translated  to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(java.lang.Object obj) and validate the result."
        />
    </target>

    <target name="positivePrintStrTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintStr.jsp HTTP/1.0"
            testName="positivePrintStrTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintStr.html"
            assertion="JspWriter.print(java.lang.String str) prints a String  representation of an object, with the bytes translated  to the platform's default character encoding. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call print(java.lang.String str) and validate the result."
        />
    </target>

    <target name="positivePrintlnTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintln.jsp HTTP/1.0"
            testName="positivePrintlnTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintln.html"
            assertion="JspWriter.println() will terminate the current line by writing the ling separator string. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println() and validate the result."
        />
    </target>

    <target name="positivePrintlnBooleanTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnBoolean.jsp HTTP/1.0"
            testName="positivePrintlnBooleanTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnBoolean.html"
            assertion="JspWriter.println(boolean b) prints a boolean value and then terminates the line.  This method behaves as though it invokes print(boolean b) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(boolean b) and validate the result."
        />
    </target>

    <target name="positivePrintlnCharTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnChar.jsp HTTP/1.0"
            testName="positivePrintlnCharTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnChar.html"
            assertion="JspWriter.println(char c) prints a char value and then terminates the line.  This method behaves as though it invokes print(char c) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(char c) and validate the result."
        />
    </target>

    <target name="positivePrintlnCharArrayTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnCharArray.jsp HTTP/1.0"
            testName="positivePrintlnCharArrayTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnCharArray.html"
            assertion="JspWriter.println(char[] s) prints an array of characters and then terminates the line.  This method behaves as though it invokes print(char[] s) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(char c) and validate the result."
        />
    </target>

    <target name="positivePrintlnDoubleTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnDouble.jsp HTTP/1.0"
            testName="positivePrintlnDoubleTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnDouble.html"
            assertion="JspWriter.println(double d) prints a double-precision floating-point value and then terminates the line.   This method behaves as though it invokes print(double d)  and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(double d) and validate the result."
        />
    </target>

    <target name="positivePrintlnFloatTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnFloat.jsp HTTP/1.0"
            testName="positivePrintlnFloatTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnFloat.html"
            assertion="JspWriter.println(float f) prints a floating-point value  and then terminates the line.  This method behaves as though  it invokes print(float f) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(float f) and validate the result."
        />
    </target>

    <target name="positivePrintlnIntTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnInt.jsp HTTP/1.0"
            testName="positivePrintlnIntTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnInt.html"
            assertion="JspWriter.println(int i) prints an integer value  and then terminates the line.  This method behaves as though  it invokes print(int i) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(int i) and validate the result."
        />
    </target>

    <target name="positivePrintlnLongTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnLong.jsp HTTP/1.0"
            testName="positivePrintlnLongTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnLong.html"
            assertion="JspWriter.println(long l) prints a long integer value  and then terminates the line.  This method behaves as though  it invokes print(long l) and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(long l) and validate the result."
        />
    </target>

    <target name="positivePrintlnObjTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnObj.jsp HTTP/1.0"
            testName="positivePrintlnObjTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnObj.html"
            assertion="JspWriter.println(java.lang.Object obj) prints an Object  value and then terminates the line.  This  method behaves as though it invokes print(java.lang.Object obj)  and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(java.lang.Object obj) and validate the result."
        />
    </target>

    <target name="positivePrintlnStrTest">
        <gtest request="GET /jsp_eng_JW_print/jsp/engine/JspWriter/print/positivePrintlnStr.jsp HTTP/1.0"
            testName="positivePrintlnStrTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/print/goldenfiles/positivePrintlnStr.html"
            assertion="JspWriter.println(java.lang.String str) prints a long  integer value and then terminates the line.  This  method behaves as though it invokes print(java.lang.String str)  and then println(). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call println(java.lang.String str) and validate the result."
        />
    </target>

    <target name="positiveClearTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveClear.jsp HTTP/1.0"
            testName="positiveClearTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveClear.html"
            assertion="JspWriter.clear() will cause the contents of the output  buffer to be cleared. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Using a page with the default buffer size of 8kb, write data to the buffer and call clear.  The cleared data should not be present in the response."
        />
    </target>

    <target name="positiveFlushTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveFlush.jsp HTTP/1.0"
            testName="positiveFlushTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveFlush.html"
            assertion="JspWriter.flush() will cause the stream to write any saved content to the intended destiation. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Obtain the current buffer size being used, then write and flush some sample text. Validate that the stream was indeed flushed by checking the number of bytes remaining in  the buffer."
        />
    </target>

    <target name="positiveGetBufferSizeTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveGetBufferSize.jsp HTTP/1.0"
            testName="positiveGetBufferSizeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveGetBufferSize.html"
            assertion="JspWriter.getBufferSize() returns the size of the buffer in bytes used by the particular JspWriter instance. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Set the buffer of the page to 5kb.  Call getBufferSize() and validate that the value returned is as expected."
        />
    </target>

    <target name="positiveGetBufferSizeUnBufferedTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveGetBufferSizeUnBuffered.jsp HTTP/1.0"
            testName="positiveGetBufferSizeUnBufferedTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveGetBufferSizeUnBuffered.html"
            assertion="When buffering is disabled within a particular  JSP page, a call to JspWriter.getBufferSize()  will return 0 (zero). JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Set the buffer to 'none' and call getBufferSize(). Validate that the value returned is 0 (zero)."
        />
    </target>

    <target name="positiveGetRemainingTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveGetRemaining.jsp HTTP/1.0"
            testName="positiveGetRemainingTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveGetRemaining.html"
            assertion="JspWriter.getRemaining() will return the number of  unused bytes in the buffer. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Write 6 bytes of data to the buffer and call getRemaining().  The value returned should be 6 bytes less than the value returned by  getBufferSize()."
        />
    </target>

    <target name="positiveGetRemainingBufferUnsetTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveGetRemainingBufferUnset.jsp HTTP/1.0"
            testName="positiveGetRemainingBufferUnsetTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveGetRemainingBufferUnset.html"
            assertion="JspWriter.getRemaining() will return 0 (zero) if the JSP page doesn't use a buffer. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Set the buffer of the JSP page to 'none', and validate that a call to getRemaining() returns 0 (zero)."
        />
    </target>

    <target name="positiveIsAutoFlushTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveIsAutoFlush.jsp HTTP/1.0"
            testName="positiveIsAutoFlushTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveIsAutoFlush.html"
            assertion="JspWriter.isAutoFlush() will inidicate whether the JspWriter will flush its buffer automatically. JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="JSP pages automatically flush their buffer by default.  Call isAutoFlush() and validated that 'true' is returned."
        />
    </target>

    <target name="positiveNewLineTest">
        <gtest request="GET /jsp_eng_JW_misc/jsp/engine/JspWriter/misc/positiveNewLine.jsp HTTP/1.0"
            testName="positiveNewLineTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/engine/JspWriter/misc/goldenfiles/positiveNewLine.html"
            assertion="JspWriter.newLine() will write a line separator as defined by the system property 'line.separator'. JavaServer Pages Specification v1.2 , Sec. 9.2.2"
            testStrategy="Validate the a call to newLine() produces the expected results."
        />
    </target>

    <target name="positiveTagGetAttributeTest">
        <gtest request="GET /jsp_tagext_TagData/jsp/tagext/TagData/positiveTagGetAttribute.jsp HTTP/1.0"
            testName="positiveTagGetAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagData/goldenfiles/positiveTagGetAttribute.html"
            assertion="Test a TagData object by passing a hashtable and printing  the contents of the hashtable using the getAttribute()  method of TagData., specified in the Java Server Pages  Specification v1.2, Sec 10.5.7"
            testStrategy="Testing TagData release() method"
        />
    </target>

    <target name="positiveTagSetAttributeTest">
        <gtest request="GET /jsp_tagext_TagData/jsp/tagext/TagData/positiveTagSetAttribute.jsp HTTP/1.0"
            testName="positiveTagSetAttributeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagData/goldenfiles/positiveTagSetAttribute.html"
            assertion="Test a TagData object by passing a hashtable created using  setAttribute() method of the TagData and print the contents of the hashtable, specified in the Java Server Pages  Specification v1.2, Sec 10.5.7"
            testStrategy="Testing TagData setAttribute() method"
        />
    </target>

    <target name="positiveTagGetAttributeStringTest">
        <gtest request="GET /jsp_tagext_TagData/jsp/tagext/TagData/positiveTagGetAttributeString.jsp HTTP/1.0"
            testName="positiveTagGetAttributeStringTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagData/goldenfiles/positiveTagGetAttributeString.html"
            assertion="Test a TagData object by passing a hashtable created using  setAttribute() method of the TagData and print the  contents of the hashtable using the getAttributeString()  method, specified in the Java Server Pages Specification  v1.2, Sec 10.5.7"
            testStrategy="Testing TagData getAttributeString() method"
        />
    </target>

    <target name="positiveGetValuesTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveGetValues.jsp HTTP/1.0"
            testName="positiveGetValuesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveGetValues.html"
            assertion="Test for getValues() method which returns an enumeration  and print the contents, specified in the Java Server  Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport getValues() method"
        />
    </target>

    <target name="positiveGetValueTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveGetValue.jsp HTTP/1.0"
            testName="positiveGetValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveGetValue.html"
            assertion="Test for getValue() method, specified in the Java Server  Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport getValue() method"
        />
    </target>

    <target name="positiveRemoveValueTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveRemoveValue.jsp HTTP/1.0"
            testName="positiveRemoveValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveRemoveValue.html"
            assertion="Test for removeValue() method, specified in the Java  Server Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport removeValue() method"
        />
    </target>

    <target name="positiveSetValueTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveSetValue.jsp HTTP/1.0"
            testName="positiveSetValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveSetValue.html"
            assertion="Test for setValue() method, specified in the Java Server  Pages Specification v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport setValue() method"
        />
    </target>

    <target name="positiveGetParentTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveGetParent.jsp HTTP/1.0"
            testName="positiveGetParentTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveGetParent.html"
            assertion="Test for getParent() method which returns the parent class  name, specified in the Java Server Pages Specification  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport getParent() method"
        />
    </target>

    <target name="default_return_valuesTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/default_return_values.jsp HTTP/1.0"
            testName="default_return_valuesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/default_return_values.html"
            assertion="Tests if the default values are returned from the methods of TagSupport class  v1.2, Sec 10.1.4"
            testStrategy="testing TagSupport default return values by calling super.FunctionName"
        />
    </target>

    <target name="positiveTSDoEndTagTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveDoEndTag.jsp HTTP/1.0"
            testName="positiveTSDoEndTagTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveDoEndTag.html"
            assertion="Tests that doEndTag metjod is called when the end of the tag is found  v1.2, Sec 10.1.4"
            testStrategy="testing TagSupport doEndTag method"
        />
    </target>

    <target name="positiveSetGetIdTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveSetGetId.jsp HTTP/1.0"
            testName="positiveSetGetIdTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveSetGetId.html"
            assertion="Test for setId and getId methods of TagSupport  v1.2, Sec 10.1.4"
            testStrategy="testing TagSupport getId and setId in the same test"
        />
    </target>

    <target name="positivefindAncestorWithClassTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positivefindAncestorWithClass.jsp HTTP/1.0"
            testName="positivefindAncestorWithClassTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positivefindAncestorWithClass.html"
            assertion="Test for Nested classes. Tests the findAncestorWithClass method for TagSupport  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport.findAncestorWithClass method"
        />
    </target>

    <target name="positiveDoStartTagTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveDoStartTag.jsp HTTP/1.0"
            testName="positiveDoStartTagTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveDoStartTag.html"
            assertion="Test for checking if doStartTag() is called correctly  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport doStartTag() method"
        />
    </target>

    <target name="positiveSetPageContextTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveSetPageContext.jsp HTTP/1.0"
            testName="positiveSetPageContextTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveSetPageContext.html"
            assertion="Test if setPageContext() can be used to set the page context.Using this page context obj set an attribute which is passed to the jsp page  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport setPageContext() method"
        />
    </target>

    <target name="positiveTSDoAfterBodyTest">
        <gtest request="GET /jsp_tagext_TagSupport/jsp/tagext/TagSupport/positiveDoAfterBody.jsp HTTP/1.0"
            testName="positiveTSDoAfterBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TagSupport/goldenfiles/positiveDoAfterBody.html"
            assertion="Test the DoAfterBody method of the TagSupport class.     Create a Tag handler that outputs a message a given number of times from the DoAFterBody  v1.2, Sec 10.1.4"
            testStrategy="Testing TagSupport setPageContext() method"
        />
    </target>

    <target name="positiveDoInitBodyTest">
        <gtest request="GET /jsp_tagext_BodyTagSupport/jsp/tagext/BodyTagSupport/positiveDoInitBody.jsp HTTP/1.0"
            testName="positiveDoInitBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/BodyTagSupport/goldenfiles/positiveDoInitBody.html"
            assertion="BodyTagSupport.doInitBody() will be called before the first body evaluation. JavaServer Pages Specification v1.2, Sec. 10.2.3"
            testStrategy="Validate that doInitBody() is called by the container."
        />
    </target>

    <target name="positiveBTSDoAfterBodyTest">
        <gtest request="GET /jsp_tagext_BodyTagSupport/jsp/tagext/BodyTagSupport/positiveDoAfterBody.jsp HTTP/1.0"
            testName="positiveBTSDoAfterBodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/BodyTagSupport/goldenfiles/positiveDoAfterBody.html"
            assertion="BodyTagSupport.doAfterBody() will be called after the  body has been evaluated.  The body will not be  reevaluated and the page processing will continue. JavaServerPages Specification v1.2, Sec. 10.2.3"
            testStrategy="Validate that doAfterBody() is called by the container."
        />
    </target>

    <target name="positiveBTSDoEndTagTest">
        <gtest request="GET /jsp_tagext_BodyTagSupport/jsp/tagext/BodyTagSupport/positiveDoEndTag.jsp HTTP/1.0"
            testName="positiveBTSDoEndTagTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/BodyTagSupport/goldenfiles/positiveDoEndTag.html"
            assertion="BodyTagSupport.doEndTag() by default will return EVAL_PAGE when processing the end tag. JavaServer Pages Specification v1.2, Sec. 10.2.3"
            testStrategy="Validate that doEndTag() is called by the container."
        />
    </target>

    <target name="positiveLifeCycleTest">
        <gtest request="GET /jsp_tagext_BodyTagSupport/jsp/tagext/BodyTagSupport/positiveLifeCycle.jsp HTTP/1.0"
            testName="positiveLifeCycleTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/BodyTagSupport/goldenfiles/positiveLifeCycle.html"
            assertion="The complete lifecycle for a tag extending BodyTagSupport will contain calls to doStartTag(), doInitBody(), doAfterBody(), doEndTag(), and release(). JavaServer Pages Specification v1.2, Sec 10.2.3"
            testStrategy="Validate that the appropriate methods are called in order when processing the tag.  NOTE\:  release() is not tested as as the point release() is called is container dependant."
        />
    </target>

    <target name="tag_attr_setting_1Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_attr_setting_1.jsp HTTP/1.0"
            testName="tag_attr_setting_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_attr_setting_1.html"
            assertion="Test that attribute setting is as wanted, specified in the  Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_attr_setting_2Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_attr_setting_2.jsp HTTP/1.0"
            testName="tag_attr_setting_2Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_attr_setting_2.html"
            assertion="Test that attribute setting is as wanted and intermix some  different tags, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_attr_setting_3Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_attr_setting_3.jsp HTTP/1.0"
            testName="tag_attr_setting_3Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_attr_setting_3.html"
            assertion="Another test for attribute setting intermixed with some  different tags, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_BodyContent_1Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_BodyContent_1.jsp HTTP/1.0"
            testName="tag_check_BodyContent_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_BodyContent_1.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_BodyContent_2Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_BodyContent_2.jsp HTTP/1.0"
            testName="tag_check_BodyContent_2Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_BodyContent_2.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_BodyContent_3Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_BodyContent_3.jsp HTTP/1.0"
            testName="tag_check_BodyContent_3Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_BodyContent_3.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_BodyContent_4Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_BodyContent_4.jsp HTTP/1.0"
            testName="tag_check_BodyContent_4Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_BodyContent_4.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_BodyContent_5Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_BodyContent_5.jsp HTTP/1.0"
            testName="tag_check_BodyContent_5Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_BodyContent_5.html"
            assertion="Check that BodyContent provides access to the proper  information, specified in the Java Server Pages  Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_comments_1Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_comments_1.jsp HTTP/1.0"
            testName="tag_check_comments_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_comments_1.html"
            assertion="Check that comments are processed correctly, specified in  the Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_check_comments_2Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_check_comments_2.jsp HTTP/1.0"
            testName="tag_check_comments_2Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_check_comments_2.html"
            assertion="Check that HTML-style comments are processed correctly, specified in  the Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_doEndTag_skip_pageTest">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_doEndTag_skip_page.jsp HTTP/1.0"
            testName="tag_doEndTag_skip_pageTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_doEndTag_skip_page.html"
            assertion="Test for doEndTag SKIP_PAGE, specified in the Java Server  Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_doStart_eval_body_includeTest">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_doStart_eval_body_include.jsp HTTP/1.0"
            testName="tag_doStart_eval_body_includeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_doStart_eval_body_include.html"
            assertion="Test for doStartTag EVAL_BODY_INCLUDE, specified in the Java  Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_doStart_skip_bodyTest">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_doStart_skip_body.jsp HTTP/1.0"
            testName="tag_doStart_skip_bodyTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_doStart_skip_body.html"
            assertion="Test for doStartTag SKIP_BODY, specified in the Java Server  Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="tag_translationtime_verify_1Test">
        <gtest request="GET /jsp_tagext_LifeCycle/jsp/tagext/LifeCycle/tag_translationtime_verify_1.jsp HTTP/1.0"
            testName="tag_translationtime_verify_1Test" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/LifeCycle/goldenfiles/tag_translationtime_verify_1.html"
            assertion="Test for translation-time verification, specified in the  Java Server Pages Specification v1.2, Sec 10.2"
            testStrategy="Testing LifeCycle process"
        />
    </target>

    <target name="persistentValuesTest">
        <gtest request="GET /jsp_tagext_Misc/jsp/tagext/misc/persistentValues.jsp HTTP/1.0"
            testName="persistentValuesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/misc/goldenfiles/persistentValues.html"
            assertion="Tests if the attribute values are retaines when tags are nested inside a tag  Java Server Pages Specification v1.2, Sec 10.1"
            testStrategy="testing persistence of tag attributes"
        />
    </target>

    <target name="request_time_attributesTest">
        <gtest request="GET /jsp_tagext_Misc/jsp/tagext/misc/request_time_attributes.jsp HTTP/1.0"
            testName="request_time_attributesTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/misc/goldenfiles/request_time_attributes.html"
            assertion="Tests the evaluation order of the expressions if attribute values are runtime expressions Java Server Pages Specification v1.2, Sec 2.13.1"
            testStrategy="Testing associativity of expression evaluation"
        />
    </target>

    <target name="positiveImplicitJarMultiTldTest">
        <gtest request="GET /jsp_tagext_ImplicitTldPathResolution/jsp/tagext/TldPathResolution/implicit/positiveImplicitJarMultiTld.jsp HTTP/1.0"
            testName="positiveImplicitJarMultiTldTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TldPathResolution/implicit/goldenfiles/positiveImplicitJarMultiTld.html"
            assertion="Verify that the container, with no explicit taglib mappings within the web.xml, can recognize multiple tlds stored in a jar, and create the appropriate  mapping so that the client can use the tags. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.4 JSP 7.3.8"
            testStrategy="Define two distinct tags for this page, and use the tags so that output will be generated."
        />
    </target>

    <target name="positiveAbsTldTest">
        <gtest request="GET /jsp_tagext_ExplicitTldPathResolution/jsp/tagext/TldPathResolution/explicit/positiveAbsTld.jsp HTTP/1.0"
            testName="positiveAbsTldTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="Verify that the requested tld, using an absoulte URI,  resolves to the appropriate tld. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to an absolute URI.  If successful, no fatal translation error should occur."
        />
    </target>

    <target name="positiveRelTldTest">
        <gtest request="GET /jsp_tagext_ExplicitTldPathResolution/jsp/tagext/TldPathResolution/explicit/positiveRelTld.jsp HTTP/1.0"
            testName="positiveRelTldTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TldPathResolution/explicit/goldenfiles/positiveRelTld.html"
            assertion="Verify that the requested tld, using a relative URI,  resolves to the appropriate tld. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to a relative URI.  Verify that the tag can be successfully used."
        />
    </target>

    <target name="positiveAbsJarTest">
        <gtest request="GET /jsp_tagext_ExplicitTldPathResolution/jsp/tagext/TldPathResolution/explicit/positiveAbsJar.jsp HTTP/1.0"
            testName="positiveAbsJarTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="Verify that the requested tld, using an absoulte URI,  resolves to jar which in turn resolves to a single TLD  (taglib.tld) within the jar. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to an absolute URI.  If successful, no fatal translation error should occur."
        />
    </target>

    <target name="positiveRelJarTest">
        <gtest request="GET /jsp_tagext_ExplicitTldPathResolution/jsp/tagext/TldPathResolution/explicit/positiveRelJar.jsp HTTP/1.0"
            testName="positiveRelJarTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TldPathResolution/explicit/goldenfiles/positiveRelJar.html"
            assertion="Verify that the requested tld, using a relative URI,  resolves to a jar which in ture resolves to a single TLD (taglib.tld) within the jar. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.2 JSP 7.3.3 JSP 7.3.6  JSP 7.3.6.1 JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to a relative URI.  Verify that the tag can be successfully used."
        />
    </target>

    <target name="positiveDirectTldReferenceTest">
        <gtest request="GET /jsp_tagext_ExplicitTldPathResolution/jsp/tagext/TldPathResolution/explicit/positiveDirectTldReference.jsp HTTP/1.0"
            testName="positiveDirectTldReferenceTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            goldenFile="/opt/workspaces/ctsbuild/src/tests/jsp/ee/jsp/tagext/TldPathResolution/explicit/goldenfiles/positiveDirectTldReference.html"
            assertion="Verify that a tag can be used when the URI of the taglib directive refers to the TLD directly. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.6.3"
            testStrategy="Using a taglib directive, reference the desired TLD directly.  Verify that the tag can be successfully used."
        />
    </target>

    <target name="negativeAbsFatalTranslationErrorTest">
        <gtest request="GET /jsp_tagext_ExplicitTldPathResolution/jsp/tagext/TldPathResolution/explicit/negativeAbsFatalTranslationError.jsp HTTP/1.0"
            testName="negativeAbsFatalTranslationErrorTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Verify that a fatal translation error is generated when using an absoulte URI,  fails to resolve to a tld. JavaServer Pages Specification 1.2 Sections\: JSP 7.3.6.2"
            testStrategy="Using a taglib directive, set the uri attribute to an incorrect absolute URI. A fatal translation error should occur."
        />
    </target>

    <target name="precompileNoValueTest">
        <gtest request="GET /jsp_misc_precompilation/jsp/misc/precompilation/precompile.jsp?jsp_precompile HTTP/1.0"
            testName="precompileNoValueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the jsp_precompile request parameter has no value, the request will not be delivered to the target JSP page. JavaServer Pages Specification v1.2, Sec. 8.4.2"
            testStrategy="Validate that no response body is returned when jsp_precompile has no value."
        />
    </target>

    <target name="precompileFalseTest">
        <gtest request="GET /jsp_misc_precompilation/jsp/misc/precompilation/precompile.jsp?jsp_precompile=false HTTP/1.0"
            testName="precompileFalseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the jsp_precompile request parameter is set to false, the request will not be delivered to the target JSP page. JavaServer Pages Specification v1.2, Sec. 8.4.2"
            testStrategy="Validate that no response body is returned when jsp_precompile is set to false."
        />
    </target>

    <target name="precompileTrueTest">
        <gtest request="GET /jsp_misc_precompilation/jsp/misc/precompilation/precompile.jsp?jsp_precompile=true HTTP/1.0"
            testName="precompileTrueTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="If the jsp_precompile request parameter is set to true, the request will not be delivered to the target JSP page. JavaServer Pages Specification v1.2, Sec. 8.4.2"
            testStrategy="Validate that no response body is returned when jsp_precompile is set to true."
        />
    </target>

    <target name="precompileNegativeTest">
        <gtest request="GET /jsp_misc_precompilation/jsp/misc/precompilation/precompile.jsp?jsp_precompile=any_invalid_value HTTP/1.0"
            testName="precompileNegativeTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="500"
            assertion="Valid parameter values for jsp_precompile are 'true', 'false', and no value.  Any other value will result in an HTTP Error; 500 (Server Error). JavaServer Pages specification v1.2, Sec. 8.4.2"
            testStrategy="Set the jsp_precompile request paramter to a non valid value and validate that a 500 error occurs."
        />
    </target>

    <target name="negativeCloseTest">
        <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/negativeClose.jsp HTTP/1.0"
            testName="negativeCloseTest" debug="0"
            host="${host}" port="${port}" exactMatch="false"
            returnCode="200"
            assertion="Any calls that would write or flush the stream after JspWriter.close() has been called will yeild an IOException.  JavaServer Pages Specification v1.2, Sec. 9.2.2"
            testStrategy="Call the first test page which will call out.println() after out.close().  An IOException should be caught.  This exception will be added to the ServletContext.  Call the seconf test page and get, and then remove, the Exception object from the context.  Validate that the Exception object is an instance of IOException">
            <watchdog request="GET /jsp-tests/jsp/engine/JspWriter/misc/closeValidator.jsp HTTP/1.0"
                host="${host}" port="${port}" debug="0" exactMatch="false"
                expectHeaders="status:Test Status=PASSED" nested="true"/>
        </watchdog>
    </target>
</project>
