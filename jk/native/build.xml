<?xml version="1.0" ?>

<project name="jk_native" default="main" basedir=".">
  
  <property file="${user.home}/.ant.properties" />
  <property file="${user.home}/build.properties" />
  <property file="build.properties" />
    
  <!-- Experimental -->

  <path id="jkant" >
    <pathelement location="../jkant/build/classes"/>
    <pathelement location="../jkant/build/jkant.jar"/>
  </path>

  <property name="native.dir" location="." />
  <property name="apxs13" value="/usr/sbin/apxs" />
  <property name="apxs20" value="/opt/apache2/bin/apxs" />
  
  <property name="apache2.home" location="/opt/apache2" />
  <property name="apache13.home" location="/usr" />
  
  <property name="so.debug" value="true" />
  <property name="so.optimize" value="false" />
  <property name="so.profile" value="false" />

  <!-- ==================== Targets ==================== -->

  <target name="main" depends="init,apache20,jni">
  </target>

  <target name="init" >
    <taskdef resource="META-INF/ant.tasks" 
	     classpathref="jkant" />
  </target>

  <target name="jni" depends="init">
    <so sofile="jni_connect" 
	buildDir="jni" 
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}"
	>
      <jniConfig />
      <src dir="${native.dir}">
	<include name="jni/*.c" />
	<include name="common/jk_map.c" />
	<include name="common/jk_util.c" />
	<include name="common/jk_pool.c" />
      </src>
      <includes>
	<pathelement location="${native.dir}/common" />
	<pathelement location="${java.home}/../include" />
	<pathelement location="${apache2.home}/include" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
      </depends>
    </so>
  </target>

  <target name="apache20" depends="init">
    <so sofile="mod_jk" 
	buildDir="apache-2.0"
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}"	>
      <def name="CHUNK_SIZE" value="4096" 
	   info="Read/Write buffer size" />
      <def name="REUSE_WORKER" 
	   unless="option_no_reuse_worker"
	   info="Reuse the worker endpoint, using per thread data" />

      <apacheConfig apxs="${apxs20}" />
      <jniConfig />
      <src dir=".">
	<include name="apache-2.0/mod_jk.c" />
	<include name="common/*.c" />
      </src>
      <includes>
	<pathelement location="${native.dir}/common" />
	<pathelement location="${apache2.home}/include" />
	<pathelement location="${java.home}/../include" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
      </depends>
    </so>
  </target>

  <target name="apache13" depends="init">
    <so sofile="mod_jk" 
	buildDir="apache-1.3"
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}">
      <apacheConfig apxs="${apxs13}" />
      <src dir=".">
	<include name="apache-1.3/mod_jk.c" />
	<include name="common/*.c" />
        <exclude name="common/jk_jni_worker.c" />
      </src>
      <includes>
	<pathelement location="${native.dir}/common" />
	<pathelement location="${apache13.home}/include/apache" />
	<pathelement location="${apache13.home}/include" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
      </depends>
    </so>
  </target>

  <target name="apache13_nw" depends="init">
    <so target="mod_jk" 
        extension=".nlm"
	buildDir="apache-1.3"
	optimize="${so.optimize}"
	debug="${so.debug}"
	profile="${so.profile}">
      <def name="N_PLAT_NLM"
	   info="Building for NetWare platform" />
      <def name="NETWARE"
	   info="Building for NetWare platform" />
      <def name="XP_NETWARE"
	   info="Building for NetWare platform" />
      <def name="USE_SPRINTF"
	   info="Use the sprintf function to build strings" />
      <src dir=".">
	<include name="apache-1.3/mod_jk.c" />
	<include name="common/*.c" />
        <exclude name="common/jk_jni_worker.c" />
      </src>
      <includes>
	<pathelement location="${native.dir}/common" />
	<pathelement location="${novellndk.dir}/include/nlm" />
	<pathelement location="${novellndk.dir}/include" />
	<pathelement location="${build.compiler.base}/include" />
	<pathelement location="${apache13.home}/include/apache" />
	<pathelement location="${apache13.home}/include" />
	<pathelement location="${apache13.home}/os/netware" />
	<pathelement location="${novellndk.dir}/include/winsock" />
      </includes>
      <depends>
	<fileset dir="${native.dir}/common" includes="*.h" />
      </depends>
      <nlmmodule value="apache" />
      <import fileName="${novellndk.dir}/imports/clib.imp" />
      <import fileName="${novellndk.dir}/imports/lib0.imp" />
      <import fileName="${novellndk.dir}/imports/nlmlib.imp" />
      <import fileName="${novellndk.dir}/imports/threads.imp" />
      <import fileName="${novellndk.dir}/imports/socklib.imp" />
      <import fileName="${novellndk.dir}/imports/ws2nlm.imp" />
      <import fileName="${apache13.home}/os/netware/ApacheCore.imp" />
      <export symbol="jk_module" />
    </so>
  </target>

  <target name="clean" >
    <delete >
      <fileset dir=".">
	<include name="**/*.o"/>
	<include name="**/*.so"/>
	<include name="**/*.lo"/>
	<include name="**/*.la"/>
	<include name="**/.libs"/>
	<include name="**/*.nlm"/>
	<include name="**/*.map"/>
	<include name="**/*.sym"/>
      </fileset>
    </delete>
  </target>

</project>
