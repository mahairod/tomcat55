<project name="modeler-test" default="mini-tomcat" basedir=".">

  <property file="${user.home}/build.properties"/>
  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="build.properties.default"/>
  <property file="../build.properties.default"/>

  <property name="base.dir" location="/usr/share/java" />
  <property name="base.src" location="../.." />
  <property name="tomcat.src" location=".." />
  <property name="catalina.src" location="../../jakarta-tomcat-catalina" />
  <property name="jakarta-commons" location="${base.src}/jakarta-commons" />
  <property name="jmx.home" location="${base.dir}/jmx-ri_1.2" />

  <property name="tomcat.home" location="${tomcat.src}/build" />

  <property name="commons-modeler.home" location="${jakarta-commons}/modeler/dist" />

  <property name="commons-modeler.jar" location="${commons-modeler.home}/commons-modeler.jar" />
  <property name="commons-logging.jar" location="${jakarta-commons}/logging/dist/commons-logging.jar" />
  <property name="log4j.jar" location="${base.dir}/log4j/log4j.jar" />

  <path id="tomcatCP-extra" /> 

  <target name="init" unless="init.done">
    <property name="tomcat.home" location=".." />

    <path id="tomcatCP" >
      <path refid="tomcatCP-extra"/>
      <fileset dir="${jmx.home}/lib" includes="*.jar"/>
      <pathelement path="${commons-logging.jar}" />
      <pathelement path="${log4j.jar}" />
      <pathelement path="/ws/log4j" />
      <fileset dir="${commons-modeler.home}" includes="*.jar" />

      <fileset dir="${tomcat.home}/server/lib" >
        <include name="catalina.jar" />
        <include name="commons-digester.jar" />
        <include name="commons-beanutils.jar" />

        <include name="tomcat-coyote.jar" />
        <include name="tomcat-http11.jar" />
        <include name="tomcat-jk2.jar" />
        <include name="tomcat-util.jar" />
      </fileset>

      <fileset dir="${tomcat.home}/common/lib">
        <include name="servlet-api.jar" />
        <include name="jsp-api.jar" />
        <include name="jasper-runtime.jar" />
        <include name="naming-common.jar" />
        <include name="naming-factory.jar" />
        <include name="naming-java.jar" />
        <include name="naming-resources.jar" />
        <include name="commons-collections.jar" />
      </fileset>

    </path>

    <!-- Ant1.6
      <classloader classpathRef="tomcatCP"/>
      <taskdef resource="org/apache/commons/modeler/ant/ant.properties"/>
     -->
  
    <taskdef resource="org/apache/commons/modeler/ant/ant.properties"
             classpathref="tomcatCP" />
    <property name="init.done" value="true"/>
  </target>


  <!-- ==================== Info ==================== 
       Call this target if you want env info
    -->

  <target name="echo-cp" depends="init" description="Display the classpath that will be used" >
    <echo message="CLASSPATH=${toString:tomcatCP}" />
  </target>

  <!-- ==================== Console - for debugging. ==================== 
       Call this target if you want the console added.
    -->

  <target name="jmx-console" depends="init" description="Enable JMX-RI console ( web interface )" >
    <mbean code="com.sun.jdmk.comm.HtmlAdaptorServer"
           name="jmx-console:type=HtmlAdaptorServer,port=9998">
    </mbean>
    <jmx-attribute objectName="jmx-console:type=HtmlAdaptorServer,port=9998" 
                   attribute="Port" type="int" value="9998"/>

    <jmx-operation objectName="jmx-console:type=HtmlAdaptorServer,port=9998"
                   operation="start" />
  </target>


  <!-- ==================== Minimal profile. ==================== 
       The most basic tomcat ( work in progress ! ). 
    -->
  <target name="mini-tomcat" depends="init">
    <!-- Load mbeans -->
    <!-- Tomcat will fill in the missing pieces - if a component is 
         needed default values will be created. 

         For example: The ajp connector will create it's own pool, while the http
         connector is configured with a specific instance.
      -->

    <modeler code="org.apache.tomcat.util.threads.ThreadPool"
           name="tomcat:type=ThreadPool,name=HttpConnectorPool" />

    <mbean code="org.apache.commons.modeler.BaseModelMBean"
           name="tomcat:type=HttpConnector,port=9080" >
      <arg type="java.lang.String" >org.apache.coyote.http11.Http11Protocol</arg>
    </mbean>

    <modeler code="org.apache.catalina.core.StandardServer"
           name="tomcat:type=Server" />

    <modeler code="org.apache.catalina.core.StandardHost"
           name="tomcat:type=Host,host=default" />

    <modeler code="org.apache.catalina.core.StandardContext"
           name="tomcat:type=Context,host=default,context=/" />


    <!-- Customization -->
    <!-- This should be made persistent - model mbean should be able to save this
         ( in the standalone version, not the ant file )
      -->
    <!--
    <jmx-attribute objectName="tomcat:type=HttpConnector,port=9080" 
                   attribute="poolName" 
                   value="tomcat:type=ThreadPool,name=HttpConnectorPool" />   
    -->

    <jmx-attribute objectName="tomcat:type=Host,host=default" 
                   attribute="appBase" 
                   value="webapps" />   

    <jmx-attribute objectName="tomcat:type=ThreadPool,name=HttpConnectorPool"
                   attribute="daemon"
                   type="boolean"
                   value="false" />

    <!-- Start the server -->
    <!-- 
      -->
    <jmx-operation objectName="tomcat:type=Server" 
                   operation="start" />

    <jmx-operation objectName="tomcat:type=ThreadPool,name=HttpConnectorPool"
                   operation="start" />

    <jmx-operation objectName="tomcat:type=Server" 
                   operation="await" />

  </target>


  <!-- ======================= Server.xml based ================ -->
   <target name="set-cp-all" >
    <path id="tomcatCP-extra">
      <fileset dir="${jmx.home}/lib" includes="*.jar"/>
      <fileset dir="${tomcat.home}/common/lib" includes="*.jar"/>
      <fileset dir="${tomcat.home}/server/lib" includes="*.jar" 
               excludes="mx4j**"/>
      <fileset dir="${tomcat.home}/bin" includes="*.jar"/>
    </path>
  </target>

  <target name="run" depends="set-cp-all,init"
        description="Start tomcat as an mbean using server.xml config and returns">

    <modeler code="org.apache.catalina.startup.Catalina"
          name="catalina:type=server" />

    <jmxSet objectName="catalina:type=server"
            attribute="catalinaHome"
            value="${tomcat.home}"/>
  
    <!-- We could also call init and set other properties - 
         init should load the modules -->

    <jmx objectName="catalina:type=server"
         operation="start" />
    
    <echo message="Tomcat5 running"/>
  </target>

  <!-- ==================== Await ==================== 
       Call this target if you want the build file to hung in "await". Tomcat stop or ^C will stop 
       the ant execution
    -->
  <target name="await" depends="init"
        description="Wait for tomcat stop. Call this target after run">

    <jmx objectName="catalina:type=server"
         operation="await" />

  </target>

  <target name="start" depends="set-cp-all,init,run,await" description="Start tomcat, wait for stop message"/>


  <!-- ==================== Build tools ==================== 
  -->
  <target name="convert-mbeans" depends="init" >
    <mbeans-descriptors file="${catalina.src}/catalina/src/share/org/apache/catalina/mbeans/mbeans-descriptors.xml"
              out="${catalina.src}/catalina/src/share/org/apache/catalina/mbeans/mbeans-descriptors.xml.ser" />
  </target>

</project>
