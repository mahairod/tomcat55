deltaManager.createSession.ise=createSession: Too many active sessions
deltaManager.createSession.newSession=Created a DeltaSession with Id [{0}] Total count={1}
deltaManager.createMessage.access=Manager [{0}]: create session message [{1}] access.
deltaManager.createMessage.accessChangePrimary=Manager [{0}]: create session message [{1}] access to change primary.
deltaManager.createMessage.allSessionData=Manager [{0}] send all session data.
deltaManager.createMessage.delta=Manager [{0}]: create session message [{1}] delta request.
deltaManager.createMessage.expire=Manager [{0}]: create session message [{1}] expire.
deltaManager.createMessage.unableCreateDeltaRequest=Unable to serialize delta request for sessionid [{0}]
deltaManager.loading.cnfe=ClassNotFoundException while loading persisted sessions: {0}
deltaManager.loading.ioe=IOException while loading persisted sessions: {0}
deltaManager.loading.withContextClassLoader=Manager [{0}]: Loading the object data with a context class loader.
deltaManager.loading.withoutClassLoader=Manager [{0}]: Loading the object data without a context class loader.
deltaManager.managerLoad=Exception loading sessions from persistent storage
deltaManager.noCluster=Starting... no cluster associated with this context: ({0})
deltaManager.noMembers=Manager [{0}]: skipping state transfer. No members active in cluster group.
deltaManager.noSessionState=Manager ({0)): No session state received, timing out.
deltaManager.notStarted=Manager has not yet been started
deltaManager.sendMessage.newSession=Manager [{0}] send new session ({1})
deltaManager.expireSessions=Manager [{0}] expiring sessions upon shutdown
deltaManager.receiveMessage.accessed=Manager [{0}]: received session [{1}] accessed.
deltaManager.receiveMessage.createNewSession=Manager [{0}]: received session [{1}] created.
deltaManager.receiveMessage.delta=Manager [{0}]: received session [{1}] delta.
deltaManager.receiveMessage.error=Manager [{0}]: Unable to receive message through TCP channel
deltaManager.receiveMessage.eventType=Manager [{0}]: Received SessionMessage of type=({1}) from {2}
deltaManager.receiveMessage.expired=Manager [{0}]: received session [{1}] expired.
deltaManager.receiveMessage.unloadingAfter=Manager [{0}]: unloading sessions complete
deltaManager.receiveMessage.unloadingBegin=Manager [{0}]: start unloading sessions
deltaManager.receiveMessage.allSessionDataAfter=Manager [{0}]: session state deserialized
deltaManager.receiveMessage.allSessionDataBegin=Manager [{0}]: received session state data
deltaManager.sessionReceived=Manager [{0}]; session state received in {1} ms.
deltaManager.sessionTimeout=Invalid session timeout setting {0}
deltaManager.startClustering=Starting clustering manager at {0}
deltaManager.stopped=Manager [{0}] is stopping
deltaManager.unloading.ioe=IOException while saving persisted sessions: {0}
deltaManager.waitForSessionState=Manager [{0}], requesting session state from {1}. This operation will timeout if no session state has been received within 60 seconds.
deltaSession.notifying=Notifying cluster of expiration primary={0} sessionId[{1}]
deltaSession.valueBound.ex=Session bound listener throw an exception
deltaSession.valueBinding.ex=Session binding listener throw an exception
deltaSession.valueUnbound.ex=Session unbound listener throw an exception
deltaSession.readSession=readObject() loading session [{0}]
deltaSession.readAttribute=session [{0}] loading attribute '{1}' with value '{2}'
deltaSession.writeSession=writeObject() storing session [{0}]
jvmRoute.cannotFindSession=Can't find session [{0}]
jvmRoute.changeSession=Changed session from [{0}] to [{1}]
jvmRoute.clusterListener.started=Cluster JvmRouteSessionIDBinderListener started
jvmRoute.clusterListener.stopped=Cluster JvmRouteSessionIDBinderListener stoppedjvmRoute.listener.started=SessionID Binder Listener started
jvmRoute.contextNotFound=Context [{0}] not found at note [{1}]!
jvmRoute.failover=Detected a failover with different jvmRoute - orginal route: [{0}] new one: [{1}] at session id [{2}]
jvmRoute.foundManager=Found Cluster DeltaManager {0} at {1}
jvmRoute.hostNotFound=No host found [{0}]
jvmRoute.listener.started=SessionID Binder Listener started
jvmRoute.listener.stopped=SessionID Binder Listener stopped
jvmRoute.lostSession=Lost Session [{0}] at path [{1}]
jvmRoute.missingJvmRouteAttribute=No engine jvmRoute attribute configured!
jvmRoute.newSessionCookie=Setting cookie with session id [{0}] name: [{1}] path: [{2}] secure: [{3}]
jvmRoute.notFoundManager=Not found Cluster DeltaManager {0} at {1}
jvmRoute.receiveMessage.sessionIDChanged=Cluster JvmRouteSessionIDBinderListener received orginal session ID [{0}] set to new id [{1}] for context path [{2}]
jvmRoute.run.already=jvmRoute SessionID receiver run already
jvmRoute.skipURLSessionIDs=Skip reassign jvm route check, sessionid comes from URL!
jvmRoute.turnoverInfo=Turnover Check time {0} msec
jvmRoute.valve.alreadyStarted=jvmRoute backup sessionID correction is started
jvmRoute.valve.notStarted=jvmRoute backup sessionID correction run already
jvmRoute.valve.started=JvmRouteBinderValve started
jvmRoute.valve.stopped=JvmRouteBinderValve stopped
