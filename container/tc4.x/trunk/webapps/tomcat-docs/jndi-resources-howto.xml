<?xml version="1.0"?>
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document>

    &project;

    <properties>
        <author email="craigmcc@apache.org">Craig R. McClanahan</author>
        <title>JNDI Resources HOW-TO</title>
    </properties>

<body>


<section name="Introduction">

<p>Tomcat 4 provides a JNDI <strong>InitialContext</strong> implementation
instance to web applications running under it, in a manner that is compatible
with those provided by a <a href="http://java.sun.com/j2ee">Java2 Enterprise
Edition</a> application server.  Entries in this <code>InitialContext</code>
are configured in the <code>$CATALINA_HOME/conf/server.xml</code> file, and
may be referenced by the following elements in the web application deployment
descriptor (<code>/WEB-INF/web.xml</code>) of your web application:</p>
<ul>
<li><code><strong>&lt;env-entry&gt;</strong></code> - Environment entry, a
    single-value parameter that can be used to configure how the application
    will operate.</li>
<li><code><strong>&lt;resource-ref&gt;</strong></code> - Resource reference,
    which is typically to an object factory for resources such as a JDBC
    <code>DataSource</code>, a JavaMail <code>Session</code>, or custom
    object factories configured into Tomcat 4.</li>
<li><code><strong>&lt;resource-env-ref&gt;</strong></code> - Resource
    environment reference, a new variation of <code>resource-ref</code>
    added in Servlet 2.3 that is simpler to configure for resources
    that do not require authentication information.</li>
</ul>

<p>The <code>InitialContext</code> is configured as a web application is
initially deployed, and is made available to web application components (for
read-only access).  All configured entries and resources will be placed in
the <code>java:comp/env</code> portion of the JNDI namespace, so a typical
access to a resource - in this case, to a JDBC <code>DataSource</code> -
would look something like this:</p>
<source>
// Obtain our environment naming context
Context initCtx = new InitialContext();
Context envCtx = initCtx.lookup("java:comp/env");

// Look up our data source
DataSource ds = (DataSource)
  envCtx.lookup("jdbc/EmployeeDB");

// Allocate and use a connection from the pool
Connection conn = ds.getConnection();
... use this connection to access the database ...
conn.close();
</source>

<p>See the following Specifications for more information about programming APIs
for JNDI, and for the features supported by Java2 Enterprise Edition (J2EE)
servers, which Tomcat emulates for the services that it provides:</p>
<ul>
<li><a href="http://java.sun.com/products/jndi/#download">Java Naming and
    Directory Interface</a> (included in JDK 1.4, available separately for
    prior JDK versions)</li>
<li><a href="http://java.sun.com/j2ee/download.html">J2EE Platform
    Specification</a> (in particular, see Chapter 5 on <em>Naming</em>)</li>
</ul>

</section>


<section name="Configuring JNDI Resources">

<p>Each available JNDI Resource is configured based on inclusion of the
following elements in the <code>$CATALINA_HOME/conf/server.xml</code>
file:</p>
<ul>
<li><a href="config/context.html#Environment Entries">&lt;Environment&gt;</a> -
    Configure names and values for scalar environment entries that will be
    exposed to the web application through the JNDI
    <code>InitialContext</code> (equivalent to the inclusion of an
    <code>&lt;env-entry&gt;</code> element in the web application
    deployment descriptor).</li>
<li><a href="config/context.html#Resource Definitions">&lt;Resource&gt;</a> -
    Configure the name and data type of a resource made available to the
    application (equivalent to the inclusion of a
    <code>&lt;resource-ref&gt;</code> element in the web application
    deployment descriptor).</li>
<li><a href="config/context.html#Resource Parameters">&lt;ResourceParams&gt;</a> -
    Configure the Java class name of the resource factory implementation to be
    used, as well as JavaBeans properties used to configure that resource
    factory.</li>
</ul>

<p>Any number of these elements may be nested inside a
<a href="config/context.html">&lt;Context&gt;</a> element (to be associated
only with that particular web application) or inside a
<a href="config/defaultcontext.html">&lt;DefaultContext&gt;</a> element
(used to set the default configuration characteristics for automatically
deloyed applications).</p>

<p>In addition, the names and values of all <code>&lt;env-entry&gt;</code>
elements included in the web application deployment descriptor
(<code>/WEB-INF/web.xml</code>) are configured into the initial context as
well, overriding corresponding values from <code>conf/server.xml</code>
<strong>only</strong> if allowed by the corresponding
<code>&lt;Environment&gt;</code> element (by setting the
<code>override</code> attribute to "true").</p>

</section>


<section name="Tomcat Standard Resource Factories">

  <subsection name="JavaMail Sessions">
  </subsection>

  <subsection name="JDBC Data Sources">
  </subsection>

  <subsection name="User Transactions">
  </subsection>

</section>


<section name="Adding Custom Resource Factories">

</section>



</body>

</document>
