<project name="tomcat-docs" default="build-main" basedir=".">


  <!-- ===================== Initialize Property Values =================== -->

  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="../../build.properties"/>
  <property file="${user.home}/build.properties"/>

  <property name="build.compiler"  value="classic"/>
  <property name="webapps.build"   value="../build"/>
  <property name="webapps.dist"    value="../dist"/>
  <property name="webapp.name"     value="tomcat-docs"/>


  <!-- ================== Derived Property Values ========================= -->
  <property name="site.xsl"        value="../../../jakarta-site2/xdocs/stylesheets/site.xsl"/>


  <!-- =================== BUILD: Create Directories ====================== -->
  <target name="build-prepare">
    <mkdir dir="${webapps.build}"/>
    <mkdir dir="${webapps.build}/${webapp.name}"/>
  </target>


  <!-- ================ BUILD: Copy Static Files ========================== -->
  <target name="build-static" depends="build-prepare">

    <!-- Top Level Static Files -->
    <copy    todir="${webapps.build}/${webapp.name}">
      <fileset dir="../..">
        <include name="BUILDING.txt"/>
        <include name="README.txt"/>
        <include name="RUNNING.txt"/>
      </fileset>
    </copy>

    <!-- WEB-INF Static Files -->
    <copy    todir="${webapps.build}/${webapp.name}/WEB-INF">
      <fileset dir="WEB-INF"/>
    </copy>

    <!-- Application Developer's Guide Examples -->
    <copy    todir="${webapps.build}/${webapp.name}/appdev">
      <fileset dir="appdev" includes="*.txt"/>
    </copy>
    <copy    todir="${webapps.build}/${webapp.name}/appdev/sample">
      <fileset dir="appdev/sample"/>
    </copy>
    <copy   tofile="${webapps.build}/${webapp.name}/appdev/sample/build.xml"
              file="appdev/build.xml.txt"/>

    <!-- Catalina Javadocs -->
    <mkdir     dir="${webapps.build}/${webapp.name}/catalina/docs/api"/>
    <copy    todir="${webapps.build}/${webapp.name}/catalina/docs/api">
      <fileset dir="../../catalina/build/javadoc"/>
    </copy>

    <!-- Images Subdirectory -->
    <mkdir     dir="${webapps.build}/${webapp.name}/images"/>
    <copy    todir="${webapps.build}/${webapp.name}/images">
      <fileset dir="images"/>
    </copy>

    <!-- Jasper Javadocs -->
    <mkdir     dir="${webapps.build}/${webapp.name}/jasper/docs/api"/>
    <copy    todir="${webapps.build}/${webapp.name}/jasper/docs/api">
      <fileset dir="../../jasper/build/javadoc"/>
    </copy>

    <!-- Servlet/JSP Javadocs -->
    <mkdir     dir="${webapps.build}/${webapp.name}/servletapi"/>
    <copy    todir="${webapps.build}/${webapp.name}/servletapi">
      <fileset dir="${servletapi.home}/docs/api"/>
    </copy>

    <!-- WEB-INF Subdirectory -->
    <mkdir     dir="${webapps.build}/${webapp.name}/WEB-INF"/>
    <copy    todir="${webapps.build}/${webapp.name}/WEB-INF">
      <fileset dir="WEB-INF"/>
    </copy>

  </target>


  <!-- ================= BUILD: XML-HTML Generation ======================= -->
  <target name="build-main" depends="build-static">


    <!-- Top Level Directory -->
    <style basedir="."
           destdir="${webapps.build}/${webapp.name}"
         extension=".html"
             style="tomcat-docs.xsl"
          excludes="build.xml project.xml"
          includes="*.xml">
      <param name="relative-path" expression="."/>
    </style>

    <!-- Application Developer's Guide -->
    <style basedir="appdev"
           destdir="${webapps.build}/${webapp.name}/appdev"
         extension=".html"
             style="../tomcat-docs.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>

    <!-- Server Configuration Reference -->
    <style basedir="config"
           destdir="${webapps.build}/${webapp.name}/config"
         extension=".html"
             style="../tomcat-docs.xsl"
          excludes="project.xml"
          includes="*.xml">
      <param name="relative-path" expression=".."/>
    </style>

  </target>


  <!-- ==================== BUILD: Rebuild Everything ===================== -->
  <target name="all" depends="build-clean,build-main"/>


  <!-- ======================= BUILD: Clean Directory ===================== -->
  <target name="build-clean">
    <delete dir="${webapps.build}/${webapp.name}"/>
  </target>


  <!-- ======================= DIST: Create Directories =================== -->
  <target name="dist-prepare">
    <mkdir dir="${webapps.dist}"/>
  </target>


  <!-- ======================= DIST: Create Distribution Files ============ -->
  <target name="dist" depends="build-main,dist-prepare">
      <jar   jarfile="${webapps.dist}/${webapp.name}.war"
             basedir="${webapps.build}/${webapp.name}" includes="**"/>
  </target>


  <!-- ======================= DIST: Clean Directory ====================== -->
  <target name="dist-clean">
    <delete dir="${webapps.dist}/${webapp.name}"/>
  </target>


  <!-- ====================== Convenient Synonyms ========================= -->
  <target name="clean" depends="build-clean,dist-clean"/>


</project>
