                     Apache Tomcat Version 4.0
                     =========================
                            Release Notes
                            =============

$Id$


============
INTRODUCTION:
============


This document describes the changes that have been made in the current
release candidate release of Apache Tomcat, relative to the previous release.

Bug reports should be entered at the bug reporting system for
Jakarta projects at:

        http://nagoya.apache.org/bugzilla/

Please report bugs and feature requests under product name "Tomcat 4".



============
NEW FEATURES:
============


--------------------
General New Features:
--------------------

The 1.4 release of Ant is now required in order to build Tomcat 4.0
from source. Previous versions relied on Ant 1.3.


---------------------
Catalina New Features:
---------------------


-------------------
Jasper New Features:
-------------------


--------------------
Webapps New Features:
--------------------


==========================
BUG FIXES AND IMPROVEMENTS:
==========================


------------------
Generic Bug Fixes:
------------------


------------------
Catalina Bug Fixes:
------------------

WebdavServlet:  The protocol name is no longer hard coded when parsing a
destination header, which fixes problems when using https.

StandardManager:  Catch and log exceptions thrown by session.expire() when
sessions are being timed out.  Previously, any such exception would terminate
the thread that checks for timed out sessions.

StandardWrapperValve:  Do not set a character encoding on the default page
created for an HTTP status code.  This was causing problems for Netscape
Navigator when handling 302 redirects.

StandardContext:  If a problem occurs during application startup (the start()
method), call stop() so that a web application is not left in a partly started
state.  Among other things, this allows you to restart the app from the
Manager web application after correcting the problem that caused the startup
to fail.


----------------
Jasper Bug Fixes:
----------------

Parser:  Fix a bug that was causing null pointer exceptions in
JakartaCommentGenerator.

Compiler:  Remove a spurious "null" in an error message when no mapping back
to the original source file can be performed.


-----------------
Webapps Bug Fixes:
-----------------


============================
KNOWN ISSUES IN THIS RELEASE:
============================


---------------------
Tomcat 4.0 and Apache:
---------------------

The binary distribution for Tomcat 4.0 includes the most recent stable version
of the WARP connector, which is the Tomcat component that talks to mod_webapp
inside Apache 1.3.  The current state of this support is summarized as follows:

* The mod_webapp connector is configured based on the contents of the
  web.xml file for your web application.  The only required per-webapp
  configuration information in your Apache 1.3 httpd.conf file is
  something like this:

    WebAppDeploy examples   warpConnection   /examples/

  which causes mod_webapp to automatically recognize all of your servlet
  mappings, security constraints, and other configuration elements.

* The final version of the mod_webapp connector will be released separately
  when remaining bugs are fixed.  If any changes are necessary to the Java
  end of the connector, they will be packaged in a single JAR file (warp.jar)
  to be installed into $CATALINA_HOME/server/lib of the Tomcat 4.0 final
  release.


-------------------------------------
Tomcat 4.0 and JNI Based Applications:
-------------------------------------

Applications that require native libraries must ensure that the libraries have
been loaded prior to use.  Typically, this is done with a call like:

  static {
    System.loadLibrary("path-to-library-file");
  }

in some class.  However, the application must also ensure that the library is
not loaded more than once.  If the above code were placed in a class inside
the web application (i.e. under /WEB-INF/classes or /WEB-INF/lib), and the
application were reloaded, the loadLibrary() call would be attempted a second
time.

To avoid this problem, place classes that load native libraries outside of the
web application, and ensure that the loadLibrary() call is executed only once
during the lifetime of a particular JVM.


-------------------------
JSP Command Line Compiles:
-------------------------

Tomcat 4.0 includes a command-line utility (jspc.bat or jscp.sh) to precompile
individual JSP pages, or all JSP pages in an application.  If the page(s) you
are compiling include references to custom tag libraries, you MUST use the
"-webapp" command line option so that the entire web application (including
all the required tag library descriptors and JAR files) is available to the
compiler.


----------------------------------
Tomcat 4.0 Standard APIs Available:
----------------------------------

A standard installation of Tomcat 4 makes all of the following APIs available
for use by web applications (by placing them in "common/lib" or "lib"):
* activation.jar (Java Activation Framework)
* crimson.jar (Unsealed version of JAXP/1.1 parser)
* jaxp.jar (Unsealed version of JAXP/1.1 API classes)
* jdbc2_0-stdext.jar (JDBC 2.0 Optional Package, javax.sql.*)
* jndi.jar (JNDI 1.2 base API classes)
* jta-spec1_0_1 (Java Transacation APIs)
* ldap.jar (JNDI LDAP provider required by JNDIRealm)
* mail.jar (JavaMail 1.2)
* servlet.jar (Servlet 2.3 and JSP 1.2 APIs)
* tyrex-0.9.7.0.jar (Tyrex XA-compatible data source from tyrex.exolab.org)


--------------------------
Tomcat 4.0 and XML Parsers:
--------------------------

As described above, Tomcat 4.0 makes an XML parser (and many other standard
APIs) available to web applications.  This parser is also used internally
to parse web.xml files and the server.xml configuration file.  If you wish,
you may replace the "jaxp.jar" and "crimson.jar" files in "common/lib" with
another XML parser, as long as it is compatible with the JAXP/1.1 APIs.

WARNING:  Tomcat 4.0 ships with a modified version of the JAXP/1.1
"jaxp.jar" and "crimson.jar" files from JAXP/1.1 final release.
The "sealed" attribute has been removed from the manifest file for these
two JARs, to avoid "package sealing violation" errors that were caused by
them in a JDK 1.3 environment.  You MUST NOT replace these files with a
different (or later) release of JAXP, unless that later release has had
the sealed attribute removed, or you will encounter "package sealing violation"
errors when trying to use a different XML parser in a web application.


