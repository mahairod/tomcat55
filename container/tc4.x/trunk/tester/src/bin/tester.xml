<project name="Tester" default="all">

  <!-- ========== Global Properties ======================================= -->
  <property name="catalina.home"  value="../../build/tomcat-4.0"/>
  <property name="debug"          value="0"/>
  <property name="host"           value="localhost"/>
  <property name="port"           value="8080"/>
<!--  <property name="protocol"       value="HTTP/1.0"/> -->
  <property name="protocol"       value=""/> <!-- Use HttpURLConnection -->
  <property name="context.path"   value="/tester"/>
  <property name="manager.path"   value="/manager"/>
  <taskdef  name="tester"     classname="org.apache.tester.TestClient"/>


  <target name="all" depends="ROOT,CaseSensitive,RequestDispatcher,Resources,ServletRequest,ServletResponse,HttpSession"/>


  <target name="ROOT">

    <!-- ========== Basic Run State ======================================= -->

    <!-- Should be able to see the home page -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/index.html"
          status="200"/>

  </target>


  <target name="CaseSensitive">

    <!-- ========== Case Sensitive Request URI Matching =================== -->

    <!-- Make sure that static resources are matched case sensitively -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/index.HTML"
          status="404"/>

    <!-- Should be able to execute the Date example -->
    <touch  file="${catalina.home}/webapps/examples/jsp/dates/date.jsp"/>
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/jsp/dates/date.jsp"
          status="200"/>

    <!-- Should not be able to view the source of the Date example -->
    <touch  file="${catalina.home}/webapps/examples/jsp/dates/date.jsp"/>
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/jsp/dates/date.Jsp"
          status="404"/>

    <!-- Should not be able to view the source of the Date example -->
    <touch  file="${catalina.home}/webapps/examples/jsp/dates/date.jsp"/>
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/jsp/dates/Date.jsp"
          status="404"/>

    <!-- Should not be able to view the source of the Date example -->
    <touch  file="${catalina.home}/webapps/examples/jsp/dates/date.jsp"/>
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/jsp/Dates/date.jsp"
          status="404"/>

    <!-- Should not be able to view the source of the Date example -->
    <touch  file="${catalina.home}/webapps/examples/jsp/dates/date.jsp"/>
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/Jsp/dates/date.jsp"
          status="404"/>

    <!-- Should not be able to view the source of the Date example -->
    <touch  file="${catalina.home}/webapps/examples/jsp/dates/date.jsp"/>
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/Examples/jsp/dates/date.jsp"
          status="404"/>

    <!-- Should be able to execute the HelloWorld servlet example -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/servlet/HelloWorldExample"
          status="200"/>

    <!-- Should not be able to execute HelloWorld with different cases -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/servlet/helloWorldExample"
          status="404"/>

    <!-- Should not be able to execute HelloWorld with different cases -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/examples/Servlet/HelloWorldExample"
          status="404"/>

    <!-- Should not be able to execute HelloWorld with different cases -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="/Examples/servlet/HelloWorldExample"
          status="404"/>

  </target>


  <target name="RequestDispatcher">

    <!-- ========== Forward and Include to Static Resource ================ -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Forward01"
      outContent="Forward01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedForward01"
      outContent="Forward01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Include01"
      outContent="Include01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedInclude01"
      outContent="Include01 PASSED"/>

    <!-- ========== Included Servlet Throwing Exceptions ================== -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Include02?exception=IOException"
      outContent="Include02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Include02?exception=ServletException"
      outContent="Include02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Include02?exception=NullPointerException"
      outContent="Include02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedInclude02?exception=IOException"
      outContent="Include02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedInclude02?exception=ServletException"
      outContent="Include02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedInclude02?exception=NullPointerException"
      outContent="Include02 PASSED"/>

  </target>


  <target name="Resources">

    <!-- ========== Positive ServletContext.getResource() Tests =========== -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources01?mode=context&amp;path=/WEB-INF/web.xml"
      outContent="Resources01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources01?mode=context&amp;path=/Forward01.txt"
      outContent="Resources01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources01?mode=context&amp;path=/Include01.txt"
      outContent="Resources01 PASSED"/>

    <!-- ========== Positive Class.getResource() Tests ==================== -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources01?mode=class&amp;path=/org/apache/tester/Resources01.txt"
      outContent="Resources01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources01?mode=class&amp;path=/org/apache/tester/Unpacked01.txt"
      outContent="Resources01 PASSED"/>

    <!-- ========== Negative ServletContext.getResource() Tests =========== -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources02?mode=context&amp;path=/WEB-INF/web.xml.bad"
      outContent="Resources02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources02?mode=context&amp;path=/Forward02.txt.bad"
      outContent="Resources02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources02?mode=context&amp;path=/Include02.txt.bad"
      outContent="Resources02 PASSED"/>

    <!-- ========== Negative Class.getResource() Tests ==================== -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources02?mode=class&amp;path=/org/apache/tester/Resources02.txt.bad"
      outContent="Resources02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources02?mode=class&amp;path=/org/apache/tester/Unpacked02.txt.bad"
      outContent="Resources02 PASSED"/>

    <!-- ========== Positive ServletContext.getResourceAsStream() Tests === -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources03?mode=context&amp;path=/WEB-INF/web.xml"
      outContent="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources03?mode=context&amp;path=/Forward01.txt"
      outContent="Forward01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources03?mode=context&amp;path=/Include01.txt"
      outContent="Include01 PASSED"/>

    <!-- ========== Positive Class.getResourceAsStream() Tests ============ -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources03?mode=class&amp;path=/org/apache/tester/Resources03.txt"
      outContent="Resources03 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources03?mode=class&amp;path=/org/apache/tester/Unpacked03.txt"
      outContent="Resources03 PASSED"/>

    <!-- ========== Negative ServletContext.getResourceAsStream() Tests === -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources04?mode=context&amp;path=/WEB-INF/web.xml.bad"
      outContent="Resources04 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources04?mode=context&amp;path=/Forward04.txt.bad"
      outContent="Resources04 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources04?mode=context&amp;path=/Include04.txt.bad"
      outContent="Resources04 PASSED"/>

    <!-- ========== Negative Class.getResourceAsStream() Tests ============ -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources04?mode=class&amp;path=/org/apache/tester/Resources04.txt.bad"
      outContent="Resources04 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
         request="${context.path}/Resources04?mode=class&amp;path=/org/apache/tester/Unpacked04.txt.bad"
      outContent="Resources04 PASSED"/>

  </target>


  <target name="ServletRequest">

    <!-- ========== Parameters and Query Strings ========================== -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/GetParameter01?foo=1"
      outContent="GetParameter01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedGetParameter01?foo=1"
      outContent="GetParameter01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/GetParameterMap00?BestLanguage=Java&amp;BestJSP=Java2"
      outContent="GetParameterMap00 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedGetParameterMap00?BestLanguage=Java&amp;BestJSP=Java2"
      outContent="GetParameterMap00 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/GetQueryString01?foo=1"
      outContent="GetQueryString01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedGetQueryString01?foo=1"
      outContent="GetQueryString01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}" method="POST"
       inHeaders="Content-Type:application/x-www-form-urlencoded"
       inContent="b=3&amp;a=2"
         request="${context.path}/Aggregate01?a=1"
      outContent="Aggregate01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}" method="POST"
       inHeaders="Content-Type:application/x-www-form-urlencoded"
       inContent="b=3&amp;a=2"
         request="${context.path}/WrappedAggregate01?a=1"
      outContent="Aggregate01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}" method="POST"
       inHeaders="Content-Type:application/x-www-form-urlencoded"
       inContent="b=3&amp;a=2"
         request="${context.path}/Aggregate02?a=1"
      outContent="Aggregate02 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}" method="POST"
       inHeaders="Content-Type:application/x-www-form-urlencoded"
       inContent="b=3&amp;a=2"
         request="${context.path}/WrappedAggregate02?a=1"
      outContent="Aggregate02 PASSED"/>

    <!-- ========== Other ServletRequest Tests ============================ -->

    <!-- Servlet compliance tests, until equivalent tests are included
         in jakarta-watchdog-4.0.  -->

    <!-- HttpURLConnection does not handle multiple headers for the same
         name correctly, so use native socket connections, selected by
         setting the protocol to "HTTP/1.0" -->

    <tester host="${host}" port="${port}" protocol="HTTP/1.0"
         request="${context.path}/GetHeaders01" debug="${debug}"
       inHeaders="Accept-Language:en-us##Accept-Language:en-gb"
      outContent="GetHeaders01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="HTTP/1.0"
         request="${context.path}/WrappedGetHeaders01" debug="${debug}"
       inHeaders="Accept-Language:en-us##Accept-Language:en-gb"
      outContent="GetHeaders01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/GetInputStream01" debug="${debug}"
      outContent="GetInputStream01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedGetInputStream01" debug="${debug}"
      outContent="GetInputStream01 PASSED"/>


    <!-- ========== Authentication ======================================== -->

    <!-- Once a user has been authenticated, the corresponding user identity
         should be visible to all other requests in this web application, even
         for URIs that are not protected by security constraints.  This is
         tested by invoking a protected URI followed by a non-protected URI
    -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
          debug="${debug}"
         request="${context.path}/protected/Authentication01"
       inHeaders="Authorization:Basic dG9tY2F0OnRvbWNhdA=="
      outContent="Authentication01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
          debug="${debug}"
         request="${context.path}/protected/Authentication02"
       inHeaders="Authorization:Basic dG9tY2F0OnRvbWNhdA=="
      outContent="Authentication02 PASSED"/>


  </target>


  <target name="ServletResponse">


    <!-- ========== Other ServletResponse Tests =========================== -->

    <tester host="${host}" port="${port}" protocol="${protocol}" debug="0"
         request="${context.path}/Reset01"
      outContent="Reset01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}" debug="0"
         request="${context.path}/WrappedReset01"
      outContent="Reset01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}" debug="0"
         request="${context.path}/SetBufferSize01"
      outContent="SetBufferSize01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}" debug="0"
         request="${context.path}/WrappedSetBufferSize01"
      outContent="SetBufferSize01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}" debug="0"
         request="${context.path}/SetLocale01"
      outContent="SetLocale01 PASSED"
      outHeaders="Content-Language:en"/>

    <tester host="${host}" port="${port}" protocol="${protocol}" debug="0"
         request="${context.path}/WrappedSetLocale01"
      outContent="SetLocale01 PASSED"
      outHeaders="Content-Language:en"/>


  </target>


  <target name="HttpSession">

    <!-- ========== Session Attribute Persistence ========================= -->

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Session01" debug="${debug}"
      outContent="Session01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Session02" debug="${debug}"
     joinSession="true"
      outContent="Session02 PASSED"/>

    <!-- NOTE: Assign role "manager" to user "tomcat" for this to work -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
       inHeaders="Authorization:Basic dG9tY2F0OnRvbWNhdA=="
         request="${manager.path}/reload?path=${context.path}"
      outContent="OK - Reloaded application at context path ${context.path}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/Session03" debug="${debug}"
     joinSession="true"
      outContent="Session03 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedSession01" debug="${debug}"
      outContent="Session01 PASSED"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedSession02" debug="${debug}"
     joinSession="true"
      outContent="Session02 PASSED"/>

    <!-- NOTE: Assign role "manager" to user "tomcat" for this to work -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
           debug="${debug}"
       inHeaders="Authorization:Basic dG9tY2F0OnRvbWNhdA=="
         request="${manager.path}/reload?path=${context.path}"
      outContent="OK - Reloaded application at context path ${context.path}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/WrappedSession03" debug="${debug}"
     joinSession="true"
      outContent="Session03 PASSED"/>

  </target>


</project>
