$Id$


               Building The Tomcat 4.0 Servlet/JSP Container
               =============================================

This subproject contains the source code Tomcat 4.0, a server that implements
the Servlet 2.3 and JSP 1.2 Specifications from Java Software.  In order to
build a binary distribution version of the container from a source
distribution, you must have a Java Development Kit (JDK) for version 1.2 (or
later) downloaded and installed (version 1.3.1 recommended), and do the
following:


(0) Download and Install a Java Development Kit

* Download a Java Development Kit (JDK) release (version 1.2 or later) from:

    http://java.sun.com/j2se/

* Install the JDK according to the instructions included with the release.

* Set an environment variable JAVA_HOME to the pathname of the directory
  into which you installed the JDK release.


(1) Download and Install the Ant Binary Distribution

NOTE:  These instructions assume that you are using the Ant 1.3 release.
Procedures for Ant 1.4 and later versions should be similar, but have not
been tested.

* Download a binary distribution of Ant 1.3 from:

    http://jakarta.apache.org/builds/jakarta-ant/release/v1.3/bin/

  On a Windows platform, you will need:
    jakarta-ant-1.3-bin.zip
    jakarta-ant-1.3-optional.jar

  On a Unix platform, you will need:
    jakarta-ant-1.3-bin.tar.gz
    jakarta-ant-1.3-optional.jar

* Unpack the binary distribution into a convenient location so that the
  Ant release resides in its own directory (conventionally named
  "jakarta-ant-1.3").  For the purposes of the remainder of this document,
  the symbolic name "${ant.home}" is used to refer to the full pathname of
  the release directory.

* Copy the file "jakarta-ant-1.3-optional.jar", downloaded above, into
  the directory "${ant.home}/lib".  This makes available several Ant
  extension commands that are commonly required when building Jakarta
  based projects.

* Modify the PATH environment variable to include directory
  "${ant.home}/bin" in its list.  This makes the "ant" command line script
  available, which will be used to actually perform the build.


(2) Download and Install the JAXP/1.1 Reference Implementation

* Download a binary distribution of JAXP 1.1 (Final Version) from:

    http://java.sun.com/xml/download.html

* Unpack the binary distribution into a convenient location so that the
  JAXP/1.1 release resides in its own directory (conventionally named
  "jaxp-1.1".  For the purposes of the remainder of this document, the
  symbolic name "${jaxp.home}" is used to refer to the full pathname of
  the release directory.

* Make the JAR files of this distribution ("crimson.jar", "jaxp.jar", and
  "xalan.jar") available for use by performing ONE of the following options:

  - Remove the existing "jaxp.jar" and "parser.jar" files found in the
    "${ant.home}/lib" directory, and copy these JAR files into the
    "${ant.home}/lib" directory (prefered option).

  - Add these files to your CLASSPATH environment variable when you
    execute the build process.


(3) Download and Install Subproject Source Code

* Use Anonymous CVS (as described on the Jakarta web site at
  <http://jakarta.apache.org/site/cvsindex.html>, or
  download a source distribution from:

    http://jakarta.apache.org/builds/jakarta-tomcat-4.0/nightly/src/

  On a Windows platform, you will need:
    jakarta-tomcat-4.0-src-YYYYMMDD.zip

  On a Unix platform, you will need:
    jakarta-tomcat-4.0-src-YYYYMMDD.zip

  (NOTE:  Alternatively, you can grab the source distribution from a
  formal release, if you wish, by following links on the Jakarta web site).

* Unpack the source distribution into a convenient location so that the
  distribution resides in its own directory (conventionally named
  "jakarta-tomcat-4.0").  For the purposes of the remainder of this document,
  the symbolic name "${tomcat.source}" is used to refer to the full
  pathname of the release directory.


(4) Download and Install the Regular Expressions Binary Distribution

NOTE:  Alternatively, you can download the sources of the
"jakarta-regexp" subproject, and build a binary distribution yourself.

* Download a binary distribution from:

    http://jakarta.apache.org/builds/jakarta-regexp/release/v1.2/

  On a Windows platform, you will need:
    jakarta-regexp-1.2.zip

  On a Unix platform, you will need:
    jakarta-regexp-1.2.tar.gz

* Unpack the binary distribution into a convenient location so that the
  distribution resides in its own directory (conventionally named
  "jakarta-regexp").  For the purposes of the remainder of this document,
  the symbolic name "${regexp.home}" is used to refer to the full pathname
  of this directory.

FIXME:  This step and the associated stuff in build.xml files needs to be
made independent of the actual jakarta-regexp version number.


(5) Download and Install the Servlet API Binary Distribution

NOTE:  Alternatively, you can download the sources of the
"jakarta-servletapi-4" subproject, and build a binary distribution yourself.

* Download a binary distribution from:

    http://jakarta.apache.org/builds/jakarta-servletapi-4/nightly/

  On a Windows platform, you will need:
    jakarta-servletapi-4-YYYYMMDD.zip

  On a Unix platform, you will need:
    jakarta-servletapi-4-YYYYMMDD.zip

* Unpack the binary distribution into a convenient location so that the
  distribution resides in its own directory.


(6) Download and Install JDBC Optional Package API (OPTIONAL)

NOTE:  This step is only required if you wish to build the Tyrex connection
pool implementation for JNDI-accessed data sources.

* Download the JDBC Optional Pacakge API package (version 2.0) from:

    http://java.sun.com/products/jdbc/download.html

* Unpack the package into a convenient location so that it resides
  in its own subdirectory.


(7) Download and Install JavaMail and Java Activation Framework (OPTIONAL)

NOTE:  This step is required only if you plan to build the resource object
factories for creating mail-related JNDI resources.

* Download the JavaMail Reference Implementation (version 1.2 or later) from:

    http://java.sun.com/products/javamail/

* Unpack the reference implementation into a convenient location so that
  it resides in its own subdirectory.

* Download the "JavaBeans Activation Framework" (version 1.0.1 or later) from:

    http://java.sun.com/products/javabeans/glasgow/jaf.html

* Unpack the framework into a convenient location so that it resides
  in its own subdirectory.


(8) Download and Install the JMX 1.0 Reference Implementation

* Download the JMX Instrumentation and Agent Reference Implementation
  (version 1.0 or later) from

    http://java.sun.com/products/JavaManagement/download.html

* Unpack the reference implementation into a convenient location so that
  it resides in its own subdirectory.


(9) Download and Install the JNDI 1.2.1 Reference Implementation

NOTE:  This step is required to build Tomcat 4.0, even when you are running
a JDK 1.3 (or later) platform that includes the JNDI classes.  This is because
the Tomcat build process includes "jndi.jar" into the binary distribution.

* Download the Java Naming and Directory Interface (JNDI) package,
  (version 1.2.1 or later) from

    http://java.sun.com/products/jndi/

* Unpack the reference implementation into a convenient location so that
  it resides in its own subdirectory.


(10) Download and Install the Java Activation Framework 1.0.1

* Download the Java Activation Framework package (version 1.0.1 or later) from

    http://java.sun.com/products/javabeans/glasgow/jaf.html

* Unpack the package into a convenient location so that it
  resised in its own subdirectory.

(11) Download and Install JavaMail 1.2

* Download the JavaMail package (version 1.2 or later) from

    http://java.sun.com/products/javamail/index.html

* Unpack the package into a convenient location so that
  it resides in its own subdirectory.


(12) Download and Install the JSSE 1.0.2 Reference Implementation

* Download the Java Secure Sockets Extension (JSSE) package,
  (version 1.0.2 or later) from

    http://java.sun.com/products/jsse/

* Unpack the reference implementation into a convenient location so that
  it resides in its own subdirectory.


(13) Download and Install the Java Transaction APIs (OPTIONAL)

NOTE:  This step is only required if you wish to build the Tyrex connection
pool implementation for JNDI-accessed data sources.

* Download the Java Transaction API (JTA) package (version 1.0.1) from:

    http://java.sun.com/products/jta/

* Unpack the package into a convenient location so that it resides in its
  own subdirectory.


(14) Download and Install the JUnit Testing Package (OPTIONAL)

NOTE:  This step is only required if you wish to build and execute the unit
tests that are part of the Tomcat 4.0 source base.

* Download the JUnit unit test package (version 3.7 or later) from:

    http://www.junit.org/

* Unpack the package into a convenient location so that it resides in its
  own subdirectory.


(15) Download and Install the Tyrex Data Source Package (OPTIONAL)

NOTE:  This step is only required if you wish to build the Tyrex connection
pool implementation for JNDI-accessed data sources.

* Download the Tyrex JAR or release (version 0.9.7) from:

    http://tyrex.exolab.org/download.html

* Unpack the package into a convenient location so that it resides in its
  own subdirectory.


(16) Customize Build Properties For This Subproject

Most Jakarta subprojects allow you to customize Ant properties (with default
values defined in the "build.xml" file.  This is done by creating a text file
named "build.properties" in the source distribution directory (for property
definitions local to this subproject) and/or your user home directory (for
property definitions shared across subprojects).  You can use the included
"build.properties.sample" file as a starting point for this.

Tomcat has several external dependencies that are satisfied by configuring
appropriate values in your <code>build.properties</code> file.  You must set
the following properties:

  Property Name     Description
  ----------------  --------------------------------------------------------

  activation.home   Pathname to directory containing the Java Activation
                    Framework package, version 1.0.1 or later

  jmx.home          Pathname to directory containing the Java Management
                    Extensions (JMX) Reference Implementation, version 1.0
                    or later

  jndi.home         Pathname to directory containing the Java Naming and
                    Directory Interface (JNDI) Reference Implementation,
                    version 1.2.1 or later

  jsse.home         Pathname to directory containing the Java Secure Sockets
                    Extension (JSSE) Reference Implementation, version 1.0.2
                    or later

  junit.jar         Pathname to the "junit.jar" file from JUnit, version 3.7
                    or later

  mail.home         Pathname to the directory containing the JavaMail package,
                    version 1.2 or later

  regexp.home       Pathname to directory containing a binary distribution of
                    the Jakarta Regexp Project, version 1.2

  servletapi.home   Pathname to directory containing a binary distribution of
                    the Servlet 2.3/JSP 1.2 API classes

FIXME:  Properties for jdbc2_0-stdext.jar,
jta-spec1_0_1.jar, tyrex-0.9.7.0.jar

A short-cut to preparing your "build.properties" file is to make a copy of the
"build.properties.sample" file included in the Tomcat source distribution,
and then customize the paths within it.

(17) Build A Binary Distribution

Open a command line shell, and issue the following commands:

  cd ${tomcat.source}
  ant -projecthelp

If everything is installed correctly, you should see a list of the Ant
"targets" that represent different commands you might wish to build.  By
convention, the "dist" target creates a complete binary distribution.  To
execute it, type the following commands:

  cd ${tomcat.source}
  ant dist

This will create a complete binary distribution of the subproject (equivalent
in structure to the corresponding binary distribution downloadable from the
Jakarta web site), in the "${tomcat.source}/dist" directory.  It will have
the contents described in the corresponding "README.txt" file.

See the document RUNNING.txt for instructions on how to start up and shut down
the servlet/JSP container.
