                Apache Tomcat Version 4.0 Milestone 3
                =====================================
                            Release Notes
                            =============

$Id$


============
INTRODUCTION:
============
This document describes the changes that have been made in the current
milestone release of Apache Tomcat, relative to the previous milestone
release.

Bug reports should be entered at the interim bug reporting system for
Jakarta projects at:

        http://znutar.cortexity.com:8888/

Please use project codes "Catalina" and "Jasper" for servlet-related and
JSP-related bug reports, respectively.


============
NEW FEATURES:
============



=========
BUG FIXES:
=========



==============================
KNOWN PROBLEMS IN THIS RELEASE:
==============================

No Web Connectors Available
---------------------------
Current releases of Tomcat 4.0 only run in stand-alone mode.  A new web
connector for Apache will be integrated shortly, followed by integration
with the other servers currently supported by Tomcat 3.x.


URL Decoding Incomplete
-----------------------
Currently, Catalina does not decode the values returned by getServletPath()
and getPathInfo(), as required by the Servlet Specification.  This will be
dealt with after clarifications to the requirements are completed in the
JSR-053 expert group.


Redeploying From a Web Application Archive
------------------------------------------
If you attempt to undeploy, then redeploy, an application from the same
web application archive file URL (where the URL refers to an actual WAR
file, not to a directory), the redeploy will fail with error "zip file is
closed".  There appears to be a problem in the JDK's JarURLConnection class
where JAR files are cached, even after they are closed, so that a request
for a connection to the same URL returns the previous JarFile object instead
of a new one.  As a workaround, you should do one of the following:
* Change the URL of the web application archive each time you redeploy.
* Deploy from an unpacked directory (on the same server) instead of from
  a WAR file (this is often more convenient in a development environment
  anyway).


Clearing Buffer On A Forward
----------------------------
The servlet specification requires the container to clear the data buffer,
but not the response headers or cookies, when a servlet calls the
RequestDispatcher.forward() method.  In the past, this could be done by the
container casting the response back to its internal implementation object,
and calling an implementation-specific method.

This is no longer possible now that the request and response arguments to
a RequestDispatcher.forward() call can be wrapped.  It is likely that a new
public method will be added to the ServletResponse API for this purpose.  In
the mean time, Tomcat 4.0 does *not* clear the response buffer on a forward,
so you will see any output generated by the calling servlet (or JSP page,
in the case of <jsp:forward>) followed by the output from the forwarded-to
servlet or JSP page.


