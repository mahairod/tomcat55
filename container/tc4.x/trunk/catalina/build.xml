<project name="Catalina" default="build-main" basedir=".">


  <!-- ===================== Initialize Property Values =================== -->
  <property name="ant.home"        value="../../jakarta-ant"/>
  <property name="build.compiler"  value="classic"/>
  <property name="catalina.build"  value="../../build/catalina"/>
  <property name="catalina.deploy" value="../../build/tomcat-4.0"/>
  <property name="catalina.dist"   value="../../dist/catalina"/>
  <property name="xerces.home"     value="${basedir}/../xerces"/>
  <property name="jsse.home"       value="../../jsse"/>
  <property name="regexp.home"     value="../../jakarta-regexp"/>
  <property name="servletapi.home" value="../../jakarta-servletapi"/>


  <!-- ================== Derived Property Values ========================= -->
  <property name="xerces.jar"      value="${xerces.home}/xerces.jar"/>
  <property name="jcert.jar"       value="${jsse.home}/lib/jcert.jar"/>
  <property name="jnet.jar"        value="${jsse.home}/lib/jnet.jar"/>
  <property name="jsse.jar"        value="${jsse.home}/lib/jsse.jar"/>
  <property name="regexp.jar"      value="${regexp.home}/jakarta-regexp-1.1.jar"/>
  <property name="servlet.jar"     value="${servletapi.home}/lib/servlet.jar"/>

  <!-- =================== BUILD: Create Directories ====================== -->
  <target name="build-prepare">
  <echo message="regexp.jar = ${regexp.jar}"/>
    <mkdir dir="${catalina.build}"/>
    <mkdir dir="${catalina.build}/bin"/>
    <mkdir dir="${catalina.build}/classes"/>
    <mkdir dir="${catalina.build}/conf"/>
    <mkdir dir="${catalina.build}/lib"/>
    <mkdir dir="${catalina.build}/server"/>
  </target>


  <!-- =================== BUILD: Copy Static Files ======================= -->
  <target name="build-static" depends="build-prepare">

    <!-- Executable Commands -->
    <copydir src="src/bin"  dest="${catalina.build}/bin"/>
    <fixcrlf srcdir="${catalina.build}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.build}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.build}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/startup.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/shutdown.sh"/>

    <!-- Configuration Files -->
    <copydir src="src/conf" dest="${catalina.build}/conf"/>

    <!-- Shared Extensions -->
    <!--   All applications need the servlet API classes -->
    <copyfile src="${servlet.jar}" dest="${catalina.build}/lib/servlet.jar"/>

    <!-- Server Components -->
    <!--   Catalina needs Xerces XML parser -->
    <copyfile src="${xerces.jar}"  dest="${catalina.build}/server/xerces.jar"/>
    <!--   Catalina needs the regular expression library -->
    <copyfile src="${regexp.jar}"  dest="${catalina.build}/server/regexp.jar"/>
    <!--   Catalina needs the JSSE packages -->
<!--
    <copyfile src="${jcert.jar}"  dest="${catalina.build}/server/jcert.jar"/>
    <copyfile src="${jnet.jar}"  dest="${catalina.build}/server/jnet.jar"/>
    <copyfile src="${jsse.jar}"  dest="${catalina.build}/server/jsse.jar"/>
-->
  </target>


  <!-- ================= BUILD: Compile Server Components ================= -->
  <target name="build-main" depends="build-static">

    <!-- Compile internal server components -->
    <javac   srcdir="src/share" destdir="${catalina.build}/classes"
             classpath="${xerces.jar}:${regexp.jar}:${servlet.jar}:${jcert.jar}:${jnet.jar}:${jsse.jar}"
             deprecation="off" debug="on" optimize="off" target="1.2"
             excludes="**/CVS/**"/>

    <!-- Copy static resource files -->
    <copydir  src="src/share"    dest="${catalina.build}/classes">
      <include name="**/*.properties"/>
    </copydir>

    <!-- Construct bootstrap JAR file -->
    <jar   jarfile="${catalina.build}/bin/bootstrap.jar"
           basedir="${catalina.build}/classes"
          includes="org/apache/catalina/startup/Bootstrap.class,org/apache/catalina/loader/*"/>

  </target>

  <!-- ================ BUILD: Create Catalina Javadocs =================== -->
  <target name="javadoc" depends="build-main">
    <deltree dir="${catalina.build}/javadoc"/>
    <mkdir dir="${catalina.build}/javadoc"/>
    <javadoc packagenames="org.apache.catalina.*"
             classpath="${regexp.jar}:${servlet.jar}:${catalina.build}/classes"
               sourcepath="src/share"
                  destdir="${catalina.build}/javadoc"
                   author="true"
                  version="true"
              windowtitle="Catalina Internal API Documentation"
                 doctitle="Catalina API"
                   bottom="Copyright &#169; 2000 Apache Software Foundation.  All Rights Reserved."
    />
  </target>


  <!-- ======================= BUILD: Clean Directory ===================== -->
  <target name="build-clean">
    <deltree dir="${catalina.build}"/>
  </target>


  <!-- ==================== BUILD: Rebuild Everything ===================== -->
  <target name="all" depends="build-clean,build-main"/>


  <!-- ====================== DEPLOY: Create Directories ================== -->
  <target name="deploy-prepare">
    <mkdir dir="${catalina.deploy}"/>
    <mkdir dir="${catalina.deploy}/bin"/>
    <mkdir dir="${catalina.deploy}/conf"/>
    <mkdir dir="${catalina.deploy}/lib"/>
    <mkdir dir="${catalina.deploy}/logs"/>
    <mkdir dir="${catalina.deploy}/server"/>
    <mkdir dir="${catalina.deploy}/work"/>
  </target>


  <!-- ====================== DEPLOY: Copy Static Files =================== -->
  <target name="deploy-static" depends="build-main,deploy-prepare">

    <!-- Executable Commands -->
    <copydir src="${catalina.build}/bin"  dest="${catalina.deploy}/bin"/>
    <fixcrlf srcdir="${catalina.deploy}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.deploy}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/startup.sh"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/shutdown.sh"/>

    <!-- Configuration Files -->
    <copydir src="${catalina.build}/conf"   dest="${catalina.deploy}/conf"/>

    <!-- Shared Extensions -->
    <copydir src="${catalina.build}/lib"    dest="${catalina.deploy}/lib"/>

    <!-- Server Components -->
    <copydir src="${catalina.build}/server" dest="${catalina.deploy}/server"/>

  </target>


  <!-- ====================== DEPLOY: Create Catalina JAR ================= -->
  <target name="deploy-main" depends="deploy-static">
    <jar  jarfile="${catalina.deploy}/server/catalina.jar"
          basedir="${catalina.build}/classes"/>
  </target>


  <!-- ====================== DEPLOY: Deploy Catalina Build =============== -->
  <target name="deploy" depends="deploy-main"/>


  <!-- ====================== DEPLOY: Clean Directories =================== -->
  <target name="deploy-clean">
    <deltree dir="${catalina.deploy}"/>
  </target>


  <!-- ================ DIST: Create Distribution ========================= -->
  <target name="dist" depends="build-main">

    <mkdir dir="${catalina.dist}/bin"/>
    <copydir src="${catalina.build}/bin" dest="${catalina.dist}/bin"/>
    <fixcrlf srcdir="${catalina.dist}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.dist}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.dist}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.dist}/bin/jspc.sh"/>

    <mkdir dir="${catalina.dist}/conf"/>
    <copydir src="${catalina.build}/conf"   dest="${catalina.dist}/conf"/>

    <mkdir dir="${catalina.dist}/lib"/>
    <copydir src="${catalina.build}/lib"    dest="${catalina.dist}/lib"/>

    <mkdir dir="${catalina.dist}/server"/>
    <copydir src="${catalina.build}/server" dest="${catalina.dist}/server"/>
    <jar  jarfile="${catalina.dist}/server/catalina.jar"
          basedir="${catalina.build}/classes"/>

  </target>


  <!-- ======================== DIST: Clean Directory ===================== -->
  <target name="dist-clean">
    <deltree dir="${catalina.dist}"/>
  </target>


  <!-- ====================== Convenient Synonyms ========================= -->
  <target name="clean" depends="build-clean, dist-clean"/>


</project>
