<project name="Catalina" default="build-main" basedir=".">


  <!-- ===================== Initialize Property Values =================== -->
  <property name="build.compiler"  value="classic"/>
  <property name="catalina.build"  value="../../build/catalina"/>
  <property name="catalina.deploy" value="../../build/tomcat-4.0"/>
  <property name="catalina.dist"   value="../../dist/catalina"/>

  <!-- ================== Derived Property Values ========================= -->
  <property name="jaxp.jar"        value="${catalina.jaxp.home}/jaxp.jar"/>
  <property name="parser.jar"      value="${catalina.jaxp.home}/${catalina.jaxp.parser.jar}"/>
  <property name="jcert.jar"       value="${jsse.home}/lib/jcert.jar"/>
  <property name="jnet.jar"        value="${jsse.home}/lib/jnet.jar"/>
  <property name="jsse.jar"        value="${jsse.home}/lib/jsse.jar"/>
  <property name="jmxri.jar"       value="${jmx.home}/lib/jmxri.jar"/>
  <property name="regexp.jar"      value="${regexp.home}/jakarta-regexp-1.1.jar"/>
  <property name="servlet.jar"     value="${servletapi.home}/lib/servlet.jar"/>

  <!-- =================== BUILD: Create Directories ====================== -->
  <target name="build-prepare">
    <available file="${jaxp.jar}" property="jaxp.jar.present" />
    <mkdir dir="${catalina.build}"/>
    <mkdir dir="${catalina.build}/bin"/>
    <mkdir dir="${catalina.build}/classes"/>
    <mkdir dir="${catalina.build}/conf"/>
    <mkdir dir="${catalina.build}/lib"/>
    <mkdir dir="${catalina.build}/server"/>
  </target>


  <!-- =================== BUILD: Copy Static Files ======================= -->
  <target name="build-static" depends="build-prepare,copy-jaxp-jar">

    <!-- Executable Commands -->
    <copydir src="src/bin"  dest="${catalina.build}/bin"/>
    <fixcrlf srcdir="${catalina.build}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.build}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.build}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/startup.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/shutdown.sh"/>

    <!-- Configuration Files -->
    <copydir src="src/conf" dest="${catalina.build}/conf"/>

    <!-- Shared Extensions -->
    <!--   All applications need the servlet API classes -->
    <copyfile src="${servlet.jar}" dest="${catalina.build}/bin/servlet.jar"/>

    <!-- Server Components -->
    <!--   Catalina needs JAXP compliant XML parser -->
    <copyfile src="${parser.jar}"  dest="${catalina.build}/server/${catalina.jaxp.parser.jar}"/>
    <!--   Catalina needs the regular expression library -->
    <copyfile src="${regexp.jar}"  dest="${catalina.build}/server/regexp.jar"/>
    <!--   Catalina needs the JSSE packages -->
<!--
    <copyfile src="${jcert.jar}"  dest="${catalina.build}/server/jcert.jar"/>
    <copyfile src="${jnet.jar}"  dest="${catalina.build}/server/jnet.jar"/>
    <copyfile src="${jsse.jar}"  dest="${catalina.build}/server/jsse.jar"/>
-->
  </target>

  <target name="copy-jaxp-jar" if="jaxp.jar.present" >
    <copyfile src="${jaxp.jar}"  dest="${catalina.build}/server/jaxp.jar"/>
  </target>    


  <!-- ================= BUILD: Compile Server Components ================= -->
  <target name="build-main" depends="build-static">


    <!-- =================== Conditional Compilation Falgs ================ -->
    <available property="tyrex.present"
     classname="tyrex.jdbc.ServerDataSource" />
    <available property="jta.present"
     classname="javax.transaction.UserTransaction" />

    <!-- Compile internal server components -->
    <javac   srcdir="src/share" destdir="${catalina.build}/classes"
             classpath="${parser.jar}:${jaxp.jar}:${regexp.jar}:${servlet.jar}:${jcert.jar}:${jnet.jar}:${jsse.jar}:${jmxri.jar}"
             deprecation="off" debug="on" optimize="off" target="1.2"
             excludes="**/CVS/**">
      <exclude name="**/factory/TyrexDataSourceFactory.java" 
       unless="tyrex.present" />
      <exclude name="**/factory/TyrexTransactionFactory.java" 
       unless="tyrex.present" />
      <exclude name="**/factory/TransactionFactory.java" 
       unless="jta.present" />
    </javac>

    <!-- Copy static resource files -->
    <copydir  src="src/share"    dest="${catalina.build}/classes">
      <include name="**/*.properties"/>
    </copydir>

    <!-- Construct bootstrap JAR file -->
    <jar   jarfile="${catalina.build}/bin/bootstrap.jar"
           basedir="${catalina.build}/classes"
           includes="org/apache/catalina/startup/Bootstrap.class,org/apache/catalina/loader/**" 
           />
    <jar   jarfile="${catalina.build}/bin/naming.jar"
           basedir="${catalina.build}/classes"
           includes="**/org/apache/naming/**" 
           excludes="**/org/apache/naming/factory/**"
           />
    <jar   jarfile="${catalina.build}/lib/namingfactory.jar"
           basedir="${catalina.build}/classes"
           includes="**/org/apache/naming/factory/**"
           />

  </target>

  <!-- ================ BUILD: Create Catalina Javadocs =================== -->
  <target name="javadoc" depends="build-main">
    <deltree dir="${catalina.build}/javadoc"/>
    <mkdir dir="${catalina.build}/javadoc"/>
    <javadoc packagenames="org.apache.catalina.*,org.apache.naming.*"
             classpath="${parser.jar}:${jaxp.jar}:${jcert.jar}:${jsse.jar}:${jnet.jar}:${regexp.jar}:${jmxri.jar}:${servlet.jar}:${catalina.build}/classes"
               sourcepath="src/share"
                  destdir="${catalina.build}/javadoc"
                   author="true"
                  version="true"
              windowtitle="Catalina Internal API Documentation"
                 doctitle="Catalina API"
                   bottom="Copyright &#169; 2000 Apache Software Foundation.  All Rights Reserved."
    />
  </target>


  <!-- ======================= BUILD: Clean Directory ===================== -->
  <target name="build-clean">
    <deltree dir="${catalina.build}"/>
  </target>


  <!-- ==================== BUILD: Rebuild Everything ===================== -->
  <target name="all" depends="build-clean,build-main"/>


  <!-- ====================== DEPLOY: Create Directories ================== -->
  <target name="deploy-prepare">
    <mkdir dir="${catalina.deploy}"/>
    <mkdir dir="${catalina.deploy}/bin"/>
    <mkdir dir="${catalina.deploy}/conf"/>
    <mkdir dir="${catalina.deploy}/lib"/>
    <mkdir dir="${catalina.deploy}/logs"/>
    <mkdir dir="${catalina.deploy}/server"/>
    <mkdir dir="${catalina.deploy}/work"/>
  </target>


  <!-- ====================== DEPLOY: Copy Static Files =================== -->
  <target name="deploy-static" depends="build-main,deploy-prepare">

    <!-- Executable Commands -->
    <copydir src="${catalina.build}/bin"  dest="${catalina.deploy}/bin"/>
    <fixcrlf srcdir="${catalina.deploy}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.deploy}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/startup.sh"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/shutdown.sh"/>

    <!-- Configuration Files -->
    <copydir src="${catalina.build}/conf"   dest="${catalina.deploy}/conf"/>

    <!-- Shared Extensions -->
    <copydir src="${catalina.build}/lib"    dest="${catalina.deploy}/lib"/>

    <!-- Server Components -->
    <copydir src="${catalina.build}/server" dest="${catalina.deploy}/server"/>

  </target>


  <!-- ====================== DEPLOY: Create Catalina JAR ================= -->
  <target name="deploy-main" depends="deploy-static">
    <jar  jarfile="${catalina.deploy}/server/catalina.jar"
          basedir="${catalina.build}/classes" 
          excludes="**/org/apache/naming/**" />
  </target>


  <!-- ====================== DEPLOY: Deploy Catalina Build =============== -->
  <target name="deploy" depends="deploy-main"/>


  <!-- ====================== DEPLOY: Clean Directories =================== -->
  <target name="deploy-clean">
    <deltree dir="${catalina.deploy}"/>
  </target>


  <!-- ================ DIST: Create Distribution ========================= -->
  <target name="dist" depends="build-main">

    <mkdir dir="${catalina.dist}/bin"/>
    <copydir src="${catalina.build}/bin" dest="${catalina.dist}/bin"/>
    <fixcrlf srcdir="${catalina.dist}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.dist}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.dist}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.dist}/bin/jspc.sh"/>

    <mkdir dir="${catalina.dist}/conf"/>
    <copydir src="${catalina.build}/conf"   dest="${catalina.dist}/conf"/>

    <mkdir dir="${catalina.dist}/lib"/>
    <copydir src="${catalina.build}/lib"    dest="${catalina.dist}/lib"/>

    <mkdir dir="${catalina.dist}/server"/>
    <copydir src="${catalina.build}/server" dest="${catalina.dist}/server"/>
    <jar  jarfile="${catalina.dist}/server/catalina.jar"
          basedir="${catalina.build}/classes" 
          excludes="**/org/apache/naming/**" />

  </target>


  <!-- ======================== DIST: Clean Directory ===================== -->
  <target name="dist-clean">
    <deltree dir="${catalina.dist}"/>
  </target>


  <!-- ====================== Convenient Synonyms ========================= -->
  <target name="clean" depends="build-clean, dist-clean"/>


</project>
