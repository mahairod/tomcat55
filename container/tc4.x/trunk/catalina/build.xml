<project name="Catalina" default="build-main" basedir=".">


  <!-- ===================== Initialize Property Values =================== -->

  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="${user.home}/build.properties"/>

  <property name="build.compiler"    value="classic"/>
  <property name="catalina.build"    value="build"/>
  <property name="catalina.deploy"   value="../build"/>
  <property name="catalina.dist"     value="dist"/>
  <property name="catalina.jaxp.home"       value="${jaxp.home}"/>
  <property name="catalina.jaxp.parser.jar" value="crimson.jar"/>

  <property name="servletapi.home"   value="../../jakarta-servletapi-4/dist"/>
  <property name="avalon.dist"       value="../../dist/avalon"/>

  <property name="test.failonerror"  value="true"/>
  <property name="test.runner"       value="junit.textui.TestRunner"/>

  <!-- ================== Derived Property Values ========================= -->
  <property name="jaxp.jar"        value="${catalina.jaxp.home}/jaxp.jar"/>
  <property name="parser.jar"      value="${catalina.jaxp.home}/${catalina.jaxp.parser.jar}"/>
  <property name="jcert.jar"       value="${jsse.home}/lib/jcert.jar"/>
  <property name="jndi.jar"        value="${jndi.home}/lib/jndi.jar"/>
  <property name="jnet.jar"        value="${jsse.home}/lib/jnet.jar"/>
  <property name="jsse.jar"        value="${jsse.home}/lib/jsse.jar"/>
  <property name="jmxri.jar"       value="${jmx.home}/lib/jmxri.jar"/>
  <property name="regexp.jar"      value="${regexp.home}/jakarta-regexp-1.2.jar"/>
  <property name="servlet.jar"     value="${servletapi.home}/lib/servlet.jar"/>

  <!-- Construct unit tests classpath -->
  <path id="test.classpath">
    <pathelement location="${parser.jar}"/>
    <pathelement location="${jaxp.jar}"/>
    <pathelement location="${regexp.jar}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${jcert.jar}"/>
    <pathelement location="${jnet.jar}"/>
    <pathelement location="${jsse.jar}"/>
    <pathelement location="${jmxri.jar}"/>
    <pathelement location="${junit.jar}"/>
    <pathelement location="${catalina.build}/classes"/>
    <pathelement location="${catalina.build}/tests"/>
  </path>

  <!-- =================== BUILD: Create Directories ====================== -->
  <target name="build-prepare">
    <available classname="junit.framework.TestCase" property="junit.present" />
    <available file="${jaxp.jar}" property="jaxp.jar.present" />
    <available property="avalon.present" 
     classname="org.apache.avalon.blocks.Block" />
    <mkdir dir="${catalina.build}"/>
    <mkdir dir="${catalina.build}/bin"/>
    <mkdir dir="${catalina.build}/classes"/>
    <mkdir dir="${catalina.build}/conf"/>
    <mkdir dir="${catalina.build}/lib"/>
    <mkdir dir="${catalina.build}/common"/>
    <mkdir dir="${catalina.build}/common/lib"/>
    <mkdir dir="${catalina.build}/server"/>
    <mkdir dir="${catalina.build}/server/lib"/>
  </target>


  <!-- =================== BUILD: Copy Static Files ======================= -->
  <target name="build-static" depends="build-prepare,copy-jaxp-jar">

    <!-- Executable Commands -->
    <copy todir="${catalina.build}/bin">
      <fileset dir="src/bin" />
    </copy>
    <fixcrlf srcdir="${catalina.build}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.build}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.build}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/digest.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/startup.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/shutdown.sh"/>

    <!-- Configuration Files -->
    <copy todir="${catalina.build}/conf">
      <fileset dir="src/conf">
        <exclude name="catalina.conf.xml" />
      </fileset>
    </copy>

    <!-- Common Extensions -->
    <!--   All applications need the servlet API classes -->
    <copy file="${servlet.jar}" tofile="${catalina.build}/common/lib/servlet.jar" />
    <!--   Copy the JNDI JAR file for use under JDK 1.2.2 -->
    <copy file="${jndi.jar}"    tofile="${catalina.build}/common/lib/jndi.jar" />

    <!-- Server Components -->
    <!--   Catalina needs JAXP compliant XML parser -->
    <copy file="${parser.jar}" 
     tofile="${catalina.build}/server/lib/${catalina.jaxp.parser.jar}" />
    <!--   Catalina needs the regular expression library -->
    <copy todir="${catalina.build}/server/lib">
      <fileset dir="${regexp.home}" includes="*.jar"/>
    </copy>
    <!--   Catalina needs the JSSE packages -->
<!--
    <copy file="${jcert.jar}" tofile="${catalina.build}/server/lib/jcert.jar"/>
    <copy file="${jnet.jar}" tofile="${catalina.build}/server/lib/jnet.jar"/>
    <copy file="${jsse.jar}" tofile="${catalina.build}/server/lib/jsse.jar"/>
-->
  </target>

  <target name="copy-jaxp-jar" if="jaxp.jar.present" >
    <copy file="${jaxp.jar}" tofile="${catalina.build}/server/lib/jaxp.jar"/>
  </target>    


  <!-- ================= BUILD: Compile Server Components ================= -->
  <target name="build-main" depends="build-static">


    <!-- =================== Conditional Compilation Flags ================ -->
    <available property="tyrex.present"
     classname="tyrex.jdbc.xa.EnabledDataSource" />
    <available property="jdbcse.present"
     classname="javax.sql.DataSource" />
    <available property="jta.present"
     classname="javax.transaction.UserTransaction" />
    <available property="avalon.present" 
     classname="org.apache.avalon.blocks.Block" />
    <available property="javamail.present"
     classname="javax.mail.internet.MimeMessage" />
    <!-- Compile internal server components -->
    <javac   srcdir="src/share" destdir="${catalina.build}/classes"
             classpath="${parser.jar}:${jaxp.jar}:${regexp.jar}:${servlet.jar}:${jcert.jar}:${jnet.jar}:${jsse.jar}:${jmxri.jar}"
             deprecation="off" debug="on" optimize="off" target="1.2"
             excludes="**/CVS/**">
      <exclude name="**/factory/Tyrex*.java" 
       unless="tyrex.present" />
      <exclude name="**/factory/ResourceFactory.java" 
       unless="jdbcse.present" />
      <exclude name="**/factory/TransactionFactory.java" 
       unless="jta.present" />
      <exclude name="**/factory/MailSessionFactory.java"
       unless="javamail.present" />
      <exclude name="**/factory/SendMailFactory.java"
       unless="javamail.present" />
      <exclude name="**/startup/CatalinaBlock.java" 
       unless="avalon.present" />
    </javac>

    <!-- Copy static resource files -->
    <copy todir="${catalina.build}/classes">
      <fileset dir="src/share">
        <include name="**/*.properties"/>
      </fileset>
    </copy>

    <!-- Construct bootstrap JAR file -->
    <jar   jarfile="${catalina.build}/bin/bootstrap.jar"
           basedir="${catalina.build}/classes"
           includes="org/apache/catalina/startup/Bootstrap.class,org/apache/catalina/loader/StandardClassLoader*.class,org/apache/catalina/loader/Extension.class,org/apache/catalina/loader/Reloader.class" 
           />
    <jar   jarfile="${catalina.build}/common/lib/naming.jar"
           basedir="${catalina.build}/classes"
           includes="**/org/apache/naming/*,**/org/apache/naming/factory/Constants.class,**/org/apache/naming/java/*" 
           />
    <jar   jarfile="${catalina.build}/common/lib/resources.jar"
           basedir="${catalina.build}/classes"
           includes="**/org/apache/naming/resources/*" 
           />
    <jar   jarfile="${catalina.build}/lib/namingfactory.jar"
           basedir="${catalina.build}/classes"
           includes="**/org/apache/naming/factory/**"
           excludes="**/org/apache/naming/factory/Constants.class"
           />

  </target>


  <!-- =============== BUILD: Compile Unit Tests ========================== -->

  <target name="build-tests" depends="build-main" if="junit.present">
    <mkdir      dir="${catalina.build}/tests"/>
    <!-- Compile unit test classes -->
    <javac   srcdir="src/test" destdir="${catalina.build}/tests"
             deprecation="off" debug="on" optimize="off" target="1.2"
             excludes="**/CVS/**">
      <classpath refid="test.classpath"/>
    </javac>
  </target>


  <!-- ================ BUILD: Create Catalina Javadocs =================== -->
  <target name="javadoc" depends="build-main">
    <delete dir="${catalina.build}/javadoc"/>
    <mkdir dir="${catalina.build}/javadoc"/>
    <javadoc packagenames="org.apache.catalina.*,org.apache.naming.*"
             classpath="${parser.jar}:${jaxp.jar}:${jcert.jar}:${jsse.jar}:${jnet.jar}:${regexp.jar}:${jmxri.jar}:${servlet.jar}:${catalina.build}/classes"
               sourcepath="src/share"
                  destdir="${catalina.build}/javadoc"
                   author="true"
                  version="true"
              windowtitle="Catalina Internal API Documentation"
                 doctitle="Catalina API"
                   bottom="Copyright &#169; 2000 Apache Software Foundation.  All Rights Reserved."
    />
  </target>


  <!-- ==================== BUILD: Catalina Developer Docs ================ -->
  <target name="dev-doc">
    <delete dir="${catalina.build}/dev-doc"/>
    <mkdir dir="${catalina.build}/dev-doc"/>
    <mkdir dir="${catalina.build}/dev-doc/images"/>
    <copy todir="${catalina.build}/dev-doc/images">
      <fileset dir="docs/dev/xdocs/images"/>
    </copy>
    <style basedir="docs/dev/xdocs"
           destdir="${catalina.build}/dev-doc"
         extension=".html"
             style="stylesheets/tempoarary.xsl"
          includes="*.xml"/>
  </target>


  <!-- ======================= BUILD: Clean Directory ===================== -->
  <target name="build-clean">
    <delete dir="${catalina.build}"/>
  </target>


  <!-- ==================== BUILD: Rebuild Everything ===================== -->
  <target name="all" depends="build-clean,build-main"/>


  <!-- ==================== BUILD: Execute Unit Tests ===================== -->
  <target name="test" if="junit.present"
   description="Run all unit test cases"
   depends="build-tests,test-util"
>
  </target>

  <target name="test-util" if="junit.present">

    <echo message="Running CookieTools tests"/>
    <java classname="${test.runner}" fork="yes"
        failonerror="${test.failonerror}">
      <arg value="org.apache.catalina.util.CookieToolsTestCase"/>
      <classpath refid="test.classpath"/>
    </java>

  </target>


  <!-- ====================== DEPLOY: Create Directories ================== -->
  <target name="deploy-prepare">
    <mkdir dir="${catalina.deploy}"/>
    <mkdir dir="${catalina.deploy}/bin"/>
    <mkdir dir="${catalina.deploy}/conf"/>
    <mkdir dir="${catalina.deploy}/lib"/>
    <mkdir dir="${catalina.deploy}/logs"/>
    <mkdir dir="${catalina.deploy}/common"/>
    <mkdir dir="${catalina.deploy}/common/lib"/>
    <mkdir dir="${catalina.deploy}/server"/>
    <mkdir dir="${catalina.deploy}/server/lib"/>
    <mkdir dir="${catalina.deploy}/work"/>
  </target>


  <!-- ====================== DEPLOY: Copy Static Files =================== -->
  <target name="deploy-static" depends="build-main,deploy-prepare">

    <!-- Executable Commands -->
    <copy todir="${catalina.deploy}/bin">
      <fileset dir="${catalina.build}/bin" />
    </copy>
    <fixcrlf srcdir="${catalina.deploy}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.deploy}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/digest.sh"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/startup.sh"/>
    <chmod perm="+x" file="${catalina.deploy}/bin/shutdown.sh"/>

    <!-- Configuration Files -->
    <copy todir="${catalina.deploy}/conf">
      <fileset dir="${catalina.build}/conf" />
    </copy>

    <!-- Shared Extensions -->
    <copy todir="${catalina.deploy}/lib">
      <fileset dir="${catalina.build}/lib" />
    </copy>

    <!-- Common Extensions -->
    <copy todir="${catalina.deploy}/common/lib">
      <fileset dir="${catalina.build}/common/lib" />
    </copy>

    <!-- Server Components -->
    <copy todir="${catalina.deploy}/server/lib">
      <fileset dir="${catalina.build}/server/lib" />
    </copy>

  </target>


  <!-- ====================== DEPLOY: Create Catalina JAR ================= -->
  <target name="deploy-main" depends="deploy-static">
    <jar  jarfile="${catalina.deploy}/server/lib/catalina.jar"
          basedir="${catalina.build}/classes" 
          excludes="**/org/apache/naming/**,**/connector/warp/**,org/apache/catalina/startup/Bootstrap.class,org/apache/catalina/loader/StandardClassLoader*.class,org/apache/catalina/loader/Extension.class,org/apache/catalina/loader/Reloader.class" />
    <jar  jarfile="${catalina.deploy}/server/lib/warp.jar"
          basedir="${catalina.build}/classes" 
          includes="**/connector/warp/**" />
  </target>


  <!-- ====================== DEPLOY: Deploy Catalina Build =============== -->
  <target name="deploy" depends="deploy-main"/>


  <!-- ====================== DEPLOY: Clean Directories =================== -->
  <target name="deploy-clean">
    <delete dir="${catalina.deploy}"/>
  </target>


  <!-- ================ DIST: Create Distribution ========================= -->
  <target name="dist" depends="build-main">

    <mkdir dir="${catalina.dist}/bin"/>
    <copy todir="${catalina.dist}/bin">
      <fileset dir="${catalina.build}/bin" />
    </copy>
    <fixcrlf srcdir="${catalina.dist}/bin" includes="*.sh" cr="remove"/>
    <fixcrlf srcdir="${catalina.dist}/bin" includes="*.bat" cr="add"/>
    <chmod perm="+x" file="${catalina.dist}/bin/catalina.sh"/>
    <chmod perm="+x" file="${catalina.build}/bin/digest.sh"/>
    <chmod perm="+x" file="${catalina.dist}/bin/jspc.sh"/>

    <mkdir dir="${catalina.dist}/conf"/>
    <copy todir="${catalina.dist}/conf">
      <fileset dir="${catalina.build}/conf" />
    </copy>

    <mkdir dir="${catalina.dist}/lib"/>
    <copy todir="${catalina.dist}/lib">
      <fileset dir="${catalina.build}/lib" />
    </copy>

    <mkdir dir="${catalina.dist}/server/lib"/>
    <copy todir="${catalina.dist}/server/lib">
      <fileset dir="${catalina.build}/server/lib" />
    </copy>
    <jar  jarfile="${catalina.dist}/server/lib/catalina.jar"
          basedir="${catalina.build}/classes" 
          excludes="**/org/apache/naming/**,**/connector/warp/**" />
    <jar  jarfile="${catalina.dist}/server/lib/warp.jar"
          basedir="${catalina.build}/classes" 
          includes="**/connector/warp/**" />

  </target>

  <!-- ============= DIST: Create Avalon Block Distribution =============== -->
  <!--FIXME : Can't get that to work ... Ant bug ?-->
  <!--target name="dist-opt-avalon" depends="build-main" if="avalon-present"-->
  <target name="dist-opt-avalon">
    <jar jarfile="${avalon.dist}/bin/blocks/catalina.bar">
      <fileset dir="${catalina.build}/classes">
        <include name="org/apache/catalina/startup/Bootstrap.class" />
        <include name="org/apache/catalina/startup/CatalinaBlock.class" />
        <include name="org/apache/catalina/loader/**" />
      </fileset>
      <fileset dir="src">
        <include name="**/conf/catalina.conf.xml"/>
      </fileset>
      <fileset dir="src/share">
        <include name="**/startup/*.xinfo"/>
      </fileset>
    </jar>
  </target>

  <!-- ======================== DIST: Clean Directory ===================== -->
  <target name="dist-clean">
    <delete dir="${catalina.dist}"/>
  </target>


  <!-- ====================== Convenient Synonyms ========================= -->
  <target name="clean" depends="build-clean, dist-clean"/>


</project>
