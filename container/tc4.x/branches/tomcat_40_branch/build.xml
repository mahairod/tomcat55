<project name="Tomcat 4.0" default="deploy" basedir=".">

  <!-- ===================== Initialize Property Values =================== -->

  <!-- See "build.properties.sample" in the top level directory for all     -->
  <!-- property values you must customize for successful building!!!        -->
  <property file="build.properties"/>
  <property file="${user.home}/build.properties"/>

  <!-- Project Properties -->
  <property name="name"                  value="Apache Tomcat" />
  <property name="year"                  value="2001" />
  <property name="version"               value="4.0" />
  <property name="project"               value="jakarta-tomcat" />
  <property name="final.name"            value="${project}-${version}" />
  <property name="final-src.name"        value="${project}-${version}-src" />

  <!-- Build Defaults -->
  <property name="catalina.build"   value="${basedir}/catalina/build"/>
  <property name="jasper.build"     value="${basedir}/jasper/build"/>
  <property name="javaservice.home" value="../javaservice"/>
  <property name="nsis.home"        value="c:\program files\nsis"/>
  <property name="servlet.home"     value="../jakarta-servletapi-4/dist"/>
  <property name="tomcat.build"     value="${basedir}/build"/>
  <property name="tomcat.dist"      value="${basedir}/dist"/>
  <property name="webapps.build"    value="${basedir}/webapps/build"/>
  <property name="webapps.dist"     value="${basedir}/webapps/dist"/>

  <!-- Default AJP and UTIL components for the usual case -->
  <property name="tomcat-ajp.jar"   value="${basedir}/lib/tomcat-ajp.jar"/>
  <property name="tomcat-util.jar"  value="${basedir}/lib/tomcat-util.jar"/>


  <!-- =================== DETECT: Display configuration ================== -->
  <target name="detect"
   description="Display configuration flags">

    <echo>Target: Catalina - Detect ...</echo>
    <ant dir="./catalina" target="flags.display"/>

  </target>


  <!-- ===================== DEPLOY: Create Directories =================== -->
  <target name="deploy-prepare">
    <mkdir dir="${tomcat.build}"/>
  </target>


  <!-- ====================== DEPLOY: Copy Static Files =================== -->
  <target name="deploy-static" depends="deploy-prepare"/>


  <!-- ====================== DEPLOY: Deploy Components =================== -->
  <target name="deploy" depends="deploy-static"
   description="Build and deploy all components">
    <echo>Target: Catalina - Deploy ...</echo>
    <ant dir="./catalina" target="deploy"/>
    <echo>Target: Jasper - Deploy ...</echo>
    <ant dir="./jasper"   target="deploy"/>
    <echo>Target: Webapps - Deploy ...</echo>
    <ant dir="./webapps"  target="deploy"/>
  </target>


  <!-- ====================== COMBO: Clean All Directories ================ -->
  <target name="clean"
   description="Clean all components">
    <delete dir="${tomcat.build}"/>
    <echo>Target: Catalina - Clean ...</echo>
    <ant dir="./catalina" target="clean"/>
    <echo>Target: Jasper - Clean ...</echo>
    <ant dir="./jasper"   target="clean"/>
    <echo>Target: Webapps - Clean ...</echo>
    <ant dir="./webapps"  target="clean"/>
    <delete dir="${tomcat.dist}"/>
  </target>


  <!-- ======================= COMBO: Build All Components ================ -->
  <target name="all"
   description="Clean, build, and deploy all components">
    <echo>Target: Catalina - All ...</echo>
    <ant dir="./catalina" target="all"/>
    <echo>Target: Jasper - All ...</echo>
    <ant dir="./jasper"   target="all"/>
    <echo>Target: Webapps - All ...</echo>
    <ant dir="./webapps"  target="all"/>
  </target>


  <!-- ======================= COMBO: Test All Components ================= -->
  <target name="test"
   description="Unit tests on all components">
    <echo>Target: Catalina - Test ...</echo>
    <ant dir="./catalina" target="test"/>
    <echo>Target: Jasper - Test ...</echo>
    <ant dir="./jasper"   target="test"/>
    <echo>Target: Webapps - Test ...</echo>
    <ant dir="./webapps"  target="test"/>
  </target>


  <!-- ====================== DIST: Create Directories ==================== -->
  <target name="dist-prepare">
    <mkdir dir="${tomcat.dist}"/>
    <mkdir dir="${tomcat.dist}/bin"/>
    <mkdir dir="${tomcat.dist}/common"/>
    <mkdir dir="${tomcat.dist}/common/classes"/>
    <mkdir dir="${tomcat.dist}/common/lib"/>
    <mkdir dir="${tomcat.dist}/conf"/>
    <mkdir dir="${tomcat.dist}/logs"/>
    <mkdir dir="${tomcat.dist}/server"/>
    <mkdir dir="${tomcat.dist}/server/classes"/>
    <mkdir dir="${tomcat.dist}/server/lib"/>
    <mkdir dir="${tomcat.dist}/classes"/>
    <mkdir dir="${tomcat.dist}/lib"/>
    <mkdir dir="${tomcat.dist}/webapps"/>
    <mkdir dir="${tomcat.dist}/work"/>
    <mkdir dir="${tomcat.dist}/temp"/>
  </target>


  <!-- ====================== DIST: Copy Static Files ===================== -->
  <target name="dist-static" depends="dist-prepare">

    <!-- Copy the top-level documentation files -->
    <copy todir="${tomcat.dist}">
      <fileset dir=".">
        <include name="LICENSE"/>
        <include name="INSTALLING.txt"/>
        <include name="BUILDING.txt"/>
        <include name="README.txt"/>
        <include name="RELEASE*"/>
        <include name="RUNNING.txt"/>
      </fileset>
    </copy>

    <!-- Copy the contents of each "build" directory -->
    <copy todir="${tomcat.dist}/bin">
      <fileset dir="${tomcat.build}/bin" />
    </copy>
    <copy todir="${tomcat.dist}/common/classes">
      <fileset dir="${tomcat.build}/common/classes" />
    </copy>
    <copy todir="${tomcat.dist}/common/lib">
      <fileset dir="${tomcat.build}/common/lib" />
    </copy>
    <copy todir="${tomcat.dist}/conf">
      <fileset dir="${tomcat.build}/conf" />
    </copy>
    <copy todir="${tomcat.dist}/server/classes">
      <fileset dir="${tomcat.build}/server/classes" />
    </copy>
    <copy todir="${tomcat.dist}/server/lib">
      <fileset dir="${tomcat.build}/server/lib" />
    </copy>
    <copy todir="${tomcat.dist}/classes">
      <fileset dir="${tomcat.build}/classes" />
    </copy>
    <copy todir="${tomcat.dist}/lib">
      <fileset dir="${tomcat.build}/lib" />
    </copy>
    <copy todir="${tomcat.dist}/webapps">
      <fileset dir="${tomcat.build}/webapps" />
    </copy>

    <!-- Correct permissions and line endings on "bin" scripts -->
    <fixcrlf srcdir="${tomcat.dist}/bin"   includes="*.sh"  eol="lf"/>
    <fixcrlf srcdir="${tomcat.dist}/bin"   includes="*.bat" eol="crlf"/>
    <chmod      dir="${tomcat.dist}/bin"   includes="*.sh"  perm="+x"/>

  </target>


  <!-- ====================== DIST: Create Javadoc ======================== -->
  <target name="dist-javadoc">
    <ant dir="./catalina" target="javadoc"/>
    <mkdir  dir="${tomcat.dist}/webapps/tomcat-docs/catalina/docs/api"/>
    <copy todir="${tomcat.dist}/webapps/tomcat-docs/catalina/docs/api">
      <fileset dir="${catalina.build}/javadoc" />
    </copy>
    <ant dir="./jasper" target="javadoc"/>
    <mkdir  dir="${tomcat.dist}/webapps/tomcat-docs/jasper/docs/api"/>
    <copy todir="${tomcat.dist}/webapps/tomcat-docs/jasper/docs/api">
      <fileset dir="${jasper.build}/javadoc" />
    </copy>
    <mkdir  dir="${tomcat.dist}/webapps/tomcat-docs/servletapi"/>
    <copy todir="${tomcat.dist}/webapps/tomcat-docs/servletapi">
      <fileset dir="${servlet.home}/docs/api" />
    </copy>
  </target>


  <!-- ====================== DIST: Create Sources ======================== -->
  <target name="dist-source">
    <mkdir  dir="${tomcat.dist}/src"/>
    <copy todir="${tomcat.dist}/src">
      <fileset dir="${basedir}">
        <exclude name="**/build/**"/>
        <exclude name="**/dist/**"/>
        <exclude name="build.properties"/>
      </fileset>
    </copy>
  </target>


  <!-- ====================== DIST: Create Archives ======================= -->
  <target name="dist" depends="deploy,dist-static,dist-javadoc"
   description="Create binary distribution">
  </target>


  <!-- ================= DIST: Create Windows Installer =================== -->
  <target name="installer" depends="dist, dist-source"
   description="Create Windows installer" if="execute.installer">
    <echo message="Builds a Windows installer based on Nullsoft Installer"/>
    <echo message="NSIS must be installed in the default directory"/>
    <copy todir="${tomcat.dist}">
      <fileset dir="resources" />
    </copy>
    <copy file="${javaservice.home}/bin/JavaService.exe" 
     tofile="${tomcat.dist}/bin/tomcat.exe" />
    <copy file="tomcat.nsi" tofile="${tomcat.dist}/tomcat.nsi" />
    <exec dir="${tomcat.dist}" executable="${nsis.home}\makensis-bz2.exe">
      <arg value="tomcat.nsi" />
    </exec>
    <move file="${tomcat.dist}/tomcat4.exe" 
     tofile="${tomcat.dist}/${final.name}.exe" />
  </target>


  <!-- ==================== RELEASE: Create Release ======================= -->
  <target name="release" depends="prepare-release,clean,dist,dist-source,installer,package-zip,package-tgz,package-src-zip,package-src-tgz"
   description="Create a Tomcat 4 packaged distribution" />

  <target name="package-zip">
    <zip zipfile="${tomcat.dist}/${final.name}.zip">
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="bin/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="classes/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="common/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="conf/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="lib/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="logs/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="server/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="webapps/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="work/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}"
       includes="temp/**" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="LICENSE" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="README.txt" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="RELEASE-NOTES-*" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="RELEASE-PLAN-*" />
      <zipfileset dir="${tomcat.dist}" prefix="${final.name}" 
       includes="RUNNING.txt" />
    </zip>
  </target>

  <target name="prepare-release">
    <condition property="execute.installer">
      <and>
        <os family="windows" />
        <available file="${javaservice.home}/bin/JavaService.exe" />
        <available file="${nsis.home}\makensis-bz2.exe" />
      </and>
    </condition>
  </target>

  <target name="package-tgz">
    <mkdir dir="${tomcat.dist}/${final.name}" />
    <copy todir="${tomcat.dist}/${final.name}">
      <fileset dir="${tomcat.dist}">
        <include name="bin/**" />
        <include name="classes/**" />
        <include name="common/**" />
        <include name="conf/**" />
        <include name="lib/**" />
        <include name="logs/**" />
        <include name="server/**" />
        <include name="webapps/**" />
        <include name="work/**" />
        <include name="temp/**" />
        <include name="LICENSE" />
        <include name="README.txt" />
        <include name="RELEASE-NOTES-*" />
        <include name="RELEASE-PLAN-*" />
        <include name="RUNNING.txt" />
      </fileset>
    </copy>
    <fixcrlf srcdir="${tomcat.dist}/${final.name}" 
     includes="*.txt,LICENSE" eol="lf"/>
    <fixcrlf srcdir="${tomcat.dist}/${final.name}/conf" eol="lf"/>
    <tar longfile="gnu" tarfile="${tomcat.dist}/${final.name}.tar">
      <tarfileset dir="${tomcat.dist}" mode="755">
        <include name="${final.name}/bin/catalina.sh" />
        <include name="${final.name}/bin/digest.sh" />
        <include name="${final.name}/bin/jasper.sh" />
        <include name="${final.name}/bin/jspc.sh" />
        <include name="${final.name}/bin/setclasspath.sh" />
        <include name="${final.name}/bin/startup.sh" />
        <include name="${final.name}/bin/shutdown.sh" />
        <include name="${final.name}/bin/tool-wrapper.sh" />
      </tarfileset>
      <tarfileset dir="${tomcat.dist}">
        <include name="${final.name}/**" />
        <exclude name="${final.name}/bin/catalina.sh" />
        <exclude name="${final.name}/bin/digest.sh" />
        <exclude name="${final.name}/bin/jasper.sh" />
        <exclude name="${final.name}/bin/jspc.sh" />
        <exclude name="${final.name}/bin/setclasspath.sh" />
        <exclude name="${final.name}/bin/startup.sh" />
        <exclude name="${final.name}/bin/shutdown.sh" />
        <exclude name="${final.name}/bin/tool-wrapper.sh" />
      </tarfileset>
    </tar>
    <delete dir="${tomcat.dist}/${final.name}" />
    <gzip zipfile="${tomcat.dist}/${final.name}.tar.gz"
     src="${tomcat.dist}/${final.name}.tar"/>
    <delete file="${tomcat.dist}/${final.name}.tar" />
  </target>

  <target name="package-src-zip">
    <zip zipfile="${tomcat.dist}/${final-src.name}.zip">
      <zipfileset dir="${tomcat.dist}/src" prefix="${final-src.name}" />
    </zip>
  </target>

  <target name="package-src-tgz">
    <mkdir dir="${tomcat.dist}/${final-src.name}" />
    <copy todir="${tomcat.dist}/${final-src.name}">
      <fileset dir="${tomcat.dist}/src">
        <include name="**" />
      </fileset>
    </copy>
    <fixcrlf srcdir="${tomcat.dist}/${final-src.name}" 
     excludes="**/*.jar,**/*.gif,**/*.bmp,**/*.jpg,**/*.ico" eol="lf"/>
    <tar longfile="gnu" tarfile="${tomcat.dist}/${final-src.name}.tar">
      <tarfileset dir="${tomcat.dist}">
        <include name="${final-src.name}/**" />
      </tarfileset>
    </tar>
    <delete dir="${tomcat.dist}/${final-src.name}" />
    <gzip zipfile="${tomcat.dist}/${final-src.name}.tar.gz"
     src="${tomcat.dist}/${final-src.name}.tar"/>
    <delete file="${tomcat.dist}/${final-src.name}.tar" />
  </target>


</project>
